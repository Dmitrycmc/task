{"version":3,"sources":["components/icons/check-icon.svg","data lazy /^/.*/overview/.json$/ groupOptions: {} namespace object","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","helpers/elements.js","helpers/event-listeners.js","components/check-box/check-box.js","components/icons/checkbox-icon.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","helpers/utils.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","components/chart/line.js","components/chart/bars.js","helpers/date-time.js","components/tooltip/tooltip.js","components/grid/grid.js","components/chart/chart.js","components/map/map.js","components/switch-button/switch-button.js","index.js","components/footer/footer.js"],"names":["module","exports","__webpack_require__","p","map","./1/overview.json","./2/overview.json","./3/overview.json","./4/overview.json","./5/overview.json","webpackAsyncContext","req","ids","e","then","id","t","Promise","resolve","Error","code","keys","Object","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_setPrototypeOf","o","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","isNativeReflectConstruct","a","apply","instance","Function","bind","arguments","createElement","className","tag","node","document","createSvgElement","attrs","createElementNS","baseVal","forEach","setAttribute","addListener","element","event","listener","addEventListener","removeListener","removeEventListener","addDragAndDropListeners","getTouchCoords","x","touches","clientX","y","clientY","offset","offsetX","offsetY","getMouseOffset","onMouseMove","buttons","body","onMouseUp","mouseCoords","getMouseCoords","cornerCoords","box","getBoundingClientRect","touchCoords","left","top","getTouchOffset","onTouchMove","onTouchEnd","check_box_check_box","color","text","onChange","checked","wrapper","style","backgroundColor","borderColor","mark","label","textContent","appendChild","img","icon","createCheckIcon","opacity","_classCallCheck","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","minmax","min","max","_ref","_ref2","y0","y1","Math","boundBy","right","relToAbs","rel","b","absToRel","abs","calcYBounds","xData","yData","x0Rel","x1Rel","type","j","x0","x1","k","el","findClosestIndex","xRel","getColumns","types","columns","xKey","filter","xColumn","column","slice","yColumns","reduce","source","ownKeys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","_objectSpread","arrSum","colorToGrb","c","replace","r","parseInt","g","sdf","split","generatePoints","area","yBase","yFull","yVal","xMin","dx","points","Line","yColumn","_this","this","yColumnBase","yColumnFull","_yColumnBase","_area","_xColumn","_yColumn","_chartLine","_mapLine","_visible","_color","stroke-linejoin","vector-effect","stroke","fill","intersectionLineV","x2","intersectionPoint","_intersectionLineH","_intersectionPoint0","_intersectionPoint1","_intersectionPoint2","_intersectionPoint3","_intersectionPoint4","mapNode","val","_ref4","_ref3","svgW","svgH","display","stroke-width","_selectedBar","xMouse","step","ceil","background","window","getComputedStyle","c1","c2","_colorToGrb","r1","g1","b1","_colorToGrb2","r2","g2","b2","rgbToString","toFixed","calcOpacityColor","days","months","MARGIN","PADDING","WIDTH","LINE_HEIGHT","Tooltip","parentNode","transformY","transformX","rect","rx","ry","width","transform","svgBox","height","xAbs","data","percentage","unit","childNodes","removeChild","xText","ms","date","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","year","getFullYear","tooltipDate","name","yName","dy","text-anchor","Grid","resize","_this$node$parentNode","_this$node$parentNode2","countV","countH","yStep","xStep","yCur","line","y2","xCur","typeToConstructor","_len","_key","bar","_len2","_key2","Bars","_len3","_key3","chart_chart","title","tooltip","grid","chartSvg","_prepareData","originY2","colors","names","stacked","doubleY","y_scaled","globalYBounds","_getColumns","globalMax","values","factor","bound","prepareData","mouseXFixed","keyToYBound","chartViewportTransform","chartAreaXTransform","controls","header","init","visualisation","reverse","assign","_createMap","mapSvg","svgWrapper","mapViewportTransform","mapOverlayLeft","mapOverlayRight","mapWindow","windowLeftEdge","windowRightEdge","append","appendBeforeOverlay","insertBefore","setMapViewport","w","h","setMapWindow","mapWidth","createMap","updateIntersections","_chartSvg$getBounding","tooltipData","visible","render","updateYArea","yColumnSum","getYBounds","_ref5","globalMin","yChartArea","yMapArea","deepUpdateYArea","updateXBounds","setXChartArea","onResize","_chartSvg$getBounding2","svgWidth","svgHeight","_mapNode$getBoundingC","mapHeight","createCheckBox","getMapX","getChartX","coords","switch_button_switch_button","btn","night","charts","root","getElementById","footer","createSwitchButton","createFooter","dataPromise","chartNum","dataNum","default","_createChart","createChart"],"mappings":"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","file":"static/js/main.4e459c0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-icon.fa65b9e0.svg\";","var map = {\n\t\"./1/overview.json\": [\n\t\t12,\n\t\t0\n\t],\n\t\"./2/overview.json\": [\n\t\t13,\n\t\t1\n\t],\n\t\"./3/overview.json\": [\n\t\t14,\n\t\t2\n\t],\n\t\"./4/overview.json\": [\n\t\t15,\n\t\t3\n\t],\n\t\"./5/overview.json\": [\n\t\t16,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 10;\nmodule.exports = webpackAsyncContext;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export const createElement = (className, tag = 'div') => {\r\n    const node = document.createElement(tag);\r\n    if (className) node.className = className;\r\n    return node;\r\n};\r\n\r\nexport const createSvgElement = (tag, attrs, className) => {\r\n    const node = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    if (className) {\r\n        node.className.baseVal = className;\r\n    }\r\n    if (attrs) {\r\n        Object.keys(attrs).forEach(key => {\r\n            node.setAttribute(key, attrs[key]);\r\n        });\r\n    }\r\n    return node;\r\n};\r\n","export const addListener = (element, event, listener) => {\r\n    element.addEventListener(event, listener, false);\r\n};\r\n\r\nexport const removeListener = (element, event, listener) => {\r\n    element.removeEventListener(event, listener);\r\n};\r\n\r\nexport const addDragAndDropListeners = (element, listener) => {\r\n    const getMouseCoords = e => ({ x: e.clientX, y: e.clientY });\r\n    const getTouchCoords = e => ({ x: e.touches[0].clientX, y: e.touches[0].clientY });\r\n    const getMouseOffset = e => ({ x: e.offsetX, y: e.offsetY });\r\n    const getTouchOffset = e => {\r\n        const box = element.getBoundingClientRect();\r\n        const touchCoords = getTouchCoords(e);\r\n        return {\r\n            x: touchCoords.x - box.left,\r\n            y: touchCoords.y - box.top\r\n        };\r\n    };\r\n\r\n    addListener(element, 'mousedown', e => {\r\n        const offset = getMouseOffset(e);\r\n\r\n        const onMouseMove = e => {\r\n            if (e.buttons !== 1) {\r\n                removeListener(document.body, 'mousemove', onMouseMove);\r\n                removeListener(document.body, 'mouseup', onMouseUp);\r\n            } else {\r\n                const mouseCoords = getMouseCoords(e);\r\n                const cornerCoords = { x: mouseCoords.x - offset.x, y: mouseCoords.y + offset.y };\r\n                listener(cornerCoords);\r\n            }\r\n        };\r\n\r\n        function onMouseUp() {\r\n            removeListener(document.body, 'mousemove', onMouseMove);\r\n            removeListener(document.body, 'mouseup', onMouseUp);\r\n        }\r\n\r\n        addListener(document.body, 'mousemove', onMouseMove);\r\n        addListener(document.body, 'mouseup', onMouseUp);\r\n    });\r\n\r\n    addListener(element, 'touchstart', e => {\r\n        const offset = getTouchOffset(e);\r\n\r\n        const onTouchMove = e => {\r\n            const touchCoords = getTouchCoords(e);\r\n            const cornerCoords = { x: touchCoords.x - offset.x, y: touchCoords.y + offset.y };\r\n            listener(cornerCoords);\r\n        };\r\n\r\n        function onTouchEnd() {\r\n            removeListener(document.body, 'touchmove', onTouchMove);\r\n            removeListener(document.body, 'touchend', onTouchEnd);\r\n            removeListener(document.body, 'touchcancel', onTouchEnd);\r\n        }\r\n\r\n        addListener(document.body, 'touchmove', onTouchMove);\r\n        addListener(document.body, 'touchend', onTouchEnd);\r\n        addListener(document.body, 'touchcancel', onTouchEnd);\r\n    });\r\n};\r\n","import './check-box.css';\r\nimport { createElement } from '../../helpers/elements';\r\nimport { addListener } from '../../helpers/event-listeners';\r\nimport createCheckIcon from '../icons/checkbox-icon';\r\n\r\nexport default (color, text, onChange) => {\r\n    let checked = true;\r\n\r\n    const wrapper = createElement('cb_wrapper');\r\n    wrapper.style.backgroundColor = color;\r\n    wrapper.style.borderColor = color;\r\n\r\n    const mark = createElement('mark');\r\n\r\n    const label = createElement('cb_label');\r\n    label.textContent = text;\r\n\r\n    wrapper.appendChild(mark);\r\n    wrapper.appendChild(label);\r\n\r\n    mark.appendChild(createCheckIcon());\r\n\r\n    addListener(wrapper, 'click', () => {\r\n        checked = !checked;\r\n        onChange && onChange(checked);\r\n        wrapper.style.backgroundColor = checked ? color : 'transparent';\r\n        label.style.color = checked ? 'white' : color;\r\n        mark.style.opacity = +checked;\r\n    });\r\n\r\n    return wrapper;\r\n};\r\n","import icon from './check-icon.svg';\r\nimport { createElement } from '../../helpers/elements';\r\n\r\nexport default () => {\r\n    const img = createElement('icon', 'img');\r\n    img.setAttribute('src', icon);\r\n    return img;\r\n};\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export const minmax = arr => {\r\n    let min = null,\r\n        max = null;\r\n\r\n    arr.forEach(([y0, y1]) => {\r\n        min = min === null ? y0 : Math.min(min, y0);\r\n        max = max === null ? y1 : Math.max(max, y1);\r\n    });\r\n\r\n    return [min, max];\r\n};\r\n\r\nexport const boundBy = (x, left, right) => {\r\n    x = left === undefined ? x : Math.max(left, x);\r\n    x = right === undefined ? x : Math.min(right, x);\r\n    return x;\r\n};\r\n\r\nexport const relToAbs = (rel, a, b) => a + rel * (b - a);\r\n\r\nexport const absToRel = (abs, a, b) => (abs - a) / (b - a);\r\n\r\nexport const calcYBounds = (xData, yData, x0Rel, x1Rel, type) => {\r\n    if (!yData) return [0, 0];\r\n\r\n    let i = 1;\r\n    let j = xData.length - 1;\r\n\r\n    const x0 = relToAbs(x0Rel, xData[0], xData[j]);\r\n    const x1 = relToAbs(x1Rel, xData[0], xData[j]);\r\n\r\n    while (xData[i] < x0) i++;\r\n    while (xData[j] > x1) j--;\r\n\r\n    let min = yData[i],\r\n        max = yData[i];\r\n\r\n    for (let k = i + 1; k <= j; k++) {\r\n        const el = yData[k];\r\n        min = Math.min(min, el);\r\n        max = Math.max(max, el);\r\n    }\r\n\r\n    return [type === 'line' ? min : 0, max];\r\n};\r\n\r\nexport const findClosestIndex = (xData, xRel) => {\r\n    if (!xRel) return null;\r\n    let x = relToAbs(xRel, xData[0], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    i = (xData[i - 1] + xData[i]) / 2 < x ? i : i - 1;\r\n\r\n    return i;\r\n};\r\n\r\n/*\r\nexport const interpolate = (xData, yData, xRel) => {\r\n    if (!xRel) return null;\r\n    const x = relToAbs(xRel, xData[0], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    const y = yData[i - 1] + ((x - xData[i - 1]) * (yData[i] - yData[i - 1])) / (xData[i] - xData[i - 1]);\r\n    return y;\r\n};\r\n*/\r\n\r\nexport const getColumns = (types, columns) => {\r\n    const xKey = Object.keys(types).filter(key => types[key] === 'x')[0];\r\n    const xColumn = columns.filter(column => column[0] === xKey)[0].slice(1);\r\n\r\n    const keys = Object.keys(types).filter(key => types[key] !== 'x');\r\n    const yColumns = keys.reduce(\r\n        (obj, key) => ({ ...obj, [key]: columns.filter(column => column[0] === key)[0].slice(1) }),\r\n        {}\r\n    );\r\n\r\n    return { xColumn, yColumns, keys };\r\n};\r\n\r\nexport const arrSum = (a, b) => {\r\n    if (!a) return [...b];\r\n    return a.map((el, i) => el + b[i]);\r\n};\r\n\r\nconst colorToGrb = c => {\r\n    c = c.replace(/ /g, '');\r\n    if (c[0] === '#') {\r\n        if (c.length === 4) {\r\n            // #rgb\r\n            return {\r\n                r: parseInt(c[1] + c[1], 16),\r\n                g: parseInt(c[2] + c[2], 16),\r\n                b: parseInt(c[3] + c[3], 16)\r\n            };\r\n        } else {\r\n            // #rrggbb\r\n            return {\r\n                r: parseInt(c.slice(1, 3), 16),\r\n                g: parseInt(c.slice(3, 5), 16),\r\n                b: parseInt(c.slice(5, 7), 16)\r\n            };\r\n        }\r\n    } else {\r\n        // rgb(r,g,b)\r\n        const sdf = c.slice(4, -1).split(',');\r\n        return {\r\n            r: +sdf[0],\r\n            g: +sdf[1],\r\n            b: +sdf[2]\r\n        };\r\n    }\r\n};\r\n\r\nconst rgbToString = ({ r, g, b }) => `rgb(${r}, ${g}, ${b})`;\r\n\r\nexport const calcOpacityColor = (c1, c2, opacity) => {\r\n    const { r: r1, g: g1, b: b1 } = colorToGrb(c1);\r\n    const { r: r2, g: g2, b: b2 } = colorToGrb(c2);\r\n    return rgbToString({\r\n        r: (opacity * r1 + (1 - opacity) * r2).toFixed(),\r\n        g: (opacity * g1 + (1 - opacity) * g2).toFixed(),\r\n        b: (opacity * b1 + (1 - opacity) * b2).toFixed()\r\n    });\r\n};\r\n\r\nexport const prepareData = data => {\r\n    const { colors, names, types, columns, percentage, stacked, y_scaled: doubleY } = data;\r\n\r\n    var originY2;\r\n    let globalYBounds = {};\r\n    let { xColumn, yColumns, keys } = getColumns(types, columns);\r\n\r\n    keys.forEach(key => {\r\n        globalYBounds[key] = calcYBounds(xColumn, yColumns[key], 0, 1, types[key]);\r\n    });\r\n\r\n    const globalMax = minmax(Object.values(globalYBounds))[1];\r\n\r\n    let unit = '',\r\n        factor = 1;\r\n    if (globalMax > 1000000000) {\r\n        unit = 'M';\r\n        factor = 1000000;\r\n    }\r\n    if (globalMax > 1000000) {\r\n        unit = 'K';\r\n        factor = 1000;\r\n    }\r\n\r\n    keys.forEach(key => {\r\n        yColumns[key] = yColumns[key].map(el => el / factor);\r\n        globalYBounds[key] = globalYBounds[key].map(bound => bound / factor);\r\n    });\r\n\r\n    if (doubleY) {\r\n        originY2 = yColumns.y1;\r\n        yColumns.y1 = yColumns.y1.map(el => relToAbs(absToRel(el, ...globalYBounds.y1), ...globalYBounds.y0));\r\n    }\r\n\r\n    return {\r\n        colors,\r\n        names,\r\n        types,\r\n        percentage,\r\n        stacked,\r\n        doubleY,\r\n        xColumn,\r\n        yColumns,\r\n        keys,\r\n        globalYBounds,\r\n        unit,\r\n        originY2\r\n    };\r\n};\r\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import { createSvgElement } from '../../helpers/elements';\r\nimport { absToRel, findClosestIndex } from '../../helpers/utils';\r\n\r\nconst generatePoints = (area, x, y, yBase = [], yFull = []) => {\r\n    const length = x.length;\r\n\r\n    const yVal = i => ((yBase[i] || 0) + y[i]) * (100 / yFull[i] || 1);\r\n\r\n    let xMin = x[0],\r\n        dx = x[length - 1] - xMin,\r\n        points = `0,${yVal(0)} `;\r\n\r\n    for (let i = 1; i < length; i++) {\r\n        points += `${(x[i] - xMin) / dx},${yVal(i)} `;\r\n    }\r\n\r\n    return area ? `0,0 ${points} 1,0` : points;\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        if (!this._area) {\r\n            this._intersectionPoint0.setAttribute('opacity', +val);\r\n            this._intersectionLineH.setAttribute('opacity', +val);\r\n        }\r\n        this._chartLine.setAttribute('opacity', +val);\r\n        this._mapLine.setAttribute('opacity', +val);\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(area, keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n        this._area = area;\r\n\r\n        const points = generatePoints(area, xColumn, yColumn);\r\n        this._chartLine = createSvgElement(\r\n            area ? 'polygon' : 'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'chart-line'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'map-line'\r\n        );\r\n\r\n        const intersectionLineV = createSvgElement(\r\n            'line',\r\n            { x1: 0, x2: 0, y0: 0, y1: 1, 'vector-effect': 'non-scaling-stroke' },\r\n            'intersection-line'\r\n        );\r\n\r\n        this.intersectionPoint = createSvgElement('g', {}, '');\r\n        this.intersectionPoint.appendChild(intersectionLineV);\r\n\r\n        if (!area) {\r\n            this._intersectionLineH = createSvgElement(\r\n                'line',\r\n                {\r\n                    x1: -1,\r\n                    x2: 1,\r\n                    y0: 0,\r\n                    y1: 0,\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'intersection-line'\r\n            );\r\n\r\n            this._intersectionPoint0 = createSvgElement(\r\n                'circle',\r\n                { r: 5, stroke: color, fill: 'white' },\r\n                'intersection-point'\r\n            );\r\n            this._intersectionPoint1 = createSvgElement('g', {}, '');\r\n            this._intersectionPoint2 = createSvgElement('g', {}, 'animated');\r\n            this._intersectionPoint3 = createSvgElement('g', {}, '');\r\n            this._intersectionPoint4 = createSvgElement('g', {}, 'animated');\r\n            this._intersectionPoint1.appendChild(this._intersectionPoint0);\r\n            this._intersectionPoint2.appendChild(this._intersectionPoint1);\r\n            this._intersectionPoint3.appendChild(this._intersectionLineH);\r\n            this._intersectionPoint3.appendChild(this._intersectionPoint2);\r\n            this._intersectionPoint4.appendChild(this._intersectionPoint3);\r\n            this.intersectionPoint.appendChild(this._intersectionPoint4);\r\n        }\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n    }\r\n\r\n    onChange = (yColumnBase, yColumnFull) => {\r\n        this._yColumnBase = yColumnBase;\r\n        const points = generatePoints(this._area, this._xColumn, this._yColumn, yColumnBase, yColumnFull);\r\n        this._chartLine.setAttribute('points', points);\r\n        this._mapLine.setAttribute('points', points);\r\n    };\r\n\r\n    onMouseMove(xRel, x0, x1, y0, y1, svgW, svgH) {\r\n        let x = absToRel(xRel, x0, x1);\r\n        if (x < 0 || x > 1) {\r\n            this.intersectionPoint.style.display = 'none';\r\n            return;\r\n        }\r\n\r\n        this.intersectionPoint.style.display = 'initial';\r\n        const i = findClosestIndex(this._xColumn, xRel);\r\n        x = absToRel(this._xColumn[i], this._xColumn[0], this._xColumn[this._xColumn.length - 1]);\r\n        this.intersectionPoint.setAttribute('transform', `scale(${svgW} ${svgH}) translate(${absToRel(x, x0, x1)} 0) `);\r\n\r\n        if (!this._area) {\r\n            const y = this._yColumn[i];\r\n\r\n            this._intersectionPoint1.setAttribute('transform', `scale(${1 / svgW} ${1 / svgH})`);\r\n            this._intersectionPoint2.setAttribute('transform', `scale(1 ${y1 - y0})`);\r\n            this._intersectionPoint3.setAttribute('transform', `translate(0 ${y})`);\r\n            this._intersectionPoint4.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n        }\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport { calcOpacityColor } from '../../helpers/utils';\r\n\r\nconst generatePoints = (x, y, yBase) => {\r\n    // unused x\r\n    const length = x.length;\r\n\r\n    if (!yBase) {\r\n        let points = `0,0 0,${y[0]} `;\r\n\r\n        for (let i = 1; i < length; i++) {\r\n            points += `${i / length},${y[i - 1]} ${i / length},${y[i]} `;\r\n        }\r\n        points += `1,${y[length - 1]} 1,0`;\r\n\r\n        return points;\r\n    } else {\r\n        let points = `0,0 0,${yBase[0] + y[0]} `;\r\n\r\n        for (let i = 1; i < length; i++) {\r\n            points += `${i / length},${yBase[i - 1] + y[i - 1]} ${i / length},${yBase[i] + y[i]} `;\r\n        }\r\n        points += `1,${yBase[length - 1] + y[length - 1]} 1,0`;\r\n\r\n        return points;\r\n    }\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._chartLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._selectedBar.setAttribute('fill', 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        this._chartLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._selectedBar = createSvgElement(\r\n            'rect',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'map-bar'\r\n        );\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n        this.node.appendChild(this._selectedBar);\r\n    }\r\n\r\n    onChange = yColumnBase => {\r\n        this._yColumnBase = yColumnBase;\r\n        const points = generatePoints(this._xColumn, this._yColumn, yColumnBase);\r\n        this._chartLine.setAttribute('points', points);\r\n        this._mapLine.setAttribute('points', points);\r\n    };\r\n\r\n    onMouseMove(xMouse) {\r\n        if (!xMouse) {\r\n            this._chartLine.setAttribute('fill', this._visible ? this._color : 'transparent');\r\n            this._selectedBar.setAttribute('fill', 'transparent');\r\n            return;\r\n        }\r\n\r\n        if (this._visible) {\r\n            const step = 1 / this._xColumn.length;\r\n            const i = Math.ceil(xMouse / step);\r\n            this._selectedBar.setAttribute('x', (i - 1) * step);\r\n            this._selectedBar.setAttribute('y', this._yColumnBase ? this._yColumnBase[i - 1] : 0);\r\n            this._selectedBar.setAttribute('width', step);\r\n            this._selectedBar.setAttribute('height', this._yColumn[i - 1]);\r\n            this._selectedBar.setAttribute('fill', this._color);\r\n            const background = window.getComputedStyle(document.body).backgroundColor;\r\n            this._chartLine.setAttribute('fill', calcOpacityColor(this._color, background, 0.5));\r\n        }\r\n    }\r\n}\r\n","export const tooltipDate = ms => {\r\n    const date = new Date(ms);\r\n    const dayOfWeek = days[date.getDay()];\r\n    const dayOfMonth = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    return `${dayOfWeek}, ${dayOfMonth} ${month} ${year}`;\r\n};\r\n\r\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jule', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './tooltip.css';\r\nimport { tooltipDate } from '../../helpers/date-time';\r\n\r\nconst MARGIN = 20;\r\nconst PADDING = 10;\r\nconst WIDTH = 180;\r\nconst LINE_HEIGHT = 18;\r\n\r\nexport default class Tooltip {\r\n    constructor(parentNode) {\r\n        this.transformY = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.transformX = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.rect = createSvgElement(\r\n            'rect',\r\n            { x: MARGIN, y: MARGIN, rx: 15, ry: 15, width: WIDTH, transform: 'scale(1 -1)' },\r\n            'tt_rect'\r\n        );\r\n        this.text = createSvgElement('text', {\r\n            x: MARGIN + PADDING,\r\n            y: MARGIN + PADDING + LINE_HEIGHT,\r\n            transform: 'scale(1 -1)'\r\n        });\r\n        this.transformY.appendChild(this.transformX);\r\n        this.transformX.appendChild(this.rect);\r\n        this.transformX.appendChild(this.text);\r\n        parentNode.appendChild(this.transformY);\r\n    }\r\n\r\n    resize() {\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n        this.transformY.setAttribute('transform', `translate(0 ${svgBox.height})`);\r\n    }\r\n\r\n    render(xRel, xAbs, data, percentage, unit) {\r\n        if (!data || xRel < 0 || xRel > 1) {\r\n            this.transformY.setAttribute('opacity', '0');\r\n            return;\r\n        }\r\n\r\n        this.transformY.setAttribute('opacity', '1');\r\n        this.rect.setAttribute('height', (data.length + 1) * LINE_HEIGHT + 2 * PADDING);\r\n\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n\r\n        while (this.text.childNodes.length) {\r\n            this.text.removeChild(this.text.childNodes[0]);\r\n        }\r\n\r\n        const xText = createSvgElement('tspan', {}, 'tt_bold');\r\n        xText.textContent = tooltipDate(xAbs);\r\n        this.text.appendChild(xText);\r\n\r\n        data.forEach(({ y, color, name }) => {\r\n            const yName = createSvgElement('tspan', { x: MARGIN + PADDING, dy: LINE_HEIGHT });\r\n            yName.textContent = `${name}: `;\r\n            const yVal = createSvgElement(\r\n                'tspan',\r\n                { fill: color, 'text-anchor': 'end', x: MARGIN + WIDTH - PADDING },\r\n                'tt_bold'\r\n            );\r\n            yVal.textContent = percentage ? `${(100 * y).toFixed(2)}%` : y.toFixed() + (unit ? ' ' + unit : '');\r\n            this.text.appendChild(yName);\r\n            this.text.appendChild(yVal);\r\n        });\r\n\r\n        if (xRel < 0.5) {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width} 0)`);\r\n        } else {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width - 2 * MARGIN - WIDTH} 0)`);\r\n        }\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './grid.css';\r\nimport { absToRel } from '../../helpers/utils';\r\n\r\nconst ROW_HEIGHT = 18 * 10;\r\nconst COL_WIDTH = 18 * 10;\r\n\r\nexport default class Grid {\r\n    constructor(parentNode) {\r\n        this.node = createSvgElement('g', {});\r\n        this.transform = createSvgElement('g', {}, 'grid_wrapper');\r\n\r\n        parentNode.appendChild(this.node);\r\n        this.node.appendChild(this.transform);\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        const { width, height } = this.node.parentNode.getBoundingClientRect();\r\n        this.node.setAttribute('transform', `scale(${width} ${height})`);\r\n    }\r\n\r\n    render(x0, x1, y0, y1) {\r\n        const { height, width } = this.node.parentNode.getBoundingClientRect();\r\n\r\n        const countV = height / ROW_HEIGHT;\r\n        const countH = width / COL_WIDTH;\r\n\r\n        let i = 0;\r\n        while ((y1 - y0) / sdf[i] < countV) i++;\r\n        const yStep = sdf[i];\r\n        let j = 0;\r\n        while ((x1 - x0) / sdf[j] < countH) j++;\r\n        const xStep = sdf[j];\r\n\r\n        this.transform.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n\r\n        while (this.transform.childNodes.length) {\r\n            this.transform.removeChild(this.transform.childNodes[0]);\r\n        }\r\n\r\n        i = Math.ceil(y0 / yStep);\r\n        let yCur = i * yStep;\r\n\r\n        while (yCur <= y1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                { x1: 0, x2: 1, y1: yCur, y2: yCur, 'vector-effect': 'non-scaling-stroke' },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            yCur += yStep;\r\n        }\r\n\r\n        j = Math.ceil(x0 / xStep);\r\n        let xCur = j * xStep;\r\n\r\n        while (xCur <= x1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                {\r\n                    y1: y0,\r\n                    y2: y1,\r\n                    x1: absToRel(xCur, x0, x1),\r\n                    x2: absToRel(xCur, x0, x1),\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            xCur += xStep;\r\n        }\r\n    }\r\n}\r\n\r\nconst sdf = [\r\n    100000000,\r\n    50000000,\r\n    20000000,\r\n    10000000,\r\n    5000000,\r\n    2000000,\r\n    1000000,\r\n    500000,\r\n    200000,\r\n    100000,\r\n    50000,\r\n    20000,\r\n    10000,\r\n    5000,\r\n    2000,\r\n    1000,\r\n    500,\r\n    200,\r\n    100,\r\n    50,\r\n    20,\r\n    10,\r\n    5,\r\n    2,\r\n    1,\r\n    0.5,\r\n    0.2,\r\n    0.1,\r\n    0.05,\r\n    0.02,\r\n    0.01\r\n];\r\n","import createCheckBox from '../check-box/check-box';\r\nimport Line from './line';\r\nimport Bars from './bars';\r\nimport { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './chart.css';\r\nimport {\r\n    absToRel,\r\n    arrSum,\r\n    boundBy,\r\n    calcYBounds,\r\n    findClosestIndex,\r\n    minmax,\r\n    prepareData\r\n} from '../../helpers/utils';\r\nimport { addDragAndDropListeners, addListener, removeListener } from '../../helpers/event-listeners';\r\nimport createMap from '../map/map';\r\nimport Tooltip from '../tooltip/tooltip';\r\nimport Grid from '../grid/grid';\r\n\r\nconst typeToConstructor = {\r\n    line: (...props) => new Line(false, ...props),\r\n    bar: (...props) => new Bars(...props),\r\n    area: (...props) => new Line(true, ...props)\r\n};\r\n\r\nconst MIN_WIN_WIDTH = 0.05;\r\n\r\nexport default (data, title) => {\r\n    const chartSvg = createSvgElement('svg', {}, 'ctr_chart');\r\n\r\n    const {\r\n        colors,\r\n        names,\r\n        types,\r\n        percentage,\r\n        stacked,\r\n        doubleY,\r\n        xColumn,\r\n        yColumns,\r\n        keys,\r\n        globalYBounds,\r\n        unit\r\n    } = prepareData(data);\r\n\r\n    let x0 = 0;\r\n    let x1 = 1;\r\n    let y0 = 0;\r\n    let y1 = 1;\r\n    let xMouse = null;\r\n    let mouseXFixed = false;\r\n    let yColumnFull = undefined;\r\n\r\n    let keyToYBound = {};\r\n    const getYBounds = key =>\r\n        keyToYBound[key] || (keyToYBound[key] = calcYBounds(xColumn, yColumns[key], x0, x1, types[key]));\r\n    const resetYBoundsCash = () => (keyToYBound = {});\r\n\r\n    const chartViewportTransform = createSvgElement('g');\r\n    const chartAreaXTransform = createSvgElement('g');\r\n\r\n    const wrapper = createElement('crt_wrapper');\r\n    const controls = createElement('crt_controls');\r\n    const header = createElement();\r\n    header.textContent = title;\r\n\r\n    let tooltip, grid;\r\n\r\n    wrapper.appendChild(header);\r\n    wrapper.appendChild(chartSvg);\r\n    chartSvg.appendChild(chartViewportTransform);\r\n    chartViewportTransform.appendChild(chartAreaXTransform);\r\n    wrapper.appendChild(controls);\r\n\r\n    const init = () => {\r\n        const visualisation = keys\r\n            .reverse()\r\n            .map(key => ({\r\n                [key]: typeToConstructor[types[key]](key, xColumn, yColumns[key], colors[key])\r\n            }))\r\n            .reduce((obj, line) => Object.assign(obj, line), {});\r\n\r\n        const {\r\n            mapNode,\r\n            setMapViewport,\r\n            appendBeforeOverlay,\r\n            setMapWindow,\r\n            windowLeftEdge,\r\n            windowRightEdge,\r\n            mapWindow\r\n        } = createMap();\r\n\r\n        const updateIntersections = xRel => {\r\n            const { width, height } = chartSvg.getBoundingClientRect();\r\n            if (xRel !== -1) xMouse = xRel;\r\n\r\n            const i = findClosestIndex(xColumn, xMouse);\r\n\r\n            const tooltipData =\r\n                xMouse &&\r\n                keys\r\n                    .filter(key => visualisation[key].visible)\r\n                    .map(key => ({\r\n                        y: yColumns[key][i] / (yColumnFull ? yColumnFull[i] : 1),\r\n                        color: colors[key],\r\n                        name: names[key]\r\n                    }));\r\n            tooltip.render(absToRel(xMouse, x0, x1), xColumn[i], tooltipData, percentage, unit);\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].onMouseMove(xMouse, x0, x1, y0, y1, width, height);\r\n            });\r\n        };\r\n\r\n        const updateYArea = () => {\r\n            let yColumnSum = undefined;\r\n            yColumnFull = undefined;\r\n\r\n            if (percentage) {\r\n                keys.filter(key => visualisation[key].visible).forEach(key => {\r\n                    yColumnFull = arrSum(yColumnFull, yColumns[key]);\r\n                });\r\n            }\r\n\r\n            keys.filter(key => visualisation[key].visible).forEach(key => {\r\n                visualisation[key].onChange(stacked ? yColumnSum : undefined, percentage ? yColumnFull : undefined);\r\n                if (stacked) yColumnSum = arrSum(yColumnSum, yColumns[key]);\r\n            });\r\n\r\n            if (!percentage) {\r\n                var [min, max] = stacked\r\n                    ? calcYBounds(xColumn, yColumnSum, x0, x1, 'bar')\r\n                    : minmax(keys.filter(key => visualisation[key].visible).map(key => getYBounds(key)));\r\n\r\n                // todo: need only one time\r\n                var [globalMin, globalMax] = stacked\r\n                    ? calcYBounds(xColumn, yColumnSum, 0, 1, 'bar')\r\n                    : doubleY\r\n                    ? globalYBounds.y0\r\n                    : minmax(keys.filter(key => visualisation[key].visible).map(key => globalYBounds[key]));\r\n\r\n                y0 = min;\r\n                y1 = max;\r\n            }\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].yChartArea = percentage ? [0, 100] : [min, max];\r\n                visualisation[key].yMapArea = percentage ? [0, 100] : [globalMin, globalMax];\r\n            });\r\n\r\n            grid.render(x0, x1, y0, y1);\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        const deepUpdateYArea = () => {\r\n            resetYBoundsCash();\r\n            updateYArea();\r\n        };\r\n\r\n        const setUserViewport = (w, h) => {\r\n            chartViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n        };\r\n\r\n        const setXChartArea = (x0, x1) => {\r\n            chartAreaXTransform.setAttribute(\r\n                'transform',\r\n                `\r\n                    scale(${1 / (x1 - x0)} 1) \r\n                    translate(${-x0} 0)\r\n                `\r\n            );\r\n            deepUpdateYArea();\r\n        };\r\n\r\n        const updateXBounds = (a, b) => {\r\n            x0 = a;\r\n            x1 = b;\r\n            setXChartArea(x0, x1);\r\n            setMapWindow(x0, x1);\r\n        };\r\n\r\n        const mount = () => {\r\n            grid = new Grid(chartSvg);\r\n            tooltip = new Tooltip(chartSvg);\r\n\r\n            wrapper.insertBefore(mapNode, controls);\r\n\r\n            keys.forEach(key => {\r\n                chartAreaXTransform.appendChild(visualisation[key].node);\r\n            });\r\n\r\n            keys.forEach(key => {\r\n                appendBeforeOverlay(visualisation[key].mapNode);\r\n            });\r\n\r\n            keys.reverse().forEach(key => {\r\n                visualisation[key].intersectionPoint &&\r\n                    chartSvg.insertBefore(visualisation[key].intersectionPoint, tooltip.transformY);\r\n\r\n                controls.appendChild(\r\n                    createCheckBox(colors[key], names[key], value => {\r\n                        visualisation[key].visible = value;\r\n                        updateYArea();\r\n                    })\r\n                );\r\n            });\r\n        };\r\n\r\n        const onResize = () => {\r\n            const { width: svgWidth, height: svgHeight } = chartSvg.getBoundingClientRect();\r\n            const { width: mapWidth, height: mapHeight } = mapNode.getBoundingClientRect();\r\n            setUserViewport(svgWidth, svgHeight);\r\n            setMapViewport(mapWidth, mapHeight);\r\n\r\n            grid.resize();\r\n            tooltip.resize();\r\n            setMapWindow(x0, x1);\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        mount();\r\n        deepUpdateYArea();\r\n        onResize();\r\n        addListener(window, 'resize', onResize);\r\n\r\n        const getMapX = x => {\r\n            const rect = mapNode.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        const getChartX = x => {\r\n            const rect = chartSvg.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        addDragAndDropListeners(mapWindow, coords => {\r\n            const width = x1 - x0;\r\n            const left = getMapX(coords.x);\r\n            const right = left + width;\r\n            updateXBounds(boundBy(left, 0, 1 - width), boundBy(right, width, 1));\r\n        });\r\n        addDragAndDropListeners(windowLeftEdge, coords => {\r\n            const left = getMapX(coords.x + 20);\r\n            updateXBounds(boundBy(left, 0, x1 - MIN_WIN_WIDTH), x1);\r\n        });\r\n        addDragAndDropListeners(windowRightEdge, coords => {\r\n            const right = getMapX(coords.x);\r\n            updateXBounds(x0, boundBy(right, x0 + MIN_WIN_WIDTH, 1));\r\n        });\r\n\r\n        const onMouseMove = e => updateIntersections(x0 + (x1 - x0) * getChartX(e.clientX));\r\n        const onMouseLeave = () => {\r\n            if (!mouseXFixed) updateIntersections();\r\n        };\r\n        addListener(chartSvg, 'mousemove', onMouseMove);\r\n        addListener(chartSvg, 'mouseleave', onMouseLeave);\r\n        addListener(chartSvg, 'touchmove', e => updateIntersections(x0 + (x1 - x0) * getChartX(e.touches[0].clientX)));\r\n        addListener(chartSvg, 'mousedown', () => {\r\n            if (mouseXFixed) {\r\n                addListener(chartSvg, 'mousemove', onMouseMove);\r\n            } else {\r\n                removeListener(chartSvg, 'mousemove', onMouseMove);\r\n            }\r\n            mouseXFixed = !mouseXFixed;\r\n        });\r\n    };\r\n\r\n    return {\r\n        node: wrapper,\r\n        init\r\n    };\r\n};\r\n","import { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './map.css';\r\n\r\nexport default () => {\r\n    const mapSvg = createSvgElement('svg', {}, 'map-chart');\r\n    const map = createElement('map-container');\r\n    const svgWrapper = createElement('map-svg-wrapper');\r\n    const mapViewportTransform = createSvgElement('g');\r\n\r\n    svgWrapper.appendChild(mapSvg);\r\n    map.appendChild(svgWrapper);\r\n    mapSvg.appendChild(mapViewportTransform);\r\n\r\n    const mapOverlayLeft = createSvgElement('rect', { x: 0, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapOverlayRight = createSvgElement('rect', { x: 1, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapWindow = createElement('map-window', 'div');\r\n    const windowLeftEdge = createElement('map-left-edge', 'div');\r\n    const windowRightEdge = createElement('map-right-edge', 'div');\r\n\r\n    windowLeftEdge.textContent = windowRightEdge.textContent = '|||';\r\n    mapViewportTransform.append(mapOverlayLeft);\r\n    mapViewportTransform.append(mapOverlayRight);\r\n    map.append(mapWindow);\r\n    map.append(windowLeftEdge);\r\n    map.append(windowRightEdge);\r\n\r\n    const setMapViewport = (w, h) => {\r\n        mapViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n    };\r\n\r\n    const appendBeforeOverlay = node => {\r\n        mapViewportTransform.insertBefore(node, mapOverlayLeft);\r\n    };\r\n\r\n    const setMapWindow = (x0, x1) => {\r\n        mapOverlayLeft.setAttribute('width', x0);\r\n        mapOverlayRight.setAttribute('x', x1);\r\n        mapOverlayRight.setAttribute('width', 1 - x1);\r\n\r\n        const mapWidth = map.getBoundingClientRect().width;\r\n        mapWindow.style.left = `${x0 * mapWidth}px`;\r\n        mapWindow.style.width = `${(x1 - x0) * mapWidth}px`;\r\n        windowLeftEdge.style.left = `${x0 * mapWidth - 20}px`;\r\n        windowRightEdge.style.left = `${x1 * mapWidth - 1}px`;\r\n    };\r\n\r\n    return {\r\n        mapNode: map,\r\n        appendBeforeOverlay,\r\n        setMapViewport,\r\n        setMapWindow,\r\n        windowLeftEdge,\r\n        windowRightEdge,\r\n        mapWindow\r\n    };\r\n};\r\n","import './switch-button.css';\r\nimport { addListener } from '../../helpers/event-listeners';\r\n\r\nconst nightLabel = 'Switch to Day Mode';\r\nconst dayLabel = 'Switch to Night Mode';\r\n\r\nexport default () => {\r\n    const btn = document.createElement('div');\r\n    btn.id = 'btn-switch';\r\n\r\n    let night = false;\r\n    btn.textContent = dayLabel;\r\n\r\n    const switchToNight = () => {\r\n        btn.textContent = nightLabel;\r\n        document.body.className = 'night';\r\n        night = true;\r\n    };\r\n\r\n    const switchToDay = () => {\r\n        btn.textContent = dayLabel;\r\n        document.body.className = '';\r\n        night = false;\r\n    };\r\n\r\n    addListener(btn, 'click', () => {\r\n        if (night) {\r\n            switchToDay();\r\n        } else {\r\n            switchToNight();\r\n        }\r\n    });\r\n\r\n    return btn;\r\n};\r\n","import './global.css';\r\nimport createChart from './components/chart/chart';\r\nimport createFooter from './components/footer/footer';\r\nimport { createElement } from './helpers/elements';\r\n\r\nconst charts = createElement();\r\nconst root = document.getElementById('root');\r\nroot.appendChild(charts);\r\nroot.appendChild(createFooter());\r\n\r\nconst getData = dataNum =>\r\n    import(/* webpackChunkName: \"data\" */ `./data/${dataNum}/overview.json`).then(({ default: data }) => data);\r\n\r\nlet dataPromise = new Promise(e => e());\r\n[1, 2, 3, 4, 5].forEach(chartNum => {\r\n    dataPromise = dataPromise\r\n        .then(() => getData(chartNum))\r\n        .then(data => {\r\n            const { node, init } = createChart(data, 'Chart #' + chartNum);\r\n            charts.appendChild(node);\r\n            init();\r\n        });\r\n});\r\n","import createSwitchButton from '../switch-button/switch-button';\r\nimport './footer.css';\r\n\r\nexport default () => {\r\n    const footer = document.createElement('div');\r\n    footer.id = 'footer';\r\n    footer.appendChild(createSwitchButton());\r\n    return footer;\r\n};\r\n"],"sourceRoot":""}