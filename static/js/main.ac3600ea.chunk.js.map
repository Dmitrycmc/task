{"version":3,"sources":["components/icons/check-icon.svg","data lazy /^/.*/overview/.json$/ groupOptions: {} namespace object","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","helpers/elements.js","helpers/event-listeners.js","components/check-box/check-box.js","components/icons/checkbox-icon.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","helpers/utils.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","components/chart/line.js","components/chart/bars.js","helpers/date-time.js","components/tooltip/tooltip.js","components/grid/grid.js","components/chart/chart.js","components/map/map.js","components/switch-button/switch-button.js","index.js","components/footer/footer.js"],"names":["module","exports","__webpack_require__","p","map","./1/overview.json","./2/overview.json","./3/overview.json","./4/overview.json","./5/overview.json","webpackAsyncContext","req","ids","e","then","id","t","Promise","resolve","Error","code","keys","Object","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_setPrototypeOf","o","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","isNativeReflectConstruct","a","apply","instance","Function","bind","arguments","createElement","className","tag","node","document","createSvgElement","attrs","createElementNS","baseVal","forEach","setAttribute","addListener","element","event","listener","addEventListener","removeListener","removeEventListener","addDragAndDropListeners","getTouchCoords","x","touches","clientX","y","clientY","offset","offsetX","offsetY","getMouseOffset","onMouseMove","buttons","body","onMouseUp","mouseCoords","getMouseCoords","cornerCoords","box","getBoundingClientRect","touchCoords","left","top","getTouchOffset","onTouchMove","onTouchEnd","check_box_check_box","color","text","onChange","checked","wrapper","mark","style","label","textContent","appendChild","img","icon","createCheckIcon","_classCallCheck","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","minmax","min","max","_ref","y0","y1","Math","boundBy","right","relToAbs","rel","b","absToRel","abs","calcYBounds","xData","yData","x0Rel","x1Rel","type","j","x0","x1","k","el","findClosestIndex","xRel","getColumns","types","columns","xKey","filter","xColumn","column","yColumns","reduce","source","ownKeys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","_objectSpread","colorToGrb","c","replace","r","parseInt","g","slice","sdf","split","INTERSECTION_LINES_COLOR","generatePoints","area","yBase","xMin","dx","points","Line","yColumn","_this","this","yColumnBase","_yColumnBase","_area","_xColumn","_yColumn","_chartLine","_mapLine","_visible","_color","stroke-linejoin","vector-effect","stroke","fill","intersectionLineV","x2","intersectionPoint","_intersectionLineH","_intersectionPoint0","_intersectionPoint1","_intersectionPoint2","_intersectionPoint3","_intersectionPoint4","mapNode","val","_ref2","_ref4","_ref3","svgW","svgH","display","stroke-width","_selectedBar","xMouse","step","ceil","background","window","getComputedStyle","backgroundColor","c1","c2","opacity","_colorToGrb","r1","g1","b1","_colorToGrb2","r2","g2","b2","rgbToString","toFixed","calcOpacityColor","days","months","MARGIN","PADDING","WIDTH","LINE_HEIGHT","Tooltip","parentNode","transformY","transformX","rect","rx","ry","width","transform","svgBox","height","xAbs","data","childNodes","removeChild","xText","ms","date","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","year","getFullYear","tooltipDate","name","yName","dy","yVal","text-anchor","Grid","resize","_this$node$parentNode","_this$node$parentNode2","countV","countH","yStep","xStep","yCur","line","y2","xCur","typeToConstructor","_len","_key","bar","_len2","_key2","Bars","_len3","_key3","chart_chart","title","chartSvg","colors","names","stacked","percentage","_getColumns","y_scaled","entries","q","assign","tooltip","grid","mouseXFixed","keyToYBound","keyToGlobalYBound","chartViewportTransform","chartAreaXTransform","controls","header","init","visualisation","reverse","_createMap","mapSvg","svgWrapper","mapViewportTransform","mapOverlayLeft","mapOverlayRight","mapWindow","windowLeftEdge","windowRightEdge","append","appendBeforeOverlay","insertBefore","setMapViewport","w","h","setMapWindow","mapWidth","createMap","updateIntersections","_chartSvg$getBounding","tooltipData","visible","render","updateYArea","yColumnSum","_ref5","getYBounds","_ref6","getGlobalYBounds","globalMin","globalMax","yChartArea","yMapArea","deepUpdateYArea","updateXBounds","setXChartArea","onResize","_chartSvg$getBounding2","svgWidth","svgHeight","_mapNode$getBoundingC","mapHeight","createCheckBox","getMapX","getChartX","coords","switch_button_switch_button","btn","night","charts","root","getElementById","footer","createSwitchButton","createFooter","getData","dataNum","default","_createChart","createChart","_createChart2","_createChart3","_createChart4","_createChart5"],"mappings":"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","file":"static/js/main.ac3600ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-icon.cc4bfc9f.svg\";","var map = {\n\t\"./1/overview.json\": [\n\t\t12,\n\t\t0\n\t],\n\t\"./2/overview.json\": [\n\t\t13,\n\t\t1\n\t],\n\t\"./3/overview.json\": [\n\t\t14,\n\t\t2\n\t],\n\t\"./4/overview.json\": [\n\t\t15,\n\t\t3\n\t],\n\t\"./5/overview.json\": [\n\t\t16,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 10;\nmodule.exports = webpackAsyncContext;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export const createElement = (className, tag = 'div') => {\r\n    const node = document.createElement(tag);\r\n    if (className) node.className = className;\r\n    return node;\r\n};\r\n\r\nexport const createSvgElement = (tag, attrs, className) => {\r\n    const node = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    if (className) {\r\n        node.className.baseVal = className;\r\n    }\r\n    if (attrs) {\r\n        Object.keys(attrs).forEach(key => {\r\n            node.setAttribute(key, attrs[key]);\r\n        });\r\n    }\r\n    return node;\r\n};\r\n","export const addListener = (element, event, listener) => {\r\n    element.addEventListener(event, listener, false);\r\n};\r\n\r\nexport const removeListener = (element, event, listener) => {\r\n    element.removeEventListener(event, listener);\r\n};\r\n\r\nexport const addDragAndDropListeners = (element, listener) => {\r\n    const getMouseCoords = e => ({ x: e.clientX, y: e.clientY });\r\n    const getTouchCoords = e => ({ x: e.touches[0].clientX, y: e.touches[0].clientY });\r\n    const getMouseOffset = e => ({ x: e.offsetX, y: e.offsetY });\r\n    const getTouchOffset = e => {\r\n        const box = element.getBoundingClientRect();\r\n        const touchCoords = getTouchCoords(e);\r\n        return {\r\n            x: touchCoords.x - box.left,\r\n            y: touchCoords.y - box.top\r\n        };\r\n    };\r\n\r\n    addListener(element, 'mousedown', e => {\r\n        const offset = getMouseOffset(e);\r\n\r\n        const onMouseMove = e => {\r\n            if (e.buttons !== 1) {\r\n                removeListener(document.body, 'mousemove', onMouseMove);\r\n                removeListener(document.body, 'mouseup', onMouseUp);\r\n            } else {\r\n                const mouseCoords = getMouseCoords(e);\r\n                const cornerCoords = { x: mouseCoords.x - offset.x, y: mouseCoords.y + offset.y };\r\n                listener(cornerCoords);\r\n            }\r\n        };\r\n\r\n        function onMouseUp() {\r\n            removeListener(document.body, 'mousemove', onMouseMove);\r\n            removeListener(document.body, 'mouseup', onMouseUp);\r\n        }\r\n\r\n        addListener(document.body, 'mousemove', onMouseMove);\r\n        addListener(document.body, 'mouseup', onMouseUp);\r\n    });\r\n\r\n    addListener(element, 'touchstart', e => {\r\n        const offset = getTouchOffset(e);\r\n\r\n        const onTouchMove = e => {\r\n            const touchCoords = getTouchCoords(e);\r\n            const cornerCoords = { x: touchCoords.x - offset.x, y: touchCoords.y + offset.y };\r\n            listener(cornerCoords);\r\n        };\r\n\r\n        function onTouchEnd() {\r\n            removeListener(document.body, 'touchmove', onTouchMove);\r\n            removeListener(document.body, 'touchend', onTouchEnd);\r\n            removeListener(document.body, 'touchcancel', onTouchEnd);\r\n        }\r\n\r\n        addListener(document.body, 'touchmove', onTouchMove);\r\n        addListener(document.body, 'touchend', onTouchEnd);\r\n        addListener(document.body, 'touchcancel', onTouchEnd);\r\n    });\r\n};\r\n","import './check-box.css';\r\nimport { createElement } from '../../helpers/elements';\r\nimport { addListener } from '../../helpers/event-listeners';\r\nimport createCheckIcon from '../icons/checkbox-icon';\r\n\r\nconst uncheckedMark = 'cb_unchecked-mark';\r\nconst checkedMark = 'cb_checked-mark';\r\n\r\nexport default (color, text, onChange) => {\r\n    let checked = true;\r\n\r\n    const wrapper = createElement('cb_wrapper');\r\n\r\n    const mark = createElement(checkedMark);\r\n    mark.style.color = color;\r\n\r\n    const label = createElement('cb_label');\r\n    label.textContent = text;\r\n\r\n    wrapper.appendChild(mark);\r\n    wrapper.appendChild(label);\r\n\r\n    mark.appendChild(createCheckIcon());\r\n\r\n    addListener(wrapper, 'click', () => {\r\n        checked = !checked;\r\n        onChange && onChange(checked);\r\n        mark.className = checked ? checkedMark : uncheckedMark;\r\n    });\r\n\r\n    return wrapper;\r\n};\r\n","import icon from './check-icon.svg';\r\nimport { createElement } from '../../helpers/elements';\r\n\r\nexport default () => {\r\n    const img = createElement('icon', 'img');\r\n    img.setAttribute('src', icon);\r\n    return img;\r\n};\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export const minmax = arr => {\r\n    let min = null,\r\n        max = null;\r\n\r\n    arr.forEach(({ min: y0, max: y1 }) => {\r\n        min = min === null ? y0 : Math.min(min, y0);\r\n        max = max === null ? y1 : Math.max(max, y1);\r\n    });\r\n\r\n    return { min, max };\r\n};\r\n\r\nexport const boundBy = (x, left, right) => {\r\n    x = left === undefined ? x : Math.max(left, x);\r\n    x = right === undefined ? x : Math.min(right, x);\r\n    return x;\r\n};\r\n\r\nexport const relToAbs = (rel, a, b) => a + rel * (b - a);\r\n\r\nexport const absToRel = (abs, a, b) => (abs - a) / (b - a);\r\n\r\nexport const calcYBounds = (xData, yData, x0Rel, x1Rel, type) => {\r\n    if (!yData) return { min: 0, max: 0 };\r\n\r\n    let i = 1;\r\n    let j = xData.length - 1;\r\n\r\n    const x0 = relToAbs(x0Rel, xData[1], xData[j]);\r\n    const x1 = relToAbs(x1Rel, xData[1], xData[j]);\r\n\r\n    while (xData[i] < x0) i++;\r\n    while (xData[j] > x1) j--;\r\n\r\n    let min = yData[i],\r\n        max = yData[i];\r\n\r\n    for (let k = i + 1; k <= j; k++) {\r\n        const el = yData[k];\r\n        min = Math.min(min, el);\r\n        max = Math.max(max, el);\r\n    }\r\n\r\n    return { min: type === 'line' ? min : 0, max: max };\r\n};\r\n\r\nexport const findClosestIndex = (xData, xRel) => {\r\n    if (!xRel) return null;\r\n    let x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    i = (xData[i - 1] + xData[i]) / 2 < x ? i : i - 1;\r\n\r\n    return i;\r\n};\r\n\r\n/*\r\nexport const interpolate = (xData, yData, xRel) => {\r\n    if (!xRel) return null;\r\n    const x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    const y = yData[i - 1] + ((x - xData[i - 1]) * (yData[i] - yData[i - 1])) / (xData[i] - xData[i - 1]);\r\n    return y;\r\n};\r\n*/\r\n\r\nexport const getColumns = (types, columns) => {\r\n    const xKey = Object.keys(types).filter(key => types[key] === 'x')[0];\r\n    const xColumn = columns.filter(column => column[0] === xKey)[0];\r\n\r\n    const keys = Object.keys(types).filter(key => types[key] !== 'x');\r\n    const yColumns = keys.reduce((obj, key) => ({ ...obj, [key]: columns.filter(column => column[0] === key)[0] }), {});\r\n\r\n    return { xColumn, yColumns, keys };\r\n};\r\n\r\nexport const arrSum = (a, b) => {\r\n    if (!a) return [...b];\r\n    return a.map((el, i) => el + b[i]);\r\n};\r\n\r\nconst colorToGrb = c => {\r\n    c = c.replace(/ /g, '');\r\n    if (c[0] === '#') {\r\n        if (c.length === 4) {\r\n            // #rgb\r\n            return {\r\n                r: parseInt(c[1] + c[1], 16),\r\n                g: parseInt(c[2] + c[2], 16),\r\n                b: parseInt(c[3] + c[3], 16)\r\n            };\r\n        } else {\r\n            // #rrggbb\r\n            return {\r\n                r: parseInt(c.slice(1, 3), 16),\r\n                g: parseInt(c.slice(3, 5), 16),\r\n                b: parseInt(c.slice(5, 7), 16)\r\n            };\r\n        }\r\n    } else {\r\n        // rgb(r,g,b)\r\n        const sdf = c.slice(4, -1).split(',');\r\n        return {\r\n            r: +sdf[0],\r\n            g: +sdf[1],\r\n            b: +sdf[2]\r\n        };\r\n    }\r\n};\r\n\r\nconst rgbToString = ({ r, g, b }) => `rgb(${r}, ${g}, ${b})`;\r\n\r\nexport const calcOpacityColor = (c1, c2, opacity) => {\r\n    const { r: r1, g: g1, b: b1 } = colorToGrb(c1);\r\n    const { r: r2, g: g2, b: b2 } = colorToGrb(c2);\r\n    return rgbToString({\r\n        r: (opacity * r1 + (1 - opacity) * r2).toFixed(),\r\n        g: (opacity * g1 + (1 - opacity) * g2).toFixed(),\r\n        b: (opacity * b1 + (1 - opacity) * b2).toFixed()\r\n    });\r\n};\r\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import { createSvgElement } from '../../helpers/elements';\r\nimport { absToRel, findClosestIndex } from '../../helpers/utils';\r\n\r\nconst INTERSECTION_LINES_COLOR = 'gray';\r\n\r\nconst generatePoints = (area, x, y, yBase) => {\r\n    const length = x.length;\r\n\r\n    if (!yBase) {\r\n        let xMin = x[1],\r\n            dx = x[length - 1] - xMin;\r\n        let points = `0,${y[1]} `;\r\n\r\n        for (let i = 2; i < length; i++) {\r\n            points += `${(x[i] - xMin) / dx},${y[i]} `;\r\n        }\r\n\r\n        return area ? `0,0 ${points} 1,0` : points;\r\n    } else {\r\n        let xMin = x[1],\r\n            dx = x[length - 1] - xMin;\r\n        let points = `0,${yBase[1] + y[1]} `;\r\n\r\n        for (let i = 2; i < length; i++) {\r\n            points += `${(x[i] - xMin) / dx},${yBase[i] + y[i]} `;\r\n        }\r\n\r\n        return area ? `0,0 ${points} 1,0` : points;\r\n    }\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._intersectionPoint0.setAttribute('opacity', +val);\r\n        this._chartLine.setAttribute('opacity', +val);\r\n        this._mapLine.setAttribute('opacity', +val);\r\n        this._intersectionLineH.setAttribute('stroke', val ? INTERSECTION_LINES_COLOR : 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(area, keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n        this._area = area;\r\n\r\n        const points = generatePoints(area, xColumn, yColumn);\r\n        this._chartLine = createSvgElement(\r\n            area ? 'polygon' : 'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'chart-line'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'map-line'\r\n        );\r\n\r\n        const intersectionLineV = createSvgElement(\r\n            'line',\r\n            { x1: 0, x2: 0, y0: 0, y1: 1, 'vector-effect': 'non-scaling-stroke', stroke: INTERSECTION_LINES_COLOR },\r\n            'intersection-line'\r\n        );\r\n\r\n        this.intersectionPoint = createSvgElement('g', {}, '');\r\n        this.intersectionPoint.appendChild(intersectionLineV);\r\n\r\n        if (!area) {\r\n            this._intersectionLineH = createSvgElement(\r\n                'line',\r\n                {\r\n                    x1: -1,\r\n                    x2: 1,\r\n                    y0: 0,\r\n                    y1: 0,\r\n                    'vector-effect': 'non-scaling-stroke',\r\n                    stroke: INTERSECTION_LINES_COLOR\r\n                },\r\n                'intersection-line'\r\n            );\r\n\r\n            this._intersectionPoint0 = createSvgElement(\r\n                'circle',\r\n                { r: 5, stroke: color, fill: 'white' },\r\n                'intersection-point'\r\n            );\r\n            this._intersectionPoint1 = createSvgElement('g', {}, '');\r\n            this._intersectionPoint2 = createSvgElement('g', {}, 'animated');\r\n            this._intersectionPoint3 = createSvgElement('g', {}, '');\r\n            this._intersectionPoint4 = createSvgElement('g', {}, 'animated');\r\n            this._intersectionPoint1.appendChild(this._intersectionPoint0);\r\n            this._intersectionPoint2.appendChild(this._intersectionPoint1);\r\n            this._intersectionPoint3.appendChild(this._intersectionLineH);\r\n            this._intersectionPoint3.appendChild(this._intersectionPoint2);\r\n            this._intersectionPoint4.appendChild(this._intersectionPoint3);\r\n            this.intersectionPoint.appendChild(this._intersectionPoint4);\r\n        }\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n    }\r\n\r\n    onChange = yColumnBase => {\r\n        this._yColumnBase = yColumnBase;\r\n        const points = generatePoints(this._area, this._xColumn, this._yColumn, yColumnBase);\r\n        this._chartLine.setAttribute('points', points);\r\n        this._mapLine.setAttribute('points', points);\r\n    };\r\n\r\n    onMouseMove(xRel, x0, x1, y0, y1, svgW, svgH) {\r\n        let x = absToRel(xRel, x0, x1);\r\n        if (x < 0 || x > 1) {\r\n            this.intersectionPoint.style.display = 'none';\r\n            return;\r\n        }\r\n\r\n        this.intersectionPoint.style.display = 'initial';\r\n        const i = findClosestIndex(this._xColumn, xRel);\r\n        x = absToRel(this._xColumn[i], this._xColumn[1], this._xColumn[this._xColumn.length - 1]);\r\n        this.intersectionPoint.setAttribute('transform', `scale(${svgW} ${svgH}) translate(${absToRel(x, x0, x1)} 0) `);\r\n\r\n        if (!this._area) {\r\n            const y = this._yColumn[i];\r\n\r\n            this._intersectionPoint1.setAttribute('transform', `scale(${1 / svgW} ${1 / svgH})`);\r\n            this._intersectionPoint2.setAttribute('transform', `scale(1 ${y1 - y0})`);\r\n            this._intersectionPoint3.setAttribute('transform', `translate(0 ${y})`);\r\n            this._intersectionPoint4.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n        }\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport { calcOpacityColor } from '../../helpers/utils';\r\n\r\nconst generatePoints = (x, y, yBase) => {\r\n    // unused x\r\n    const length = x.length - 1;\r\n\r\n    if (!yBase) {\r\n        let points = `0,0 0,${y[1]} `;\r\n\r\n        for (let i = 2; i <= length; i++) {\r\n            points += `${(i - 1) / length},${y[i - 1]} ${(i - 1) / length},${y[i]} `;\r\n        }\r\n        points += `1,${y[length]} 1,0`;\r\n\r\n        return points;\r\n    } else {\r\n        let points = `0,0 0,${yBase[1] + y[1]} `;\r\n\r\n        for (let i = 2; i <= length; i++) {\r\n            points += `${(i - 1) / length},${yBase[i - 1] + y[i - 1]} ${(i - 1) / length},${yBase[i] + y[i]} `;\r\n        }\r\n        points += `1,${yBase[length] + y[length]} 1,0`;\r\n\r\n        return points;\r\n    }\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._chartLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('fill', val ? this._color : 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        this._chartLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._selectedBar = createSvgElement(\r\n            'rect',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'map-bar'\r\n        );\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n        this.node.appendChild(this._selectedBar);\r\n    }\r\n\r\n    onChange = yColumnBase => {\r\n        this._yColumnBase = yColumnBase;\r\n        const points = generatePoints(this._xColumn, this._yColumn, yColumnBase);\r\n        this._chartLine.setAttribute('points', points);\r\n        this._mapLine.setAttribute('points', points);\r\n    };\r\n\r\n    onMouseMove(xMouse) {\r\n        if (!xMouse) {\r\n            this._chartLine.setAttribute('fill', this._visible ? this._color : 'transparent');\r\n            this._selectedBar.setAttribute('fill', 'transparent');\r\n            return;\r\n        }\r\n\r\n        if (this._visible) {\r\n            const step = 1 / (this._xColumn.length - 1);\r\n            const i = Math.ceil(xMouse / step);\r\n            this._selectedBar.setAttribute('x', (i - 1) * step);\r\n            this._selectedBar.setAttribute('y', this._yColumnBase ? this._yColumnBase[i] : 0);\r\n            this._selectedBar.setAttribute('width', step);\r\n            this._selectedBar.setAttribute('height', this._yColumn[i]);\r\n            this._selectedBar.setAttribute('fill', this._color);\r\n            const background = window.getComputedStyle(document.body).backgroundColor;\r\n            this._chartLine.setAttribute('fill', calcOpacityColor(this._color, background, 0.6));\r\n        }\r\n    }\r\n}\r\n","export const tooltipDate = ms => {\r\n    const date = new Date(ms);\r\n    const dayOfWeek = days[date.getDay()];\r\n    const dayOfMonth = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    return `${dayOfWeek}, ${dayOfMonth} ${month} ${year}`;\r\n};\r\n\r\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jule', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './tooltip.css';\r\nimport { tooltipDate } from '../../helpers/date-time';\r\n\r\nconst MARGIN = 20;\r\nconst PADDING = 10;\r\nconst WIDTH = 180;\r\nconst LINE_HEIGHT = 18;\r\n\r\nexport default class Tooltip {\r\n    constructor(parentNode) {\r\n        this.transformY = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.transformX = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.rect = createSvgElement(\r\n            'rect',\r\n            { x: MARGIN, y: MARGIN, rx: 15, ry: 15, width: WIDTH, transform: 'scale(1 -1)' },\r\n            'tt_rect'\r\n        );\r\n        this.text = createSvgElement('text', {\r\n            x: MARGIN + PADDING,\r\n            y: MARGIN + PADDING + LINE_HEIGHT,\r\n            transform: 'scale(1 -1)'\r\n        });\r\n        this.transformY.appendChild(this.transformX);\r\n        this.transformX.appendChild(this.rect);\r\n        this.transformX.appendChild(this.text);\r\n        parentNode.appendChild(this.transformY);\r\n    }\r\n\r\n    resize() {\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n        this.transformY.setAttribute('transform', `translate(0 ${svgBox.height})`);\r\n    }\r\n\r\n    render(xRel, xAbs, data) {\r\n        if (!data || xRel < 0 || xRel > 1) {\r\n            this.transformY.setAttribute('opacity', '0');\r\n            return;\r\n        }\r\n\r\n        this.transformY.setAttribute('opacity', '1');\r\n        this.rect.setAttribute('height', (data.length + 1) * LINE_HEIGHT + 2 * PADDING);\r\n\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n\r\n        while (this.text.childNodes.length) {\r\n            this.text.removeChild(this.text.childNodes[0]);\r\n        }\r\n\r\n        const xText = createSvgElement('tspan', {}, 'tt_bold');\r\n        xText.textContent = tooltipDate(xAbs);\r\n        this.text.appendChild(xText);\r\n\r\n        data.forEach(({ y, color, name }) => {\r\n            const yName = createSvgElement('tspan', { x: MARGIN + PADDING, dy: LINE_HEIGHT });\r\n            yName.textContent = `${name}: `;\r\n            const yVal = createSvgElement(\r\n                'tspan',\r\n                { fill: color, 'text-anchor': 'end', x: MARGIN + WIDTH - PADDING },\r\n                'tt_bold'\r\n            );\r\n            yVal.textContent = (+y).toFixed(2);\r\n            this.text.appendChild(yName);\r\n            this.text.appendChild(yVal);\r\n        });\r\n\r\n        if (xRel < 0.5) {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width} 0)`);\r\n        } else {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width - 2 * MARGIN - WIDTH} 0)`);\r\n        }\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './grid.css';\r\nimport { absToRel } from '../../helpers/utils';\r\n\r\nconst ROW_HEIGHT = 18 * 10;\r\nconst COL_WIDTH = 18 * 10;\r\n\r\nexport default class Grid {\r\n    constructor(parentNode) {\r\n        this.node = createSvgElement('g', {});\r\n        this.transform = createSvgElement('g', {}, 'grid_wrapper');\r\n\r\n        parentNode.appendChild(this.node);\r\n        this.node.appendChild(this.transform);\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        const { width, height } = this.node.parentNode.getBoundingClientRect();\r\n        this.node.setAttribute('transform', `scale(${width} ${height})`);\r\n    }\r\n\r\n    render(x0, x1, y0, y1) {\r\n        const { height, width } = this.node.parentNode.getBoundingClientRect();\r\n\r\n        const countV = height / ROW_HEIGHT;\r\n        const countH = width / COL_WIDTH;\r\n\r\n        let i = 0;\r\n        while ((y1 - y0) / sdf[i] < countV) i++;\r\n        const yStep = sdf[i];\r\n        let j = 0;\r\n        while ((x1 - x0) / sdf[j] < countH) j++;\r\n        const xStep = sdf[j];\r\n\r\n        this.transform.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n\r\n        while (this.transform.childNodes.length) {\r\n            this.transform.removeChild(this.transform.childNodes[0]);\r\n        }\r\n\r\n        i = Math.ceil(y0 / yStep);\r\n        let yCur = i * yStep;\r\n\r\n        while (yCur <= y1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                { x1: 0, x2: 1, y1: yCur, y2: yCur, 'vector-effect': 'non-scaling-stroke' },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            yCur += yStep;\r\n        }\r\n\r\n        j = Math.ceil(x0 / xStep);\r\n        let xCur = j * xStep;\r\n\r\n        while (xCur <= x1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                {\r\n                    y1: y0,\r\n                    y2: y1,\r\n                    x1: absToRel(xCur, x0, x1),\r\n                    x2: absToRel(xCur, x0, x1),\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            xCur += xStep;\r\n        }\r\n    }\r\n}\r\n\r\nconst sdf = [\r\n    100000000,\r\n    50000000,\r\n    20000000,\r\n    10000000,\r\n    5000000,\r\n    2000000,\r\n    1000000,\r\n    500000,\r\n    200000,\r\n    100000,\r\n    50000,\r\n    20000,\r\n    10000,\r\n    5000,\r\n    2000,\r\n    1000,\r\n    500,\r\n    200,\r\n    100,\r\n    50,\r\n    20,\r\n    10,\r\n    5,\r\n    2,\r\n    1,\r\n    0.5,\r\n    0.2,\r\n    0.1,\r\n    0.05,\r\n    0.02,\r\n    0.01\r\n];\r\n","import createCheckBox from '../check-box/check-box';\r\nimport Line from './line';\r\nimport Bars from './bars';\r\nimport { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './chart.css';\r\nimport { absToRel, arrSum, boundBy, calcYBounds, findClosestIndex, getColumns, minmax } from '../../helpers/utils';\r\nimport { addDragAndDropListeners, addListener, removeListener } from '../../helpers/event-listeners';\r\nimport createMap from '../map/map';\r\nimport Tooltip from '../tooltip/tooltip';\r\nimport Grid from '../grid/grid';\r\n\r\nconst typeToConstructor = {\r\n    line: (...props) => new Line(false, ...props),\r\n    bar: (...props) => new Bars(...props),\r\n    area: (...props) => new Line(true, ...props)\r\n};\r\n\r\nconst MIN_WIN_WIDTH = 0.05;\r\n\r\nexport default (data, title) => {\r\n    const chartSvg = createSvgElement('svg', {}, 'ctr_chart');\r\n\r\n    const { colors, names, types, columns, percentage, stacked, y_scaled: doubleY } = data;\r\n\r\n    let { xColumn, yColumns, keys } = getColumns(types, columns);\r\n    yColumns = Object.entries(yColumns)\r\n        .map(([key, col]) => ({ [key]: col.map((el, i) => (i ? el / 1000 : el)) }))\r\n        .reduce((obj, q) => Object.assign(obj, q), {});\r\n    let x0 = 0;\r\n    let x1 = 1;\r\n    let y0 = 0;\r\n    let y1 = 1;\r\n    let xMouse = null;\r\n    let mouseXFixed = false;\r\n\r\n    let keyToYBound = {};\r\n    let keyToGlobalYBound = {};\r\n    const getYBounds = key =>\r\n        keyToYBound[key] || (keyToYBound[key] = calcYBounds(xColumn, yColumns[key], x0, x1, types[key]));\r\n    const getGlobalYBounds = key =>\r\n        keyToGlobalYBound[key] || (keyToGlobalYBound[key] = calcYBounds(xColumn, yColumns[key], 0, 1, types[key]));\r\n    const resetYBoundsCash = () => (keyToYBound = {});\r\n\r\n    const chartViewportTransform = createSvgElement('g');\r\n    const chartAreaXTransform = createSvgElement('g');\r\n\r\n    const wrapper = createElement('crt_wrapper');\r\n    const controls = createElement('crt_controls');\r\n    const header = createElement();\r\n    header.textContent = title;\r\n\r\n    let tooltip, grid;\r\n\r\n    wrapper.appendChild(header);\r\n    wrapper.appendChild(chartSvg);\r\n    chartSvg.appendChild(chartViewportTransform);\r\n    chartViewportTransform.appendChild(chartAreaXTransform);\r\n    wrapper.appendChild(controls);\r\n\r\n    const init = () => {\r\n        const visualisation = keys\r\n            .reverse()\r\n            .map(key => ({\r\n                [key]: typeToConstructor[types[key]](key, xColumn, yColumns[key], colors[key])\r\n            }))\r\n            .reduce((obj, line) => Object.assign(obj, line), {});\r\n\r\n        const {\r\n            mapNode,\r\n            setMapViewport,\r\n            appendBeforeOverlay,\r\n            setMapWindow,\r\n            windowLeftEdge,\r\n            windowRightEdge,\r\n            mapWindow\r\n        } = createMap();\r\n\r\n        const updateIntersections = xRel => {\r\n            const { width, height } = chartSvg.getBoundingClientRect();\r\n            if (xRel !== -1) xMouse = xRel;\r\n\r\n            const i = findClosestIndex(xColumn, xMouse);\r\n\r\n            const tooltipData =\r\n                xMouse &&\r\n                keys\r\n                    .filter(key => visualisation[key].visible)\r\n                    .map(key => ({\r\n                        y: yColumns[key][i],\r\n                        color: colors[key],\r\n                        name: names[key]\r\n                    }));\r\n            tooltip.render(absToRel(xMouse, x0, x1), xColumn[i], tooltipData);\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].onMouseMove(xMouse, x0, x1, y0, y1, width, height);\r\n            });\r\n        };\r\n\r\n        const updateYArea = () => {\r\n            let yColumnSum = null;\r\n\r\n            keys.filter(key => visualisation[key].visible).forEach(key => {\r\n                visualisation[key].onChange(stacked ? yColumnSum : null);\r\n                yColumnSum = arrSum(yColumnSum, yColumns[key]);\r\n            });\r\n\r\n            const { min, max } = stacked\r\n                ? calcYBounds(xColumn, yColumnSum, x0, x1, 'bar')\r\n                : minmax(keys.filter(key => visualisation[key].visible).map(key => getYBounds(key)));\r\n\r\n            // todo: need only one time\r\n            const { min: globalMin, max: globalMax } = stacked\r\n                ? calcYBounds(xColumn, yColumnSum, 0, 1, 'bar')\r\n                : minmax(keys.filter(key => visualisation[key].visible).map(key => getGlobalYBounds(key)));\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].yChartArea = [min, max];\r\n                visualisation[key].yMapArea = [globalMin, globalMax];\r\n            });\r\n\r\n            y0 = min;\r\n            y1 = max;\r\n            grid.render(x0, x1, y0, y1);\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        const deepUpdateYArea = () => {\r\n            resetYBoundsCash();\r\n            updateYArea();\r\n        };\r\n\r\n        const setUserViewport = (w, h) => {\r\n            chartViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n        };\r\n\r\n        const setXChartArea = (x0, x1) => {\r\n            chartAreaXTransform.setAttribute(\r\n                'transform',\r\n                `\r\n                    scale(${1 / (x1 - x0)} 1) \r\n                    translate(${-x0} 0)\r\n                `\r\n            );\r\n            deepUpdateYArea();\r\n        };\r\n\r\n        const updateXBounds = (a, b) => {\r\n            x0 = a;\r\n            x1 = b;\r\n            setXChartArea(x0, x1);\r\n            setMapWindow(x0, x1);\r\n        };\r\n\r\n        const mount = () => {\r\n            grid = new Grid(chartSvg);\r\n            tooltip = new Tooltip(chartSvg);\r\n\r\n            wrapper.insertBefore(mapNode, controls);\r\n\r\n            keys.forEach(key => {\r\n                chartAreaXTransform.appendChild(visualisation[key].node);\r\n            });\r\n\r\n            keys.forEach(key => {\r\n                appendBeforeOverlay(visualisation[key].mapNode);\r\n            });\r\n\r\n            keys.reverse().forEach(key => {\r\n                visualisation[key].intersectionPoint &&\r\n                    chartSvg.insertBefore(visualisation[key].intersectionPoint, tooltip.transformY);\r\n\r\n                controls.appendChild(\r\n                    createCheckBox(colors[key], names[key], value => {\r\n                        visualisation[key].visible = value;\r\n                        updateYArea();\r\n                    })\r\n                );\r\n            });\r\n        };\r\n\r\n        const onResize = () => {\r\n            const { width: svgWidth, height: svgHeight } = chartSvg.getBoundingClientRect();\r\n            const { width: mapWidth, height: mapHeight } = mapNode.getBoundingClientRect();\r\n            setUserViewport(svgWidth, svgHeight);\r\n            setMapViewport(mapWidth, mapHeight);\r\n\r\n            grid.resize();\r\n            tooltip.resize();\r\n            setMapWindow(x0, x1);\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        mount();\r\n        deepUpdateYArea();\r\n        onResize();\r\n        addListener(window, 'resize', onResize);\r\n\r\n        const getMapX = x => {\r\n            const rect = mapNode.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        const getChartX = x => {\r\n            const rect = chartSvg.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        addDragAndDropListeners(mapWindow, coords => {\r\n            const width = x1 - x0;\r\n            const left = getMapX(coords.x);\r\n            const right = left + width;\r\n            updateXBounds(boundBy(left, 0, 1 - width), boundBy(right, width, 1));\r\n        });\r\n        addDragAndDropListeners(windowLeftEdge, coords => {\r\n            const left = getMapX(coords.x + 10);\r\n            updateXBounds(boundBy(left, 0, x1 - MIN_WIN_WIDTH), x1);\r\n        });\r\n        addDragAndDropListeners(windowRightEdge, coords => {\r\n            const right = getMapX(coords.x);\r\n            updateXBounds(x0, boundBy(right, x0 + MIN_WIN_WIDTH, 1));\r\n        });\r\n\r\n        const onMouseMove = e => updateIntersections(x0 + (x1 - x0) * getChartX(e.clientX));\r\n        const onMouseLeave = () => {\r\n            if (!mouseXFixed) updateIntersections();\r\n        };\r\n        addListener(chartSvg, 'mousemove', onMouseMove);\r\n        addListener(chartSvg, 'mouseleave', onMouseLeave);\r\n        addListener(chartSvg, 'touchmove', e => updateIntersections(x0 + (x1 - x0) * getChartX(e.touches[0].clientX)));\r\n        addListener(chartSvg, 'mousedown', () => {\r\n            if (mouseXFixed) {\r\n                addListener(chartSvg, 'mousemove', onMouseMove);\r\n            } else {\r\n                removeListener(chartSvg, 'mousemove', onMouseMove);\r\n            }\r\n            mouseXFixed = !mouseXFixed;\r\n        });\r\n    };\r\n\r\n    return {\r\n        node: wrapper,\r\n        init\r\n    };\r\n};\r\n","import { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './map.css';\r\n\r\nexport default () => {\r\n    const mapSvg = createSvgElement('svg', {}, 'map-chart');\r\n    const map = createElement('map-container');\r\n    const svgWrapper = createElement('map-svg-wrapper');\r\n    const mapViewportTransform = createSvgElement('g');\r\n\r\n    svgWrapper.appendChild(mapSvg);\r\n    map.appendChild(svgWrapper);\r\n    mapSvg.appendChild(mapViewportTransform);\r\n\r\n    const mapOverlayLeft = createSvgElement('rect', { x: 0, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapOverlayRight = createSvgElement('rect', { x: 1, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapWindow = createElement('map-window', 'div');\r\n    const windowLeftEdge = createElement('map-left-edge', 'div');\r\n    const windowRightEdge = createElement('map-right-edge', 'div');\r\n\r\n    mapViewportTransform.append(mapOverlayLeft);\r\n    mapViewportTransform.append(mapOverlayRight);\r\n    map.append(mapWindow);\r\n    map.append(windowLeftEdge);\r\n    map.append(windowRightEdge);\r\n\r\n    const setMapViewport = (w, h) => {\r\n        mapViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n    };\r\n\r\n    const appendBeforeOverlay = node => {\r\n        mapViewportTransform.insertBefore(node, mapOverlayLeft);\r\n    };\r\n\r\n    const setMapWindow = (x0, x1) => {\r\n        mapOverlayLeft.setAttribute('width', x0);\r\n        mapOverlayRight.setAttribute('x', x1);\r\n        mapOverlayRight.setAttribute('width', 1 - x1);\r\n\r\n        const mapWidth = map.getBoundingClientRect().width;\r\n        mapWindow.style.left = `${x0 * mapWidth}px`;\r\n        mapWindow.style.width = `${(x1 - x0) * mapWidth}px`;\r\n        windowLeftEdge.style.left = `${x0 * mapWidth - 10}px`;\r\n        windowRightEdge.style.left = `${x1 * mapWidth - 1}px`;\r\n    };\r\n\r\n    return {\r\n        mapNode: map,\r\n        appendBeforeOverlay,\r\n        setMapViewport,\r\n        setMapWindow,\r\n        windowLeftEdge,\r\n        windowRightEdge,\r\n        mapWindow\r\n    };\r\n};\r\n","import './switch-button.css';\r\nimport { addListener } from '../../helpers/event-listeners';\r\n\r\nconst nightLabel = 'Switch to Day Mode';\r\nconst dayLabel = 'Switch to Night Mode';\r\n\r\nexport default () => {\r\n    const btn = document.createElement('div');\r\n    btn.id = 'btn-switch';\r\n\r\n    let night = false;\r\n    btn.textContent = dayLabel;\r\n\r\n    const switchToNight = () => {\r\n        btn.textContent = nightLabel;\r\n        document.body.className = 'night';\r\n        night = true;\r\n    };\r\n\r\n    const switchToDay = () => {\r\n        btn.textContent = dayLabel;\r\n        document.body.className = '';\r\n        night = false;\r\n    };\r\n\r\n    addListener(btn, 'click', () => {\r\n        if (night) {\r\n            switchToDay();\r\n        } else {\r\n            switchToNight();\r\n        }\r\n    });\r\n\r\n    return btn;\r\n};\r\n","import './global.css';\r\nimport createChart from './components/chart/chart';\r\nimport createFooter from './components/footer/footer';\r\nimport { createElement } from './helpers/elements';\r\n\r\nconst charts = createElement();\r\nconst root = document.getElementById('root');\r\nroot.appendChild(charts);\r\nroot.appendChild(createFooter());\r\n\r\nconst getData = dataNum =>\r\n    import(/* webpackChunkName: \"data\" */ `./data/${dataNum}/overview.json`).then(({ default: data }) => data);\r\n\r\ngetData(1)\r\n    .then(data => {\r\n        const { node, init } = createChart(data, 'Chart #0');\r\n        charts.appendChild(node);\r\n        init();\r\n    }).then(() => getData(2))\r\n    .then(data => {\r\n        const { node, init } = createChart(data, 'Chart #0');\r\n        charts.appendChild(node);\r\n        init();\r\n    }).then(() => getData(3))\r\n    .then(data => {\r\n        const { node, init } = createChart(data, 'Chart #0');\r\n        charts.appendChild(node);\r\n        init();\r\n    }).then(() => getData(4))\r\n    .then(data => {\r\n        const { node, init } = createChart(data, 'Chart #0');\r\n        charts.appendChild(node);\r\n        init();\r\n    }).then(() => getData(5))\r\n    .then(data => {\r\n        const { node, init } = createChart(data, 'Chart #0');\r\n        charts.appendChild(node);\r\n        init();\r\n    });","import createSwitchButton from '../switch-button/switch-button';\r\nimport './footer.css';\r\n\r\nexport default () => {\r\n    const footer = document.createElement('div');\r\n    footer.id = 'footer';\r\n    footer.appendChild(createSwitchButton());\r\n    return footer;\r\n};\r\n"],"sourceRoot":""}