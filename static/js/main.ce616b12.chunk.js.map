{"version":3,"sources":["components/icons/check-icon.svg","helpers/elements.js","helpers/event-listeners.js","components/check-box/check-box.js","components/icons/checkbox-icon.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","helpers/utils.js","components/chart/line.js","components/chart/chart.js","components/map/map.js","components/switch-button/switch-button.js","index.js","components/footer/footer.js"],"names":["module","exports","__webpack_require__","p","createElement","className","tag","arguments","length","undefined","node","document","createSvgElement","attrs","createElementNS","baseVal","Object","keys","forEach","key","setAttribute","addListener","element","event","listener","addEventListener","removeListener","removeEventListener","addDragAndDropListeners","getTouchCoords","e","x","touches","clientX","y","clientY","offset","offsetX","offsetY","getMouseOffset","onMouseMove","buttons","body","onMouseUp","mouseCoords","getMouseCoords","cornerCoords","box","getBoundingClientRect","touchCoords","left","top","getTouchOffset","onTouchMove","onTouchEnd","check_box_check_box","color","text","onChange","checked","wrapper","mark","style","label","textContent","appendChild","img","icon","createCheckIcon","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","source","ownKeys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","minmax","arr","min","max","_ref","y0","y1","Math","boundBy","right","relToAbs","rel","a","b","getLine","xColumn","yColumn","stroke","visible","points","xMin","dx","generatePoints","chartLine","stroke-linejoin","vector-effect","intersectionLineV","x1","x2","intersectionLineH","intersectionPoint0","r","intersectionPoint1","intersectionPoint2","intersectionPoint3","intersectionPoint4","intersectionPoint5","mapLine","mapAreaYTransform","chartAreaYTransform","chartLineNode","setYChartArea","mapLineNode","setYMapArea","visibility","flag","intersectionPoint","setIntersectionX","xRel","x0","svgW","svgH","display","xData","yData","interpolate","chart_chart","data","title","chartSvg","colors","names","_getColumns","types","columns","xKey","column","yColumns","reduce","getColumns","mouseX","keyToYBound","getYBounds","x0Rel","x1Rel","j","k","el","calcYBounds","chartViewportTransform","chartAreaXTransform","controls","header","init","lines","getLines","_createMap","mapSvg","map","svgWrapper","mapViewportTransform","mapOverlayLeft","width","height","mapOverlayRight","mapWindow","windowLeftEdge","windowRightEdge","append","mapNode","appendBeforeOverlay","insertBefore","setMapViewport","w","h","setMapWindow","mapWidth","createMap","updateIntersections","_chartSvg$getBounding","updateYArea","_minmax2","deepUpdateYArea","updateXBounds","setXChartArea","onResize","_chartSvg$getBounding2","svgWidth","svgHeight","_mapNode$getBoundingC","mapHeight","createCheckBox","_minmax","initYMapArea","window","getMapX","rect","coords","getChartX","switch_button_switch_button","btn","id","night","charts","root","getElementById","footer","createSwitchButton","createFooter","chartData","_createChart","createChart"],"mappings":"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","file":"static/js/main.ce616b12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-icon.cc4bfc9f.svg\";","export const createElement = (className, tag = 'div') => {\r\n    const node = document.createElement(tag);\r\n    if (className) node.className = className;\r\n    return node;\r\n};\r\n\r\nexport const createSvgElement = (tag, attrs, className) => {\r\n    const node = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    if (className) {\r\n        node.className.baseVal = className;\r\n    }\r\n    if (attrs) {\r\n        Object.keys(attrs).forEach(key => {\r\n            node.setAttribute(key, attrs[key]);\r\n        });\r\n    }\r\n    return node;\r\n};\r\n","export const addListener = (element, event, listener) => {\r\n    element.addEventListener(event, listener, false);\r\n};\r\n\r\nexport const removeListener = (element, event, listener) => {\r\n    element.removeEventListener(event, listener);\r\n};\r\n\r\nexport const addDragAndDropListeners = (element, listener) => {\r\n    const getMouseCoords = e => ({ x: e.clientX, y: e.clientY });\r\n    const getTouchCoords = e => ({ x: e.touches[0].clientX, y: e.touches[0].clientY });\r\n    const getMouseOffset = e => ({ x: e.offsetX, y: e.offsetY });\r\n    const getTouchOffset = e => {\r\n        const box = element.getBoundingClientRect();\r\n        const touchCoords = getTouchCoords(e);\r\n        return {\r\n            x: touchCoords.x - box.left,\r\n            y: touchCoords.y - box.top\r\n        };\r\n    };\r\n\r\n    addListener(element, 'mousedown', e => {\r\n        const offset = getMouseOffset(e);\r\n\r\n        const onMouseMove = e => {\r\n            if (e.buttons !== 1) {\r\n                removeListener(document.body, 'mousemove', onMouseMove);\r\n                removeListener(document.body, 'mouseup', onMouseUp);\r\n            } else {\r\n                const mouseCoords = getMouseCoords(e);\r\n                const cornerCoords = { x: mouseCoords.x - offset.x, y: mouseCoords.y + offset.y };\r\n                listener(cornerCoords);\r\n            }\r\n        };\r\n\r\n        function onMouseUp() {\r\n            removeListener(document.body, 'mousemove', onMouseMove);\r\n            removeListener(document.body, 'mouseup', onMouseUp);\r\n        }\r\n\r\n        addListener(document.body, 'mousemove', onMouseMove);\r\n        addListener(document.body, 'mouseup', onMouseUp);\r\n    });\r\n\r\n    addListener(element, 'touchstart', e => {\r\n        const offset = getTouchOffset(e);\r\n\r\n        const onTouchMove = e => {\r\n            const touchCoords = getTouchCoords(e);\r\n            const cornerCoords = { x: touchCoords.x - offset.x, y: touchCoords.y + offset.y };\r\n            listener(cornerCoords);\r\n        };\r\n\r\n        function onTouchEnd() {\r\n            removeListener(document.body, 'touchmove', onTouchMove);\r\n            removeListener(document.body, 'touchend', onTouchEnd);\r\n            removeListener(document.body, 'touchcancel', onTouchEnd);\r\n        }\r\n\r\n        addListener(document.body, 'touchmove', onTouchMove);\r\n        addListener(document.body, 'touchend', onTouchEnd);\r\n        addListener(document.body, 'touchcancel', onTouchEnd);\r\n    });\r\n};\r\n","import './check-box.css';\r\nimport { createElement } from '../../helpers/elements';\r\nimport { addListener } from '../../helpers/event-listeners';\r\nimport createCheckIcon from '../icons/checkbox-icon';\r\n\r\nconst uncheckedMark = 'cb_unchecked-mark';\r\nconst checkedMark = 'cb_checked-mark';\r\n\r\nexport default (color, text, onChange) => {\r\n    let checked = true;\r\n\r\n    const wrapper = createElement('cb_wrapper');\r\n\r\n    const mark = createElement(checkedMark);\r\n    mark.style.color = color;\r\n\r\n    const label = createElement('cb_label');\r\n    label.textContent = text;\r\n\r\n    wrapper.appendChild(mark);\r\n    wrapper.appendChild(label);\r\n\r\n    mark.appendChild(createCheckIcon());\r\n\r\n    addListener(wrapper, 'click', () => {\r\n        checked = !checked;\r\n        onChange && onChange(checked);\r\n        mark.className = checked ? checkedMark : uncheckedMark;\r\n    });\r\n\r\n    return wrapper;\r\n};\r\n","import icon from './check-icon.svg';\r\nimport { createElement } from '../../helpers/elements';\r\n\r\nexport default () => {\r\n    const img = createElement('icon', 'img');\r\n    img.setAttribute('src', icon);\r\n    return img;\r\n};\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export const minmax = arr => {\r\n    let min = null,\r\n        max = null;\r\n\r\n    arr.forEach(({ y0, y1 }) => {\r\n        min = min === null ? y0 : Math.min(min, y0);\r\n        max = max === null ? y1 : Math.max(max, y1);\r\n    });\r\n\r\n    return { min, max };\r\n};\r\n\r\nexport const boundBy = (x, left, right) => {\r\n    x = left === undefined ? x : Math.max(left, x);\r\n    x = right === undefined ? x : Math.min(right, x);\r\n    return x;\r\n};\r\n\r\nexport const relToAbs = (rel, a, b) => a + rel * (b - a);\r\n\r\nexport const absToRel = (abs, a, b) => (abs - a) / (b - a);\r\n\r\nexport const calcYBounds = (xData, yData, x0Rel, x1Rel) => {\r\n    let i = 1;\r\n    let j = xData.length - 1;\r\n\r\n    const x0 = relToAbs(x0Rel, xData[1], xData[j]);\r\n    const x1 = relToAbs(x1Rel, xData[1], xData[j]);\r\n\r\n    while (xData[i] < x0) i++;\r\n    while (xData[j] > x1) j--;\r\n\r\n    let min = yData[i],\r\n        max = yData[i];\r\n\r\n    for (let k = i + 1; k <= j; k++) {\r\n        const el = yData[k];\r\n        min = Math.min(min, el);\r\n        max = Math.max(max, el);\r\n    }\r\n\r\n    return { y0: min, y1: max };\r\n};\r\n\r\nexport const interpolate = (xData, yData, xRel) => {\r\n    const x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n\r\n    const y = yData[i - 1] + ((x - xData[i - 1]) * (yData[i] - yData[i - 1])) / (xData[i] - xData[i - 1]);\r\n    return y;\r\n};\r\n\r\nexport const getColumns = (types, columns) => {\r\n    const xKey = Object.keys(types).filter(key => types[key] === 'x')[0];\r\n    const xColumn = columns.filter(column => column[0] === xKey)[0];\r\n\r\n    const keys = Object.keys(types).filter(key => types[key] !== 'x');\r\n    const yColumns = keys.reduce((obj, key) => ({ ...obj, [key]: columns.filter(column => column[0] === key)[0] }), {});\r\n\r\n    return { xColumn, yColumns, keys };\r\n};\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport {absToRel, interpolate, relToAbs} from '../../helpers/utils';\r\n\r\nconst generatePoints = (x, y) => {\r\n    const length = x.length;\r\n\r\n    let xMin = x[1],\r\n        dx = x[length - 1] - xMin;\r\n    let points = '' + 0 + ',' + y[1] + ' ';\r\n\r\n    for (let i = 2; i < length; i++) {\r\n        points += '' + (x[i] - xMin) / dx + ',' + y[i] + ' ';\r\n    }\r\n\r\n    return points;\r\n};\r\n\r\nconst getLine = (xColumn, yColumn, stroke) => {\r\n    let visible = true;\r\n    const points = generatePoints(xColumn, yColumn);\r\n\r\n    const chartLine = createSvgElement(\r\n        'polyline',\r\n        { 'stroke-linejoin': 'round', 'vector-effect': 'non-scaling-stroke', points, stroke },\r\n        'chart-line'\r\n    );\r\n\r\n    const intersectionLineV = createSvgElement('line', { x1: 0, x2: 0, y0: 0, y1: 1, 'vector-effect': 'non-scaling-stroke' }, 'intersection-line');\r\n    const intersectionLineH = createSvgElement('line', { x1: -1, x2: 1, y0: 0, y1: 0, 'vector-effect': 'non-scaling-stroke' }, 'intersection-line');\r\n    const intersectionPoint0 = createSvgElement('circle', { r: 5, stroke }, 'intersection-point');\r\n    const intersectionPoint1 = createSvgElement('g', {}, '');\r\n    const intersectionPoint2 = createSvgElement('g', {}, 'animated');\r\n    const intersectionPoint3 = createSvgElement('g', {}, '');\r\n    const intersectionPoint4 = createSvgElement('g', {}, 'animated');\r\n    const intersectionPoint5 = createSvgElement('g', {}, '');\r\n    intersectionPoint1.appendChild(intersectionPoint0);\r\n    intersectionPoint2.appendChild(intersectionPoint1);\r\n    intersectionPoint3.appendChild(intersectionPoint2);\r\n    intersectionPoint4.appendChild(intersectionPoint3);\r\n    intersectionPoint5.appendChild(intersectionLineV);\r\n    intersectionPoint3.appendChild(intersectionLineH);\r\n    intersectionPoint5.appendChild(intersectionPoint4);\r\n\r\n    const mapLine = createSvgElement(\r\n        'polyline',\r\n        { 'stroke-linejoin': 'round', 'vector-effect': 'non-scaling-stroke', points, stroke },\r\n        'map-line'\r\n    );\r\n\r\n    const mapAreaYTransform = createSvgElement('g', {}, 'animated');\r\n    mapAreaYTransform.appendChild(mapLine);\r\n\r\n    const chartAreaYTransform = createSvgElement('g', {}, 'animated');\r\n    chartAreaYTransform.appendChild(chartLine);\r\n\r\n    const setYChartArea = (y0, y1) => {\r\n        chartAreaYTransform.setAttribute(\r\n            'transform',\r\n            `\r\n            scale(1 ${1 / (y1 - y0)}) \r\n            translate(0 ${-y0})\r\n        `\r\n        );\r\n    };\r\n\r\n    const setYMapArea = (y0, y1) => {\r\n        mapAreaYTransform.setAttribute(\r\n            'transform',\r\n            `\r\n            scale(1 ${1 / (y1 - y0)}) \r\n            translate(0 ${-y0})\r\n        `\r\n        );\r\n    };\r\n\r\n    const setIntersectionX = (xRel, x0, x1, y0, y1, svgW, svgH) => {\r\n        const x = absToRel(xRel, x0, x1);\r\n        if (x < 0 || x > 1) {\r\n            intersectionPoint5.style.display = 'none';\r\n            return;\r\n        }\r\n        intersectionPoint5.style.display = 'initial';\r\n\r\n        const y = interpolate(xColumn, yColumn, xRel);\r\n\r\n        intersectionPoint1.setAttribute('transform', `scale(${1 / svgW} ${1 / svgH})`);\r\n        intersectionPoint2.setAttribute('transform', `scale(1 ${y1 - y0})`);\r\n        intersectionPoint3.setAttribute('transform', `translate(0 ${y})`);\r\n        intersectionPoint4.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${(-y0)})`);\r\n        intersectionPoint5.setAttribute('transform', `scale(${svgW} ${svgH}) translate(${x} 0) `);\r\n\r\n    };\r\n\r\n    const visibility = flag => {\r\n        if (flag === undefined) {\r\n            /* reading */\r\n            return visible;\r\n        } else {\r\n            /* writing */\r\n            visible = flag;\r\n            intersectionPoint0.setAttribute('stroke', flag ? stroke : 'transparent');\r\n            chartLine.setAttribute('stroke', flag ? stroke : 'transparent');\r\n            mapLine.setAttribute('stroke', flag ? stroke : 'transparent');\r\n        }\r\n    };\r\n\r\n    return {\r\n        chartLineNode: chartAreaYTransform,\r\n        setYChartArea,\r\n        mapLineNode: mapAreaYTransform,\r\n        setYMapArea,\r\n        visibility,\r\n        intersectionPoint: intersectionPoint5,\r\n        setIntersectionX\r\n    };\r\n};\r\n\r\nexport default (keys, xColumn, yColumns, colors) => {\r\n    const keysToLines = keys.reduce((obj, key) => {\r\n        const line = getLine(xColumn, yColumns[key], colors[key]);\r\n        return {\r\n            ...obj,\r\n            [key]: line\r\n        };\r\n    }, {});\r\n\r\n    return keysToLines;\r\n};\r\n","import createCheckBox from '../check-box/check-box';\r\nimport getLines from './line';\r\nimport { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './chart.css';\r\nimport { boundBy, calcYBounds, getColumns, minmax } from '../../helpers/utils';\r\nimport { addDragAndDropListeners, addListener } from '../../helpers/event-listeners';\r\nimport createMap from '../map/map';\r\n\r\nconst MIN_WIN_WIDTH = 0.05;\r\n\r\nexport default (data, title) => {\r\n    const chartSvg = createSvgElement('svg', {}, 'ctr_chart');\r\n\r\n    const { colors, names, types, columns } = data;\r\n\r\n    const { xColumn, yColumns, keys } = getColumns(types, columns);\r\n\r\n    let x0 = 0;\r\n    let x1 = 1;\r\n    let y0 = 0;\r\n    let y1 = 1;\r\n    let mouseX = null;\r\n\r\n    let keyToYBound = {};\r\n    const getYBounds = key => keyToYBound[key] || (keyToYBound[key] = calcYBounds(xColumn, yColumns[key], x0, x1));\r\n    const resetYBoundsCash = () => (keyToYBound = {});\r\n\r\n    const chartViewportTransform = createSvgElement('g');\r\n    const chartAreaXTransform = createSvgElement('g');\r\n\r\n    const wrapper = createElement('crt_wrapper');\r\n    const controls = createElement('crt_controls');\r\n    const header = createElement();\r\n    header.textContent = title;\r\n\r\n    wrapper.appendChild(header);\r\n    wrapper.appendChild(chartSvg);\r\n    chartSvg.appendChild(chartViewportTransform);\r\n    chartViewportTransform.appendChild(chartAreaXTransform);\r\n    wrapper.appendChild(controls);\r\n\r\n    const init = () => {\r\n        const lines = getLines(keys, xColumn, yColumns, colors);\r\n        const {\r\n            mapNode,\r\n            setMapViewport,\r\n            appendBeforeOverlay,\r\n            setMapWindow,\r\n            windowLeftEdge,\r\n            windowRightEdge,\r\n            mapWindow\r\n        } = createMap();\r\n\r\n        const initYMapArea = () => {\r\n            const { min, max } = minmax(keys.map(key => getYBounds(key)));\r\n\r\n            keys.forEach(key => {\r\n                lines[key].setYMapArea(min, max);\r\n            });\r\n        };\r\n\r\n        const updateIntersections = xRel => {\r\n            const { width, height } = chartSvg.getBoundingClientRect();\r\n            if (xRel !== undefined) mouseX = xRel;\r\n            keys.forEach(key => lines[key].setIntersectionX(mouseX, x0, x1, y0, y1, width, height));\r\n        };\r\n\r\n        const updateYArea = () => {\r\n            const { min, max } = minmax(keys.filter(key => lines[key].visibility()).map(key => getYBounds(key)));\r\n\r\n            keys.forEach(key => {\r\n                lines[key].setYChartArea(min, max);\r\n            });\r\n\r\n            y0 = min;\r\n            y1 = max;\r\n            updateIntersections();\r\n        };\r\n\r\n        const deepUpdateYArea = () => {\r\n            resetYBoundsCash();\r\n            updateYArea();\r\n        };\r\n\r\n        const setUserViewport = (w, h) => {\r\n            chartViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n        };\r\n\r\n        const setXChartArea = (x0, x1) => {\r\n            chartAreaXTransform.setAttribute(\r\n                'transform',\r\n                `\r\n                    scale(${1 / (x1 - x0)} 1) \r\n                    translate(${-x0} 0)\r\n                `\r\n            );\r\n            deepUpdateYArea();\r\n        };\r\n\r\n        const updateXBounds = (a, b) => {\r\n            x0 = a;\r\n            x1 = b;\r\n            setXChartArea(x0, x1);\r\n            setMapWindow(x0, x1);\r\n            updateIntersections();\r\n        };\r\n\r\n        const onResize = () => {\r\n            const { width: svgWidth, height: svgHeight } = chartSvg.getBoundingClientRect();\r\n            const { width: mapWidth, height: mapHeight } = mapNode.getBoundingClientRect();\r\n            setUserViewport(svgWidth, svgHeight);\r\n            setMapViewport(mapWidth, mapHeight);\r\n\r\n            setMapWindow(x0, x1);\r\n            updateIntersections();\r\n        };\r\n\r\n        const mount = () => {\r\n            wrapper.insertBefore(mapNode, controls);\r\n\r\n            keys.forEach(key => {\r\n                chartAreaXTransform.appendChild(lines[key].chartLineNode);\r\n\r\n                chartSvg.appendChild(lines[key].intersectionPoint);\r\n\r\n                appendBeforeOverlay(lines[key].mapLineNode);\r\n                controls.appendChild(\r\n                    createCheckBox(colors[key], names[key], value => {\r\n                        lines[key].visibility(value);\r\n                        updateYArea();\r\n                    })\r\n                );\r\n            });\r\n        };\r\n\r\n        mount();\r\n        initYMapArea();\r\n        deepUpdateYArea();\r\n        onResize();\r\n        addListener(window, 'resize', onResize);\r\n\r\n        const getMapX = x => {\r\n            const rect = mapNode.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        const getChartX = x => {\r\n            const rect = chartSvg.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        addDragAndDropListeners(mapWindow, coords => {\r\n            const width = x1 - x0;\r\n            const left = getMapX(coords.x);\r\n            const right = left + width;\r\n            updateXBounds(boundBy(left, 0, 1 - width), boundBy(right, width, 1));\r\n        });\r\n        addDragAndDropListeners(windowLeftEdge, coords => {\r\n            const left = getMapX(coords.x + 10);\r\n            updateXBounds(boundBy(left, 0, x1 - MIN_WIN_WIDTH), x1);\r\n        });\r\n        addDragAndDropListeners(windowRightEdge, coords => {\r\n            const right = getMapX(coords.x);\r\n            updateXBounds(x0, boundBy(right, x0 + MIN_WIN_WIDTH, 1));\r\n        });\r\n        addListener(chartSvg, 'mousemove', e => updateIntersections(x0 + (x1 - x0) * getChartX(e.clientX)));\r\n    };\r\n\r\n    return {\r\n        node: wrapper,\r\n        init\r\n    };\r\n};\r\n","import { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './map.css';\r\n\r\nexport default () => {\r\n    const mapSvg = createSvgElement('svg', {}, 'map-chart');\r\n    const map = createElement('map-container');\r\n    const svgWrapper = createElement('map-svg-wrapper');\r\n    const mapViewportTransform = createSvgElement('g');\r\n\r\n    svgWrapper.appendChild(mapSvg);\r\n    map.appendChild(svgWrapper);\r\n    mapSvg.appendChild(mapViewportTransform);\r\n\r\n    const mapOverlayLeft = createSvgElement('rect', { x: 0, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapOverlayRight = createSvgElement('rect', { x: 1, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapWindow = createElement('map-window', 'div');\r\n    const windowLeftEdge = createElement('map-left-edge', 'div');\r\n    const windowRightEdge = createElement('map-right-edge', 'div');\r\n\r\n    mapViewportTransform.append(mapOverlayLeft);\r\n    mapViewportTransform.append(mapOverlayRight);\r\n    map.append(mapWindow);\r\n    map.append(windowLeftEdge);\r\n    map.append(windowRightEdge);\r\n\r\n    const setMapViewport = (w, h) => {\r\n        mapViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n    };\r\n\r\n    const appendBeforeOverlay = node => {\r\n        mapViewportTransform.insertBefore(node, mapOverlayLeft);\r\n    };\r\n\r\n    const setMapWindow = (x0, x1) => {\r\n        mapOverlayLeft.setAttribute('width', x0);\r\n        mapOverlayRight.setAttribute('x', x1);\r\n        mapOverlayRight.setAttribute('width', 1 - x1);\r\n\r\n        const mapWidth = map.getBoundingClientRect().width;\r\n        mapWindow.style.left = `${x0 * mapWidth}px`;\r\n        mapWindow.style.width = `${(x1 - x0) * mapWidth}px`;\r\n        windowLeftEdge.style.left = `${x0 * mapWidth - 10}px`;\r\n        windowRightEdge.style.left = `${x1 * mapWidth - 1}px`;\r\n    };\r\n\r\n    return {\r\n        mapNode: map,\r\n        appendBeforeOverlay,\r\n        setMapViewport,\r\n        setMapWindow,\r\n        windowLeftEdge,\r\n        windowRightEdge,\r\n        mapWindow\r\n    };\r\n};\r\n","import './switch-button.css';\r\nimport { addListener } from '../../helpers/event-listeners';\r\n\r\nconst nightLabel = 'Switch to Day Mode';\r\nconst dayLabel = 'Switch to Night Mode';\r\n\r\nexport default () => {\r\n    const btn = document.createElement('div');\r\n    btn.id = 'btn-switch';\r\n\r\n    let night = false;\r\n    btn.textContent = dayLabel;\r\n\r\n    const switchToNight = () => {\r\n        btn.textContent = nightLabel;\r\n        document.body.className = 'night';\r\n        night = true;\r\n    };\r\n\r\n    const switchToDay = () => {\r\n        btn.textContent = dayLabel;\r\n        document.body.className = '';\r\n        night = false;\r\n    };\r\n\r\n    addListener(btn, 'click', () => {\r\n        if (night) {\r\n            switchToDay();\r\n        } else {\r\n            switchToNight();\r\n        }\r\n    });\r\n\r\n    return btn;\r\n};\r\n","import './global.css';\r\nimport createChart from './components/chart/chart';\r\nimport createFooter from './components/footer/footer';\r\nimport data from './data/1/overview';\r\nimport { createElement } from './helpers/elements';\r\n\r\nconst charts = createElement();\r\nconst root = document.getElementById('root');\r\nroot.appendChild(charts);\r\nroot.appendChild(createFooter());\r\n\r\n[data].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #1');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n","import createSwitchButton from '../switch-button/switch-button';\r\nimport './footer.css';\r\n\r\nexport default () => {\r\n    const footer = document.createElement('div');\r\n    footer.id = 'footer';\r\n    footer.appendChild(createSwitchButton());\r\n    return footer;\r\n};\r\n"],"sourceRoot":""}