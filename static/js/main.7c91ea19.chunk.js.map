{"version":3,"sources":["components/icons/check-icon.svg","data lazy /^/.*/overview/.json$/ groupOptions: {} namespace object","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","helpers/elements.js","helpers/event-listeners.js","components/check-box/check-box.js","components/icons/checkbox-icon.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","helpers/utils.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","components/chart/line.js","components/chart/bars.js","helpers/date-time.js","components/tooltip/tooltip.js","components/grid/grid.js","components/chart/chart.js","components/map/map.js","components/switch-button/switch-button.js","index.js","components/footer/footer.js"],"names":["module","exports","__webpack_require__","p","map","./1/overview.json","./2/overview.json","./3/overview.json","./4/overview.json","./5/overview.json","webpackAsyncContext","req","ids","e","then","id","t","Promise","resolve","Error","code","keys","Object","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_toConsumableArray","arr2","_arrayWithoutHoles","iter","prototype","toString","call","from","_iterableToArray","_nonIterableSpread","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_setPrototypeOf","o","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","isNativeReflectConstruct","a","apply","instance","Function","bind","arguments","createElement","className","tag","node","document","createSvgElement","attrs","createElementNS","baseVal","forEach","setAttribute","clearChildren","el","childNodes","removeChild","addListener","element","event","listener","addEventListener","removeListener","removeEventListener","addDragAndDropListeners","getTouchCoords","x","targetTouches","clientX","y","clientY","offset","offsetX","offsetY","getMouseOffset","onMouseMove","buttons","body","onMouseUp","mouseCoords","getMouseCoords","cornerCoords","box","getBoundingClientRect","touchCoords","left","top","getTouchOffset","touchId","changedTouches","identifier","onTouchMove","onTouchEnd","check_box_check_box","color","text","onChange","onClear","checked","wrapper","style","backgroundColor","borderColor","mark","label","textContent","appendChild","img","icon","createCheckIcon","toggle","flag","opacity","onclick","timeoutId","clear","onStartHolding","setTimeout","onEndHolding","clearTimeout","_classCallCheck","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","minmax","min","max","_ref","_ref2","y0","y1","Math","boundBy","right","relToAbs","rel","b","absToRel","abs","calcYBounds","xData","yData","x0Rel","x1Rel","type","j","x0","x1","k","findClosestIndex","xRel","bars","floor","getColumns","types","columns","xKey","filter","xColumn","column","slice","yColumns","reduce","source","ownKeys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","_objectSpread","arrSum","colorToGrb","c","replace","r","parseInt","g","sdf","split","roundNumber","n","str","toFixed","numberFormat","generatePoints","area","yBase","yFull","yVal","xMin","dx","points","Line","yColumn","_this","this","yColumnBase","yColumnFull","_yColumnBase","_area","_xColumn","_yColumn","_chartLine","_mapLine","_visible","_color","stroke-linejoin","vector-effect","stroke","fill","intersectionLineV","x2","intersectionPoint","_intersectionLineH","_intersectionPoint0","_intersectionPoint1","_intersectionPoint2","_intersectionPoint3","_intersectionPoint4","mapNode","val","_ref4","_ref3","svgW","svgH","display","stroke-width","_selectedBar","xMouse","step","ceil","background","window","getComputedStyle","c1","c2","_colorToGrb","r1","g1","b1","_colorToGrb2","r2","g2","b2","rgbToString","calcOpacityColor","dateFormat","ms","showDayOfWeek","date","dayOfWeek","days","getDay","dayOfMonth","getDate","month","months","getMonth","year","getFullYear","MARGIN","PADDING","WIDTH","LINE_HEIGHT","Tooltip","parentNode","transformY","transformX","rect","rx","ry","width","transform","svgBox","height","xAbs","data","percentage","factor","xText","name","yName","dy","text-anchor","Grid","labels","resize","_this$node$parentNode","colors","convertPoint","show0","show1","_this$node$parentNode2","countV","countH","ySteps","yStep","len","xSteps","xStep","yCur","line","y2","alignment-baseline","xCur","typeToConstructor","_len","_key","bar","_len2","_key2","Bars","_len3","_key3","chart_chart","titleText","tooltip","grid","chartSvg","_prepareData","originY2","names","stacked","doubleY","y_scaled","globalYBounds","_getColumns","globalMax","values","bound","prepareData","mouseXFixed","periodFormat","keyToYBound","chartViewportTransform","chartAreaXTransform","controls","header","title","bounds","noData","init","visualisation","reverse","assign","_createMap","mapSvg","svgWrapper","mapViewportTransform","mapOverlayLeft","mapOverlayRight","mapWindow","windowLeftEdge","windowRightEdge","append","appendBeforeOverlay","insertBefore","setMapViewport","w","h","setMapWindow","mapWidth","createMap","updateIntersections","_chartSvg$getBounding","tooltipData","visible","render","updateYArea","yColumnSum","getYBounds","_ref5","globalMin","yChartArea","yMapArea","deepUpdateYArea","updateXBounds","setXChartArea","onResize","_chartSvg$getBounding2","svgWidth","svgHeight","_mapNode$getBoundingC","mapHeight","toggleCheckBoxes","_createCheckBox","createCheckBox","every","innerKey","cb","mount","getMapX","getChartX","coords","touches","switch_button_switch_button","btn","night","classList","charts","root","getElementById","footer","createSwitchButton","createFooter","dataPromise","chartNum","dataNum","default","_createChart","createChart"],"mappings":"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","file":"static/js/main.7c91ea19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-icon.fa65b9e0.svg\";","var map = {\n\t\"./1/overview.json\": [\n\t\t12,\n\t\t0\n\t],\n\t\"./2/overview.json\": [\n\t\t13,\n\t\t1\n\t],\n\t\"./3/overview.json\": [\n\t\t14,\n\t\t2\n\t],\n\t\"./4/overview.json\": [\n\t\t15,\n\t\t3\n\t],\n\t\"./5/overview.json\": [\n\t\t16,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 10;\nmodule.exports = webpackAsyncContext;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export const createElement = (className, tag = 'div') => {\r\n    const node = document.createElement(tag);\r\n    if (className) node.className = className;\r\n    return node;\r\n};\r\n\r\nexport const createSvgElement = (tag, attrs, className) => {\r\n    const node = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    if (className) {\r\n        node.className.baseVal = className;\r\n    }\r\n    if (attrs) {\r\n        Object.keys(attrs).forEach(key => {\r\n            node.setAttribute(key, attrs[key]);\r\n        });\r\n    }\r\n    return node;\r\n};\r\n\r\nexport const clearChildren = el => {\r\n    while (el.childNodes.length) {\r\n        el.removeChild(el.childNodes[0]);\r\n    }\r\n};\r\n","export const addListener = (element, event, listener) => {\r\n    element.addEventListener(event, listener, false);\r\n};\r\n\r\nexport const removeListener = (element, event, listener) => {\r\n    element.removeEventListener(event, listener);\r\n};\r\n\r\nexport const addDragAndDropListeners = (element, listener) => {\r\n    const getMouseCoords = e => ({ x: e.clientX, y: e.clientY });\r\n    const getTouchCoords = e => ({ x: e.targetTouches[0].clientX, y: e.targetTouches[0].clientY });\r\n    const getMouseOffset = e => ({ x: e.offsetX, y: e.offsetY });\r\n    const getTouchOffset = e => {\r\n        const box = element.getBoundingClientRect();\r\n        const touchCoords = getTouchCoords(e);\r\n        return {\r\n            x: touchCoords.x - box.left,\r\n            y: touchCoords.y - box.top\r\n        };\r\n    };\r\n\r\n    addListener(element, 'mousedown', e => {\r\n        const offset = getMouseOffset(e);\r\n\r\n        const onMouseMove = e => {\r\n            if (e.buttons !== 1) {\r\n                removeListener(document.body, 'mousemove', onMouseMove);\r\n                removeListener(document.body, 'mouseup', onMouseUp);\r\n            } else {\r\n                const mouseCoords = getMouseCoords(e);\r\n                const cornerCoords = { x: mouseCoords.x - offset.x, y: mouseCoords.y + offset.y };\r\n                listener(cornerCoords);\r\n            }\r\n        };\r\n\r\n        function onMouseUp() {\r\n            removeListener(document.body, 'mousemove', onMouseMove);\r\n            removeListener(document.body, 'mouseup', onMouseUp);\r\n        }\r\n\r\n        addListener(document.body, 'mousemove', onMouseMove);\r\n        addListener(document.body, 'mouseup', onMouseUp);\r\n    });\r\n\r\n    addListener(element, 'touchstart', e => {\r\n        const offset = getTouchOffset(e);\r\n        const touchId = e.changedTouches[0].identifier;\r\n\r\n        const onTouchMove = e => {\r\n            if (e.targetTouches[0].identifier !== touchId) return;\r\n            const touchCoords = getTouchCoords(e);\r\n            const cornerCoords = { x: touchCoords.x - offset.x, y: touchCoords.y + offset.y };\r\n            listener(cornerCoords);\r\n        };\r\n\r\n        function onTouchEnd() {\r\n            removeListener(document.body, 'touchmove', onTouchMove);\r\n            removeListener(document.body, 'touchend', onTouchEnd);\r\n            removeListener(document.body, 'touchcancel', onTouchEnd);\r\n        }\r\n\r\n        addListener(document.body, 'touchmove', onTouchMove);\r\n        addListener(document.body, 'touchend', onTouchEnd);\r\n        addListener(document.body, 'touchcancel', onTouchEnd);\r\n    });\r\n};\r\n","import './check-box.css';\r\nimport { createElement } from '../../helpers/elements';\r\nimport { addListener } from '../../helpers/event-listeners';\r\nimport createCheckIcon from '../icons/checkbox-icon';\r\n\r\nexport default (color, text, onChange, onClear) => {\r\n    let checked = true;\r\n\r\n    const wrapper = createElement('cb_wrapper');\r\n    wrapper.style.backgroundColor = color;\r\n    wrapper.style.borderColor = color;\r\n\r\n    const mark = createElement('mark');\r\n\r\n    const label = createElement('cb_label');\r\n    label.textContent = text;\r\n\r\n    wrapper.appendChild(mark);\r\n    wrapper.appendChild(label);\r\n\r\n    mark.appendChild(createCheckIcon());\r\n\r\n    const toggle = flag => {\r\n        checked = flag === undefined ? !checked : flag;\r\n        onChange && onChange(checked);\r\n        wrapper.style.backgroundColor = checked ? color : 'transparent';\r\n        label.style.color = checked ? 'white' : color;\r\n        mark.style.opacity = +checked;\r\n    };\r\n\r\n    const onclick = () => toggle();\r\n    addListener(wrapper, 'mousedown', onclick);\r\n    addListener(wrapper, 'touchcancel', onclick);\r\n\r\n    let timeoutId = null;\r\n    const clear = () => {\r\n        onClear && onClear();\r\n    };\r\n    const onStartHolding = () => {\r\n        timeoutId = setTimeout(clear, 1000);\r\n    };\r\n    const onEndHolding = () => {\r\n        clearTimeout(timeoutId);\r\n    };\r\n    addListener(wrapper, 'touchstart', onStartHolding);\r\n    addListener(wrapper, 'mousedown', onStartHolding);\r\n    addListener(wrapper, 'touchend', onEndHolding);\r\n    addListener(wrapper, 'mouseup', onEndHolding);\r\n\r\n    return { node: wrapper, toggle };\r\n};\r\n","import icon from './check-icon.svg';\r\nimport { createElement } from '../../helpers/elements';\r\n\r\nexport default () => {\r\n    const img = createElement('icon', 'img');\r\n    img.setAttribute('src', icon);\r\n    return img;\r\n};\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export const minmax = arr => {\r\n    let min = null,\r\n        max = null;\r\n\r\n    arr.forEach(([y0, y1]) => {\r\n        min = min === null ? y0 : Math.min(min, y0);\r\n        max = max === null ? y1 : Math.max(max, y1);\r\n    });\r\n\r\n    return [min, max];\r\n};\r\n\r\nexport const boundBy = (x, left, right) => {\r\n    x = left === undefined ? x : Math.max(left, x);\r\n    x = right === undefined ? x : Math.min(right, x);\r\n    return x;\r\n};\r\n\r\nexport const relToAbs = (rel, a, b) => a + rel * (b - a);\r\n\r\nexport const absToRel = (abs, a, b) => (abs - a) / (b - a);\r\n\r\nexport const calcYBounds = (xData, yData, x0Rel, x1Rel, type) => {\r\n    if (!yData) return [0, 0];\r\n\r\n    let i = 1;\r\n    let j = xData.length - 1;\r\n\r\n    const x0 = relToAbs(x0Rel, xData[0], xData[j]);\r\n    const x1 = relToAbs(x1Rel, xData[0], xData[j]);\r\n\r\n    while (xData[i] < x0) i++;\r\n    while (xData[j] > x1) j--;\r\n\r\n    let min = yData[i],\r\n        max = yData[i];\r\n\r\n    for (let k = i + 1; k <= j; k++) {\r\n        const el = yData[k];\r\n        min = Math.min(min, el);\r\n        max = Math.max(max, el);\r\n    }\r\n\r\n    return [type === 'line' ? min : 0, max];\r\n};\r\n\r\nexport const findClosestIndex = (xData, xRel, bars) => {\r\n    if (!xRel) return null;\r\n    if (bars) {\r\n        return Math.floor(xRel * xData.length);\r\n    }\r\n    let x = relToAbs(xRel, xData[0], xData[xData.length - 1]);\r\n\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    i = (xData[i - 1] + xData[i]) / 2 < x ? i : i - 1;\r\n    return i;\r\n};\r\n\r\n/*\r\nexport const interpolate = (xData, yData, xRel) => {\r\n    if (!xRel) return null;\r\n    const x = relToAbs(xRel, xData[0], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    const y = yData[i - 1] + ((x - xData[i - 1]) * (yData[i] - yData[i - 1])) / (xData[i] - xData[i - 1]);\r\n    return y;\r\n};\r\n*/\r\n\r\nexport const getColumns = (types, columns) => {\r\n    const xKey = Object.keys(types).filter(key => types[key] === 'x')[0];\r\n    const xColumn = columns.filter(column => column[0] === xKey)[0].slice(1);\r\n\r\n    const keys = Object.keys(types).filter(key => types[key] !== 'x');\r\n    const yColumns = keys.reduce(\r\n        (obj, key) => ({ ...obj, [key]: columns.filter(column => column[0] === key)[0].slice(1) }),\r\n        {}\r\n    );\r\n\r\n    return { xColumn, yColumns, keys };\r\n};\r\n\r\nexport const arrSum = (a, b) => {\r\n    if (!a) return [...b];\r\n    return a.map((el, i) => el + b[i]);\r\n};\r\n\r\nconst colorToGrb = c => {\r\n    c = c.replace(/ /g, '');\r\n    if (c[0] === '#') {\r\n        if (c.length === 4) {\r\n            // #rgb\r\n            return {\r\n                r: parseInt(c[1] + c[1], 16),\r\n                g: parseInt(c[2] + c[2], 16),\r\n                b: parseInt(c[3] + c[3], 16)\r\n            };\r\n        } else {\r\n            // #rrggbb\r\n            return {\r\n                r: parseInt(c.slice(1, 3), 16),\r\n                g: parseInt(c.slice(3, 5), 16),\r\n                b: parseInt(c.slice(5, 7), 16)\r\n            };\r\n        }\r\n    } else {\r\n        // rgb(r,g,b)\r\n        const sdf = c.slice(4, -1).split(',');\r\n        return {\r\n            r: +sdf[0],\r\n            g: +sdf[1],\r\n            b: +sdf[2]\r\n        };\r\n    }\r\n};\r\n\r\nconst rgbToString = ({ r, g, b }) => `rgb(${r}, ${g}, ${b})`;\r\n\r\nexport const calcOpacityColor = (c1, c2, opacity) => {\r\n    const { r: r1, g: g1, b: b1 } = colorToGrb(c1);\r\n    const { r: r2, g: g2, b: b2 } = colorToGrb(c2);\r\n    return rgbToString({\r\n        r: (opacity * r1 + (1 - opacity) * r2).toFixed(),\r\n        g: (opacity * g1 + (1 - opacity) * g2).toFixed(),\r\n        b: (opacity * b1 + (1 - opacity) * b2).toFixed()\r\n    });\r\n};\r\n\r\nexport const prepareData = data => {\r\n    const { colors, names, types, columns, percentage, stacked, y_scaled: doubleY } = data;\r\n\r\n    var originY2;\r\n    let globalYBounds = {};\r\n    let { xColumn, yColumns, keys } = getColumns(types, columns);\r\n\r\n    keys.forEach(key => {\r\n        globalYBounds[key] = calcYBounds(xColumn, yColumns[key], 0, 1, types[key]);\r\n    });\r\n\r\n    const globalMax = minmax(Object.values(globalYBounds))[1];\r\n\r\n    let factor = 1;\r\n    if (globalMax > 1000000000) {\r\n        factor = 1000000;\r\n    }\r\n    if (globalMax > 1000000) {\r\n        factor = 1000;\r\n    }\r\n\r\n    keys.forEach(key => {\r\n        yColumns[key] = yColumns[key].map(el => el / factor);\r\n        globalYBounds[key] = globalYBounds[key].map(bound => bound / factor);\r\n    });\r\n\r\n    if (doubleY) {\r\n        originY2 = yColumns.y1;\r\n        yColumns.y1 = yColumns.y1.map(el => relToAbs(absToRel(el, ...globalYBounds.y1), ...globalYBounds.y0));\r\n    }\r\n\r\n    return {\r\n        colors,\r\n        names,\r\n        types,\r\n        percentage,\r\n        stacked,\r\n        doubleY,\r\n        xColumn,\r\n        yColumns,\r\n        keys,\r\n        globalYBounds,\r\n        factor,\r\n        originY2\r\n    };\r\n};\r\n\r\nconst roundNumber = n => {\r\n    const str = n.toFixed(3);\r\n    let i = str.length;\r\n    while (str[i - 1] === '0') i--;\r\n    if (str[i - 1] === '.') i--;\r\n    return i ? str.slice(0, i) : 0;\r\n};\r\n\r\nexport const numberFormat = n => {\r\n    if (n >= 1000000000) {\r\n        return roundNumber(n / 1000000000) + ' B';\r\n    }\r\n    if (n >= 1000000) {\r\n        return roundNumber(n / 1000000) + ' M';\r\n    }\r\n    return roundNumber(n);\r\n};\r\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import { createSvgElement } from '../../helpers/elements';\r\nimport { absToRel, findClosestIndex } from '../../helpers/utils';\r\n\r\nconst generatePoints = (area, x, y, yBase = [], yFull = []) => {\r\n    const length = x.length;\r\n\r\n    const yVal = i => ((yBase[i] || 0) + y[i]) * (100 / yFull[i] || 1);\r\n\r\n    let xMin = x[0],\r\n        dx = x[length - 1] - xMin,\r\n        points = `0,${yVal(0)} `;\r\n\r\n    for (let i = 1; i < length; i++) {\r\n        points += `${(x[i] - xMin) / dx},${yVal(i)} `;\r\n    }\r\n\r\n    return area ? `0,0 ${points} 1,0` : points;\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        if (!this._area) {\r\n            this._intersectionPoint0.setAttribute('opacity', +val);\r\n            this._intersectionLineH.setAttribute('opacity', +val);\r\n        }\r\n        this._chartLine.setAttribute('opacity', +val);\r\n        this._mapLine.setAttribute('opacity', +val);\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(area, keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n        this._area = area;\r\n\r\n        const points = generatePoints(area, xColumn, yColumn);\r\n        this._chartLine = createSvgElement(\r\n            area ? 'polygon' : 'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'chart-line'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'map-line'\r\n        );\r\n\r\n        const intersectionLineV = createSvgElement(\r\n            'line',\r\n            { x1: 0, x2: 0, y0: 0, y1: 1, 'vector-effect': 'non-scaling-stroke' },\r\n            'intersection-line'\r\n        );\r\n\r\n        this.intersectionPoint = createSvgElement('g', {}, '');\r\n        this.intersectionPoint.appendChild(intersectionLineV);\r\n\r\n        if (!area) {\r\n            this._intersectionLineH = createSvgElement(\r\n                'line',\r\n                {\r\n                    x1: -1,\r\n                    x2: 1,\r\n                    y0: 0,\r\n                    y1: 0,\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'intersection-line'\r\n            );\r\n\r\n            this._intersectionPoint0 = createSvgElement(\r\n                'circle',\r\n                { r: 5, stroke: color, fill: 'white' },\r\n                'intersection-point'\r\n            );\r\n            this._intersectionPoint1 = createSvgElement('g', {}, '');\r\n            this._intersectionPoint2 = createSvgElement('g', {}, 'animated');\r\n            this._intersectionPoint3 = createSvgElement('g', {}, '');\r\n            this._intersectionPoint4 = createSvgElement('g', {}, 'animated');\r\n            this._intersectionPoint1.appendChild(this._intersectionPoint0);\r\n            this._intersectionPoint2.appendChild(this._intersectionPoint1);\r\n            this._intersectionPoint3.appendChild(this._intersectionLineH);\r\n            this._intersectionPoint3.appendChild(this._intersectionPoint2);\r\n            this._intersectionPoint4.appendChild(this._intersectionPoint3);\r\n            this.intersectionPoint.appendChild(this._intersectionPoint4);\r\n        }\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n    }\r\n\r\n    onChange = (yColumnBase, yColumnFull) => {\r\n        this._yColumnBase = yColumnBase;\r\n        const points = generatePoints(this._area, this._xColumn, this._yColumn, yColumnBase, yColumnFull);\r\n        this._chartLine.setAttribute('points', points);\r\n        this._mapLine.setAttribute('points', points);\r\n    };\r\n\r\n    onMouseMove(xRel, x0, x1, y0, y1, svgW, svgH) {\r\n        let x = absToRel(xRel, x0, x1);\r\n        if (x < 0 || x > 1) {\r\n            this.intersectionPoint.style.display = 'none';\r\n            return;\r\n        }\r\n\r\n        this.intersectionPoint.style.display = 'initial';\r\n        const i = findClosestIndex(this._xColumn, xRel);\r\n        x = absToRel(this._xColumn[i], this._xColumn[0], this._xColumn[this._xColumn.length - 1]);\r\n        this.intersectionPoint.setAttribute('transform', `scale(${svgW} ${svgH}) translate(${absToRel(x, x0, x1)} 0) `);\r\n\r\n        if (!this._area) {\r\n            const y = this._yColumn[i];\r\n\r\n            this._intersectionPoint1.setAttribute('transform', `scale(${1 / svgW} ${1 / svgH})`);\r\n            this._intersectionPoint2.setAttribute('transform', `scale(1 ${y1 - y0})`);\r\n            this._intersectionPoint3.setAttribute('transform', `translate(0 ${y})`);\r\n            this._intersectionPoint4.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n        }\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport { calcOpacityColor } from '../../helpers/utils';\r\n\r\nconst generatePoints = (x, y, yBase) => {\r\n    // unused x\r\n    const length = x.length;\r\n\r\n    if (!yBase) {\r\n        let points = `0,0 0,${y[0]} `;\r\n\r\n        for (let i = 1; i < length; i++) {\r\n            points += `${i / length},${y[i - 1]} ${i / length},${y[i]} `;\r\n        }\r\n        points += `1,${y[length - 1]} 1,0`;\r\n\r\n        return points;\r\n    } else {\r\n        let points = `0,0 0,${yBase[0] + y[0]} `;\r\n\r\n        for (let i = 1; i < length; i++) {\r\n            points += `${i / length},${yBase[i - 1] + y[i - 1]} ${i / length},${yBase[i] + y[i]} `;\r\n        }\r\n        points += `1,${yBase[length - 1] + y[length - 1]} 1,0`;\r\n\r\n        return points;\r\n    }\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._chartLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._selectedBar.setAttribute('fill', 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        this._chartLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._selectedBar = createSvgElement(\r\n            'rect',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'map-bar'\r\n        );\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n        this.node.appendChild(this._selectedBar);\r\n    }\r\n\r\n    onChange = yColumnBase => {\r\n        this._yColumnBase = yColumnBase;\r\n        const points = generatePoints(this._xColumn, this._yColumn, yColumnBase);\r\n        this._chartLine.setAttribute('points', points);\r\n        this._mapLine.setAttribute('points', points);\r\n    };\r\n\r\n    onMouseMove(xMouse) {\r\n        if (!xMouse) {\r\n            this._chartLine.setAttribute('fill', this._visible ? this._color : 'transparent');\r\n            this._selectedBar.setAttribute('fill', 'transparent');\r\n            return;\r\n        }\r\n\r\n        if (this._visible) {\r\n            const step = 1 / this._xColumn.length;\r\n            const i = Math.ceil(xMouse / step);\r\n            this._selectedBar.setAttribute('x', (i - 1) * step);\r\n            this._selectedBar.setAttribute('y', this._yColumnBase ? this._yColumnBase[i - 1] : 0);\r\n            this._selectedBar.setAttribute('width', step);\r\n            this._selectedBar.setAttribute('height', this._yColumn[i - 1]);\r\n            this._selectedBar.setAttribute('fill', this._color);\r\n            const background = window.getComputedStyle(document.body).backgroundColor;\r\n            this._chartLine.setAttribute('fill', calcOpacityColor(this._color, background, 0.5));\r\n        }\r\n    }\r\n}\r\n","export const dateFormat = (ms, showDayOfWeek) => {\r\n    const date = new Date(ms);\r\n    const dayOfWeek = days[date.getDay()];\r\n    const dayOfMonth = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    return `${showDayOfWeek ? dayOfWeek + ', ' : ''}${dayOfMonth} ${month} ${year}`;\r\n};\r\n\r\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jule', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\nexport const DAY = 24 * 60 * 60 * 1000;\r\n","import { clearChildren, createSvgElement } from '../../helpers/elements';\r\nimport './tooltip.css';\r\nimport { dateFormat } from '../../helpers/date-time';\r\nimport { numberFormat } from '../../helpers/utils';\r\n\r\nconst MARGIN = 20;\r\nconst PADDING = 10;\r\nconst WIDTH = 180;\r\nconst LINE_HEIGHT = 18;\r\n\r\nexport default class Tooltip {\r\n    constructor(parentNode) {\r\n        this.transformY = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.transformX = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.rect = createSvgElement(\r\n            'rect',\r\n            { x: MARGIN, y: MARGIN, rx: 15, ry: 15, width: WIDTH, transform: 'scale(1 -1)' },\r\n            'tt_rect'\r\n        );\r\n        this.text = createSvgElement('text', {\r\n            x: MARGIN + PADDING,\r\n            y: MARGIN + PADDING + LINE_HEIGHT,\r\n            transform: 'scale(1 -1)'\r\n        });\r\n        this.transformY.appendChild(this.transformX);\r\n        this.transformX.appendChild(this.rect);\r\n        this.transformX.appendChild(this.text);\r\n        parentNode.appendChild(this.transformY);\r\n    }\r\n\r\n    resize() {\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n        this.transformY.setAttribute('transform', `translate(0 ${svgBox.height})`);\r\n    }\r\n\r\n    render(xRel, xAbs, data, percentage, factor) {\r\n        if (!data || xRel < 0 || xRel > 1) {\r\n            this.transformY.setAttribute('opacity', '0');\r\n            return;\r\n        }\r\n\r\n        this.transformY.setAttribute('opacity', '1');\r\n        this.rect.setAttribute('height', (data.length + 1) * LINE_HEIGHT + 2 * PADDING);\r\n\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n\r\n        clearChildren(this.text);\r\n\r\n        const xText = createSvgElement('tspan', {}, 'tt_bold');\r\n        xText.textContent = dateFormat(xAbs, true);\r\n        this.text.appendChild(xText);\r\n\r\n        data.forEach(({ y, color, name }) => {\r\n            const yName = createSvgElement('tspan', { x: MARGIN + PADDING, dy: LINE_HEIGHT });\r\n            yName.textContent = `${name}: `;\r\n            const yVal = createSvgElement(\r\n                'tspan',\r\n                { fill: color, 'text-anchor': 'end', x: MARGIN + WIDTH - PADDING },\r\n                'tt_bold'\r\n            );\r\n            yVal.textContent = percentage ? `${numberFormat(100 * y)} %` : numberFormat(y * factor);\r\n            this.text.appendChild(yName);\r\n            this.text.appendChild(yVal);\r\n        });\r\n\r\n        if (xRel < 0.5) {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width} 0)`);\r\n        } else {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width - 2 * MARGIN - WIDTH} 0)`);\r\n        }\r\n    }\r\n}\r\n","import { clearChildren, createSvgElement } from '../../helpers/elements';\r\nimport './grid.css';\r\nimport { absToRel, numberFormat, relToAbs } from '../../helpers/utils';\r\nimport { dateFormat, DAY } from '../../helpers/date-time';\r\n\r\nconst ROW_HEIGHT = 18 * 10;\r\nconst COL_WIDTH = 18 * 8;\r\n\r\nexport default class Grid {\r\n    constructor(parentNode) {\r\n        this.node = createSvgElement('g', {});\r\n        this.transform = createSvgElement('g', {}, 'grid_wrapper');\r\n\r\n        this.labels = createSvgElement('g', { transform: 'scale (1 -1)' });\r\n        parentNode.appendChild(this.node);\r\n        parentNode.appendChild(this.labels);\r\n        this.node.appendChild(this.transform);\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        const { width, height } = this.node.parentNode.getBoundingClientRect();\r\n        this.node.setAttribute('transform', `scale(${width} ${height})`);\r\n    }\r\n\r\n    render(x0, x1, y0, y1, factor, xData, colors, bars, percentage, convertPoint, show0, show1) {\r\n        const { height, width } = this.node.parentNode.getBoundingClientRect();\r\n\r\n        const countV = height / ROW_HEIGHT;\r\n        const countH = width / COL_WIDTH;\r\n\r\n        let i = 0;\r\n        while ((y1 - y0) / ySteps[i] < countV) i++;\r\n        const yStep = ySteps[i];\r\n\r\n        let j = 0;\r\n        const len = xData.length - (bars ? 0 : 1);\r\n        while (((x1 - x0) * len) / xSteps[j] < countH) j++;\r\n        const xStep = xSteps[j] / len;\r\n\r\n        this.transform.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n\r\n        clearChildren(this.transform);\r\n\r\n        i = Math.ceil(y0 / yStep);\r\n        let yCur = i * yStep;\r\n\r\n        clearChildren(this.labels);\r\n\r\n        while (yCur <= y1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                { x1: 0, x2: 1, y1: yCur, y2: yCur, 'vector-effect': 'non-scaling-stroke' },\r\n                'grid_line '\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            let label;\r\n\r\n            if (!convertPoint || show0) {\r\n                label = createSvgElement(\r\n                    'text',\r\n                    {\r\n                        fill: convertPoint ? colors.y0 : '',\r\n                        'alignment-baseline': 'middle',\r\n                        x: 0,\r\n                        y: -absToRel(yCur, y0, y1) * height\r\n                    },\r\n                    `grid_labels ${convertPoint ? '' : 'grid_labelsDefaultColor'}`\r\n                );\r\n                label.textContent = numberFormat((percentage ? 100 : 1) * yCur * factor);\r\n                this.labels.appendChild(label);\r\n            }\r\n\r\n            if (convertPoint && show1) {\r\n                label = createSvgElement(\r\n                    'text',\r\n                    {\r\n                        fill: colors.y1,\r\n                        'alignment-baseline': 'middle',\r\n                        'text-anchor': 'end',\r\n                        x: width,\r\n                        y: -absToRel(yCur, y0, y1) * height\r\n                    },\r\n                    `grid_labels`\r\n                );\r\n                label.textContent = numberFormat(\r\n                    (percentage ? 100 : 1) * (convertPoint ? convertPoint(yCur) : yCur) * factor\r\n                );\r\n                this.labels.appendChild(label);\r\n            }\r\n\r\n            yCur += yStep;\r\n        }\r\n\r\n        j = Math.ceil(x0 / xStep);\r\n        let xCur = j * xStep;\r\n\r\n        while (xCur <= x1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                {\r\n                    y1: y0,\r\n                    y2: y1,\r\n                    x1: absToRel(xCur, x0, x1),\r\n                    x2: absToRel(xCur, x0, x1),\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            const label = createSvgElement(\r\n                'text',\r\n                { 'text-anchor': bars ? 'start' : 'middle', y: -10, x: absToRel(xCur, x0, x1) * width },\r\n                `grid_labels grid_labelsDefaultColor`\r\n            );\r\n            label.textContent = dateFormat(relToAbs(xCur, xData[0], xData[xData.length - 1] + DAY), false);\r\n            this.labels.appendChild(label);\r\n\r\n            xCur += xStep;\r\n        }\r\n    }\r\n}\r\n\r\nconst xSteps = [365, 180, 120, 60, 30, 15, 7, 3, 2, 1];\r\n\r\nconst ySteps = [\r\n    100000000,\r\n    50000000,\r\n    20000000,\r\n    10000000,\r\n    5000000,\r\n    2000000,\r\n    1000000,\r\n    500000,\r\n    200000,\r\n    100000,\r\n    50000,\r\n    20000,\r\n    10000,\r\n    5000,\r\n    2000,\r\n    1000,\r\n    500,\r\n    200,\r\n    100,\r\n    50,\r\n    20,\r\n    10,\r\n    5,\r\n    2,\r\n    1,\r\n    0.5,\r\n    0.2,\r\n    0.1,\r\n    0.05,\r\n    0.02,\r\n    0.01\r\n];\r\n","import createCheckBox from '../check-box/check-box';\r\nimport Line from './line';\r\nimport Bars from './bars';\r\nimport { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './chart.css';\r\nimport {\r\n    absToRel,\r\n    arrSum,\r\n    boundBy,\r\n    calcYBounds,\r\n    findClosestIndex,\r\n    minmax,\r\n    prepareData,\r\n    relToAbs\r\n} from '../../helpers/utils';\r\nimport { addDragAndDropListeners, addListener, removeListener } from '../../helpers/event-listeners';\r\nimport createMap from '../map/map';\r\nimport Tooltip from '../tooltip/tooltip';\r\nimport Grid from '../grid/grid';\r\nimport { dateFormat } from '../../helpers/date-time';\r\n\r\nconst typeToConstructor = {\r\n    line: (...props) => new Line(false, ...props),\r\n    bar: (...props) => new Bars(...props),\r\n    area: (...props) => new Line(true, ...props)\r\n};\r\n\r\nconst MIN_WIN_WIDTH = 0.05;\r\n\r\nexport default (data, titleText) => {\r\n    const chartSvg = createSvgElement('svg', {}, 'ctr_chart');\r\n\r\n    const {\r\n        colors,\r\n        names,\r\n        types,\r\n        percentage,\r\n        stacked,\r\n        doubleY,\r\n        xColumn,\r\n        yColumns,\r\n        keys,\r\n        globalYBounds,\r\n        factor\r\n    } = prepareData(data);\r\n\r\n    let x0 = 0;\r\n    let x1 = 1;\r\n    let y0 = 0;\r\n    let y1 = 1;\r\n    let xMouse = null;\r\n    let mouseXFixed = false;\r\n    let yColumnFull = undefined;\r\n    const periodFormat = (x0, x1) =>\r\n        `${dateFormat(relToAbs(x0, xColumn[0], xColumn[xColumn.length - 1]))} - ${dateFormat(\r\n            relToAbs(x1, xColumn[0], xColumn[xColumn.length - 1])\r\n        )}`;\r\n\r\n    let keyToYBound = {};\r\n    const getYBounds = key =>\r\n        keyToYBound[key] || (keyToYBound[key] = calcYBounds(xColumn, yColumns[key], x0, x1, types[key]));\r\n    const resetYBoundsCash = () => (keyToYBound = {});\r\n\r\n    const chartViewportTransform = createSvgElement('g');\r\n    const chartAreaXTransform = createSvgElement('g');\r\n\r\n    const wrapper = createElement('crt_wrapper');\r\n    const controls = createElement('crt_controls');\r\n    const header = createElement('crt_header');\r\n    const title = createElement('crt_title');\r\n    const bounds = createElement('crt_bounds');\r\n    header.appendChild(title);\r\n    header.appendChild(bounds);\r\n    title.textContent = titleText;\r\n    bounds.textContent = periodFormat(x0, x1);\r\n\r\n    let tooltip, grid;\r\n\r\n    wrapper.appendChild(header);\r\n    wrapper.appendChild(chartSvg);\r\n    chartSvg.appendChild(chartViewportTransform);\r\n    chartViewportTransform.appendChild(chartAreaXTransform);\r\n    wrapper.appendChild(controls);\r\n\r\n    const noData = createElement('no-data');\r\n    noData.textContent = 'NO DATA';\r\n    wrapper.appendChild(noData);\r\n\r\n    const init = () => {\r\n        const visualisation = keys\r\n            .reverse()\r\n            .map(key => ({\r\n                [key]: typeToConstructor[types[key]](key, xColumn, yColumns[key], colors[key])\r\n            }))\r\n            .reduce((obj, line) => Object.assign(obj, line), {});\r\n\r\n        const {\r\n            mapNode,\r\n            setMapViewport,\r\n            appendBeforeOverlay,\r\n            setMapWindow,\r\n            windowLeftEdge,\r\n            windowRightEdge,\r\n            mapWindow\r\n        } = createMap();\r\n\r\n        const updateIntersections = xRel => {\r\n            const { width, height } = chartSvg.getBoundingClientRect();\r\n            if (xRel !== -1) xMouse = xRel;\r\n\r\n            const i = findClosestIndex(xColumn, xMouse, types.y0 === 'bar');\r\n\r\n            const convertPoint = y0 => relToAbs(absToRel(y0, ...globalYBounds.y0), ...globalYBounds.y1);\r\n\r\n            const tooltipData =\r\n                xMouse &&\r\n                keys\r\n                    .filter(key => visualisation[key].visible)\r\n                    .map(key => {\r\n                        const y = yColumns[key][i] / (yColumnFull ? yColumnFull[i] : 1);\r\n                        return {\r\n                            y: key === 'y1' && doubleY ? convertPoint(y) : y,\r\n                            color: colors[key],\r\n                            name: names[key]\r\n                        };\r\n                    });\r\n\r\n            tooltip.render(absToRel(xMouse, x0, x1), xColumn[i], tooltipData, percentage, factor);\r\n            grid.render(\r\n                x0,\r\n                x1,\r\n                y0,\r\n                y1,\r\n                factor,\r\n                xColumn,\r\n                colors,\r\n                types.y0 === 'bar',\r\n                percentage,\r\n                doubleY && convertPoint,\r\n                visualisation.y0 && visualisation.y0.visible,\r\n                visualisation.y1 && visualisation.y1.visible\r\n            );\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].onMouseMove(xMouse, x0, x1, y0, y1, width, height);\r\n            });\r\n        };\r\n\r\n        const updateYArea = () => {\r\n            let yColumnSum = undefined;\r\n            yColumnFull = undefined;\r\n\r\n            if (percentage) {\r\n                keys.filter(key => visualisation[key].visible).forEach(key => {\r\n                    yColumnFull = arrSum(yColumnFull, yColumns[key]);\r\n                });\r\n            }\r\n\r\n            keys.filter(key => visualisation[key].visible).forEach(key => {\r\n                visualisation[key].onChange(stacked ? yColumnSum : undefined, percentage ? yColumnFull : undefined);\r\n                if (stacked) yColumnSum = arrSum(yColumnSum, yColumns[key]);\r\n            });\r\n\r\n            if (!percentage) {\r\n                var [min, max] = stacked\r\n                    ? calcYBounds(xColumn, yColumnSum, x0, x1, 'bar')\r\n                    : minmax(keys.filter(key => visualisation[key].visible).map(key => getYBounds(key)));\r\n\r\n                // todo: need only one time\r\n                var [globalMin, globalMax] = stacked\r\n                    ? calcYBounds(xColumn, yColumnSum, 0, 1, 'bar')\r\n                    : doubleY\r\n                    ? globalYBounds.y0\r\n                    : minmax(keys.filter(key => visualisation[key].visible).map(key => globalYBounds[key]));\r\n\r\n                y0 = min;\r\n                y1 = max;\r\n            }\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].yChartArea = percentage ? [0, 100] : [min, max];\r\n                visualisation[key].yMapArea = percentage ? [0, 100] : [globalMin, globalMax];\r\n            });\r\n\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        const deepUpdateYArea = () => {\r\n            resetYBoundsCash();\r\n            updateYArea();\r\n        };\r\n\r\n        const setUserViewport = (w, h) => {\r\n            chartViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n        };\r\n\r\n        const setXChartArea = (x0, x1) => {\r\n            chartAreaXTransform.setAttribute(\r\n                'transform',\r\n                `\r\n                    scale(${1 / (x1 - x0)} 1) \r\n                    translate(${-x0} 0)\r\n                `\r\n            );\r\n            deepUpdateYArea();\r\n        };\r\n\r\n        const updateXBounds = (a, b) => {\r\n            x0 = a;\r\n            x1 = b;\r\n            bounds.textContent = periodFormat(x0, x1);\r\n            setXChartArea(x0, x1);\r\n            setMapWindow(x0, x1);\r\n        };\r\n\r\n        const mount = () => {\r\n            grid = new Grid(chartSvg);\r\n            tooltip = new Tooltip(chartSvg);\r\n\r\n            wrapper.insertBefore(mapNode, controls);\r\n\r\n            keys.forEach(key => {\r\n                chartAreaXTransform.appendChild(visualisation[key].node);\r\n            });\r\n\r\n            keys.forEach(key => {\r\n                appendBeforeOverlay(visualisation[key].mapNode);\r\n            });\r\n\r\n            const toggleCheckBoxes = {};\r\n\r\n            keys.reverse().forEach(key => {\r\n                visualisation[key].intersectionPoint &&\r\n                    chartSvg.insertBefore(visualisation[key].intersectionPoint, tooltip.transformY);\r\n\r\n                const { node: cb, toggle } = createCheckBox(\r\n                    colors[key],\r\n                    names[key],\r\n                    value => {\r\n                        visualisation[key].visible = value;\r\n                        updateYArea();\r\n                        if (keys.every(key => !visualisation[key].visible)) {\r\n                            noData.style.opacity = 1;\r\n                        } else {\r\n                            noData.style.opacity = 0;\r\n                        }\r\n                    },\r\n                    () => {\r\n                        keys.forEach(innerKey => toggleCheckBoxes[innerKey](innerKey === key));\r\n                    }\r\n                );\r\n                toggleCheckBoxes[key] = toggle;\r\n\r\n                controls.appendChild(cb);\r\n            });\r\n        };\r\n\r\n        const onResize = () => {\r\n            const { width: svgWidth, height: svgHeight } = chartSvg.getBoundingClientRect();\r\n            const { width: mapWidth, height: mapHeight } = mapNode.getBoundingClientRect();\r\n            setUserViewport(svgWidth, svgHeight);\r\n            setMapViewport(mapWidth, mapHeight);\r\n\r\n            grid.resize();\r\n            tooltip.resize();\r\n            setMapWindow(x0, x1);\r\n            updateIntersections(-1);\r\n\r\n            noData.style.top = svgHeight / 2 + 18 + 14 + 'px';\r\n        };\r\n\r\n        mount();\r\n        deepUpdateYArea();\r\n        onResize();\r\n        addListener(window, 'resize', onResize);\r\n\r\n        const getMapX = x => {\r\n            const rect = mapNode.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        const getChartX = x => {\r\n            const rect = chartSvg.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        addDragAndDropListeners(mapWindow, coords => {\r\n            const width = x1 - x0;\r\n            const left = getMapX(coords.x);\r\n            const right = left + width;\r\n            updateXBounds(boundBy(left, 0, 1 - width), boundBy(right, width, 1));\r\n        });\r\n        addDragAndDropListeners(windowLeftEdge, coords => {\r\n            const left = getMapX(coords.x + 20);\r\n            updateXBounds(boundBy(left, 0, x1 - MIN_WIN_WIDTH), x1);\r\n        });\r\n        addDragAndDropListeners(windowRightEdge, coords => {\r\n            const right = getMapX(coords.x);\r\n            updateXBounds(x0, boundBy(right, x0 + MIN_WIN_WIDTH, 1));\r\n        });\r\n\r\n        const onMouseMove = e => updateIntersections(x0 + (x1 - x0) * getChartX(e.clientX));\r\n        const onMouseLeave = () => {\r\n            if (!mouseXFixed) updateIntersections();\r\n        };\r\n        addListener(chartSvg, 'mousemove', onMouseMove);\r\n        addListener(chartSvg, 'mouseleave', onMouseLeave);\r\n        addListener(chartSvg, 'touchmove', e => updateIntersections(x0 + (x1 - x0) * getChartX(e.touches[0].clientX)));\r\n        addListener(chartSvg, 'mousedown', () => {\r\n            if (mouseXFixed) {\r\n                addListener(chartSvg, 'mousemove', onMouseMove);\r\n            } else {\r\n                removeListener(chartSvg, 'mousemove', onMouseMove);\r\n            }\r\n            mouseXFixed = !mouseXFixed;\r\n        });\r\n    };\r\n\r\n    return {\r\n        node: wrapper,\r\n        init\r\n    };\r\n};\r\n","import { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './map.css';\r\n\r\nexport default () => {\r\n    const mapSvg = createSvgElement('svg', {}, 'map-chart');\r\n    const map = createElement('map-container');\r\n    const svgWrapper = createElement('map-svg-wrapper');\r\n    const mapViewportTransform = createSvgElement('g');\r\n\r\n    svgWrapper.appendChild(mapSvg);\r\n    map.appendChild(svgWrapper);\r\n    mapSvg.appendChild(mapViewportTransform);\r\n\r\n    const mapOverlayLeft = createSvgElement('rect', { x: 0, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapOverlayRight = createSvgElement('rect', { x: 1, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapWindow = createElement('map-window', 'div');\r\n    const windowLeftEdge = createElement('map-left-edge', 'div');\r\n    const windowRightEdge = createElement('map-right-edge', 'div');\r\n\r\n    windowLeftEdge.textContent = windowRightEdge.textContent = '|||';\r\n    mapViewportTransform.append(mapOverlayLeft);\r\n    mapViewportTransform.append(mapOverlayRight);\r\n    map.append(mapWindow);\r\n    map.append(windowLeftEdge);\r\n    map.append(windowRightEdge);\r\n\r\n    const setMapViewport = (w, h) => {\r\n        mapViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n    };\r\n\r\n    const appendBeforeOverlay = node => {\r\n        mapViewportTransform.insertBefore(node, mapOverlayLeft);\r\n    };\r\n\r\n    const setMapWindow = (x0, x1) => {\r\n        mapOverlayLeft.setAttribute('width', x0);\r\n        mapOverlayRight.setAttribute('x', x1);\r\n        mapOverlayRight.setAttribute('width', 1 - x1);\r\n\r\n        const mapWidth = map.getBoundingClientRect().width;\r\n        mapWindow.style.left = `${x0 * mapWidth}px`;\r\n        mapWindow.style.width = `${(x1 - x0) * mapWidth}px`;\r\n        windowLeftEdge.style.left = `${x0 * mapWidth - 20}px`;\r\n        windowRightEdge.style.left = `${x1 * mapWidth - 1}px`;\r\n    };\r\n\r\n    return {\r\n        mapNode: map,\r\n        appendBeforeOverlay,\r\n        setMapViewport,\r\n        setMapWindow,\r\n        windowLeftEdge,\r\n        windowRightEdge,\r\n        mapWindow\r\n    };\r\n};\r\n","import './switch-button.css';\r\nimport { addListener } from '../../helpers/event-listeners';\r\n\r\nconst nightLabel = 'Switch to Day Mode';\r\nconst dayLabel = 'Switch to Night Mode';\r\n\r\nexport default () => {\r\n    const btn = document.createElement('div');\r\n    btn.id = 'btn-switch';\r\n\r\n    let night = false;\r\n    btn.textContent = dayLabel;\r\n\r\n    const switchToNight = () => {\r\n        btn.textContent = nightLabel;\r\n        document.body.classList.toggle('night');\r\n        night = true;\r\n    };\r\n\r\n    const switchToDay = () => {\r\n        btn.textContent = dayLabel;\r\n        document.body.classList.toggle('night');\r\n        night = false;\r\n    };\r\n\r\n    addListener(btn, 'click', () => {\r\n        if (night) {\r\n            switchToDay();\r\n        } else {\r\n            switchToNight();\r\n        }\r\n    });\r\n\r\n    return btn;\r\n};\r\n","import './global.css';\r\nimport createChart from './components/chart/chart';\r\nimport createFooter from './components/footer/footer';\r\nimport { createElement } from './helpers/elements';\r\n\r\nconst charts = createElement();\r\nconst root = document.getElementById('root');\r\nroot.appendChild(charts);\r\nroot.appendChild(createFooter());\r\n\r\nconst getData = dataNum =>\r\n    import(/* webpackChunkName: \"data\" */ `./data/${dataNum}/overview.json`).then(({ default: data }) => data);\r\n\r\nlet dataPromise = new Promise(e => e());\r\n[1, 2, 3, 4, 5].forEach(chartNum => {\r\n    dataPromise = dataPromise\r\n        .then(() => getData(chartNum))\r\n        .then(data => {\r\n            const { node, init } = createChart(data, 'Chart #' + chartNum);\r\n            charts.appendChild(node);\r\n            init();\r\n        });\r\n});\r\n\r\n/*\r\nif (!window.orientation) {\r\n    document.body.classList.toggle('desktop');\r\n}\r\n*/\r\n","import createSwitchButton from '../switch-button/switch-button';\r\nimport './footer.css';\r\n\r\nexport default () => {\r\n    const footer = document.createElement('div');\r\n    footer.id = 'footer';\r\n    footer.appendChild(createSwitchButton());\r\n    return footer;\r\n};\r\n"],"sourceRoot":""}