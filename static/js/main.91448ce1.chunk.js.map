{"version":3,"sources":["components/icons/check-icon.svg","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","helpers/elements.js","helpers/event-listeners.js","components/check-box/check-box.js","components/icons/checkbox-icon.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","helpers/utils.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","components/chart/line.js","components/chart/bars.js","helpers/date-time.js","components/tooltip/tooltip.js","components/grid/grid.js","components/chart/chart.js","components/map/map.js","components/switch-button/switch-button.js","index.js","components/footer/footer.js"],"names":["module","exports","__webpack_require__","p","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_setPrototypeOf","o","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","isNativeReflectConstruct","a","push","apply","instance","Function","bind","arguments","createElement","className","tag","length","undefined","node","document","createSvgElement","attrs","createElementNS","baseVal","keys","forEach","setAttribute","addListener","element","event","listener","addEventListener","removeListener","removeEventListener","addDragAndDropListeners","getTouchCoords","x","touches","clientX","y","clientY","offset","offsetX","offsetY","getMouseOffset","onMouseMove","buttons","body","onMouseUp","mouseCoords","getMouseCoords","cornerCoords","box","getBoundingClientRect","touchCoords","left","top","getTouchOffset","onTouchMove","onTouchEnd","check_box_check_box","color","text","onChange","checked","wrapper","mark","style","label","textContent","appendChild","img","icon","createCheckIcon","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_classCallCheck","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","minmax","min","max","_ref","y0","y1","Math","boundBy","right","relToAbs","rel","b","absToRel","abs","calcYBounds","xData","yData","x0Rel","x1Rel","type","j","x0","x1","k","el","findClosestIndex","xRel","getColumns","types","columns","xKey","filter","xColumn","column","yColumns","reduce","source","ownKeys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","_objectSpread","INTERSECTION_LINES_COLOR","generatePoints","area","xMin","dx","points","Line","yColumn","_this","this","_visible","_color","_xColumn","_yColumn","_chartLine","stroke-linejoin","vector-effect","stroke","fill","_mapLine","intersectionLineV","x2","_intersectionLineH","_intersectionPoint0","r","intersectionPoint1","intersectionPoint2","intersectionPoint3","intersectionPoint4","intersectionPoint","setIntersectionX","svgW","svgH","display","mapNode","val","_ref2","_ref4","_ref3","stroke-width","_selectedBar","xMouse","step","ceil","days","months","MARGIN","PADDING","WIDTH","LINE_HEIGHT","Tooltip","parentNode","transformY","transformX","rect","rx","ry","width","transform","svgBox","height","xAbs","data","childNodes","removeChild","xText","ms","date","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","year","getFullYear","tooltipDate","name","yName","dy","yVal","text-anchor","toFixed","Grid","resize","_this$node$parentNode","_this$node$parentNode2","countV","countH","sdf","yStep","xStep","yCur","line","y2","xCur","typeToConstructor","_len","_key","bar","_len2","_key2","Bars","_len3","_key3","chart_chart","title","tooltip","grid","chartSvg","colors","names","_getColumns","percentage","stacked","y_scaled","mouseXFixed","keyToYBound","keyToGlobalYBound","chartViewportTransform","chartAreaXTransform","controls","header","init","visualisation","map","assign","_createMap","mapSvg","svgWrapper","mapViewportTransform","mapOverlayLeft","mapOverlayRight","mapWindow","windowLeftEdge","windowRightEdge","append","appendBeforeOverlay","insertBefore","setMapViewport","w","h","setMapWindow","mapWidth","createMap","updateIntersections","_chartSvg$getBounding","tooltipData","visible","render","updateYArea","_minmax","getYBounds","_minmax2","getGlobalYBounds","globalMin","globalMax","yChartArea","yMapArea","deepUpdateYArea","updateXBounds","setXChartArea","onResize","_chartSvg$getBounding2","svgWidth","svgHeight","_mapNode$getBoundingC","mapHeight","createCheckBox","window","getMapX","getChartX","coords","switch_button_switch_button","btn","id","night","charts","root","getElementById","footer","createSwitchButton","createFooter","data1","chartData","_createChart","createChart","data2","_createChart2","data3","_createChart3","data4","_createChart4","data5","_createChart5"],"mappings":"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","file":"static/js/main.91448ce1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-icon.cc4bfc9f.svg\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export const createElement = (className, tag = 'div') => {\r\n    const node = document.createElement(tag);\r\n    if (className) node.className = className;\r\n    return node;\r\n};\r\n\r\nexport const createSvgElement = (tag, attrs, className) => {\r\n    const node = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    if (className) {\r\n        node.className.baseVal = className;\r\n    }\r\n    if (attrs) {\r\n        Object.keys(attrs).forEach(key => {\r\n            node.setAttribute(key, attrs[key]);\r\n        });\r\n    }\r\n    return node;\r\n};\r\n","export const addListener = (element, event, listener) => {\r\n    element.addEventListener(event, listener, false);\r\n};\r\n\r\nexport const removeListener = (element, event, listener) => {\r\n    element.removeEventListener(event, listener);\r\n};\r\n\r\nexport const addDragAndDropListeners = (element, listener) => {\r\n    const getMouseCoords = e => ({ x: e.clientX, y: e.clientY });\r\n    const getTouchCoords = e => ({ x: e.touches[0].clientX, y: e.touches[0].clientY });\r\n    const getMouseOffset = e => ({ x: e.offsetX, y: e.offsetY });\r\n    const getTouchOffset = e => {\r\n        const box = element.getBoundingClientRect();\r\n        const touchCoords = getTouchCoords(e);\r\n        return {\r\n            x: touchCoords.x - box.left,\r\n            y: touchCoords.y - box.top\r\n        };\r\n    };\r\n\r\n    addListener(element, 'mousedown', e => {\r\n        const offset = getMouseOffset(e);\r\n\r\n        const onMouseMove = e => {\r\n            if (e.buttons !== 1) {\r\n                removeListener(document.body, 'mousemove', onMouseMove);\r\n                removeListener(document.body, 'mouseup', onMouseUp);\r\n            } else {\r\n                const mouseCoords = getMouseCoords(e);\r\n                const cornerCoords = { x: mouseCoords.x - offset.x, y: mouseCoords.y + offset.y };\r\n                listener(cornerCoords);\r\n            }\r\n        };\r\n\r\n        function onMouseUp() {\r\n            removeListener(document.body, 'mousemove', onMouseMove);\r\n            removeListener(document.body, 'mouseup', onMouseUp);\r\n        }\r\n\r\n        addListener(document.body, 'mousemove', onMouseMove);\r\n        addListener(document.body, 'mouseup', onMouseUp);\r\n    });\r\n\r\n    addListener(element, 'touchstart', e => {\r\n        const offset = getTouchOffset(e);\r\n\r\n        const onTouchMove = e => {\r\n            const touchCoords = getTouchCoords(e);\r\n            const cornerCoords = { x: touchCoords.x - offset.x, y: touchCoords.y + offset.y };\r\n            listener(cornerCoords);\r\n        };\r\n\r\n        function onTouchEnd() {\r\n            removeListener(document.body, 'touchmove', onTouchMove);\r\n            removeListener(document.body, 'touchend', onTouchEnd);\r\n            removeListener(document.body, 'touchcancel', onTouchEnd);\r\n        }\r\n\r\n        addListener(document.body, 'touchmove', onTouchMove);\r\n        addListener(document.body, 'touchend', onTouchEnd);\r\n        addListener(document.body, 'touchcancel', onTouchEnd);\r\n    });\r\n};\r\n","import './check-box.css';\r\nimport { createElement } from '../../helpers/elements';\r\nimport { addListener } from '../../helpers/event-listeners';\r\nimport createCheckIcon from '../icons/checkbox-icon';\r\n\r\nconst uncheckedMark = 'cb_unchecked-mark';\r\nconst checkedMark = 'cb_checked-mark';\r\n\r\nexport default (color, text, onChange) => {\r\n    let checked = true;\r\n\r\n    const wrapper = createElement('cb_wrapper');\r\n\r\n    const mark = createElement(checkedMark);\r\n    mark.style.color = color;\r\n\r\n    const label = createElement('cb_label');\r\n    label.textContent = text;\r\n\r\n    wrapper.appendChild(mark);\r\n    wrapper.appendChild(label);\r\n\r\n    mark.appendChild(createCheckIcon());\r\n\r\n    addListener(wrapper, 'click', () => {\r\n        checked = !checked;\r\n        onChange && onChange(checked);\r\n        mark.className = checked ? checkedMark : uncheckedMark;\r\n    });\r\n\r\n    return wrapper;\r\n};\r\n","import icon from './check-icon.svg';\r\nimport { createElement } from '../../helpers/elements';\r\n\r\nexport default () => {\r\n    const img = createElement('icon', 'img');\r\n    img.setAttribute('src', icon);\r\n    return img;\r\n};\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export const minmax = arr => {\r\n    let min = null,\r\n        max = null;\r\n\r\n    arr.forEach(({ y0, y1 }) => {\r\n        min = min === null ? y0 : Math.min(min, y0);\r\n        max = max === null ? y1 : Math.max(max, y1);\r\n    });\r\n\r\n    return { min, max };\r\n};\r\n\r\nexport const boundBy = (x, left, right) => {\r\n    x = left === undefined ? x : Math.max(left, x);\r\n    x = right === undefined ? x : Math.min(right, x);\r\n    return x;\r\n};\r\n\r\nexport const relToAbs = (rel, a, b) => a + rel * (b - a);\r\n\r\nexport const absToRel = (abs, a, b) => (abs - a) / (b - a);\r\n\r\nexport const calcYBounds = (xData, yData, x0Rel, x1Rel, type) => {\r\n    let i = 1;\r\n    let j = xData.length - 1;\r\n\r\n    const x0 = relToAbs(x0Rel, xData[1], xData[j]);\r\n    const x1 = relToAbs(x1Rel, xData[1], xData[j]);\r\n\r\n    while (xData[i] < x0) i++;\r\n    while (xData[j] > x1) j--;\r\n\r\n    let min = yData[i],\r\n        max = yData[i];\r\n\r\n    for (let k = i + 1; k <= j; k++) {\r\n        const el = yData[k];\r\n        min = Math.min(min, el);\r\n        max = Math.max(max, el);\r\n    }\r\n\r\n    return { y0: type === 'line' ? min : 0, y1: max };\r\n};\r\n\r\nexport const findClosestIndex = (xData, xRel) => {\r\n    if (!xRel) return null;\r\n    let x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    i = (xData[i - 1] + xData[i]) / 2 < x ? i : i - 1;\r\n\r\n    return i;\r\n};\r\n\r\nexport const interpolate = (xData, yData, xRel) => {\r\n    if (!xRel) return null;\r\n    const x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    const y = yData[i - 1] + ((x - xData[i - 1]) * (yData[i] - yData[i - 1])) / (xData[i] - xData[i - 1]);\r\n    return y;\r\n};\r\n\r\nexport const getColumns = (types, columns) => {\r\n    const xKey = Object.keys(types).filter(key => types[key] === 'x')[0];\r\n    const xColumn = columns.filter(column => column[0] === xKey)[0];\r\n\r\n    const keys = Object.keys(types).filter(key => types[key] !== 'x');\r\n    const yColumns = keys.reduce((obj, key) => ({ ...obj, [key]: columns.filter(column => column[0] === key)[0] }), {});\r\n\r\n    return { xColumn, yColumns, keys };\r\n};\r\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import { createSvgElement } from '../../helpers/elements';\r\nimport { absToRel, findClosestIndex } from '../../helpers/utils';\r\n\r\nconst INTERSECTION_LINES_COLOR = 'gray';\r\n\r\nconst generatePoints = (area, x, y) => {\r\n    const length = x.length;\r\n\r\n    let xMin = x[1],\r\n        dx = x[length - 1] - xMin;\r\n    let points = `0,${y[1]} `;\r\n\r\n    for (let i = 2; i < length; i++) {\r\n        points += `${(x[i] - xMin) / dx},${y[i]} `;\r\n    }\r\n\r\n    return area ? `0,0 ${points} 1,0` : points;\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._intersectionPoint0.setAttribute('opacity', +val);\r\n        this._chartLine.setAttribute('opacity', +val);\r\n        this._mapLine.setAttribute('opacity', +val);\r\n        this._intersectionLineH.setAttribute('stroke', val ? INTERSECTION_LINES_COLOR : 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(area, keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        const points = generatePoints(area, xColumn, yColumn);\r\n        this._chartLine = createSvgElement(\r\n            area ? 'polygon' : 'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'chart-line'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'map-line'\r\n        );\r\n\r\n        const intersectionLineV = createSvgElement(\r\n            'line',\r\n            { x1: 0, x2: 0, y0: 0, y1: 1, 'vector-effect': 'non-scaling-stroke', stroke: INTERSECTION_LINES_COLOR },\r\n            'intersection-line'\r\n        );\r\n\r\n        this._intersectionLineH = createSvgElement(\r\n            'line',\r\n            { x1: -1, x2: 1, y0: 0, y1: 0, 'vector-effect': 'non-scaling-stroke', stroke: INTERSECTION_LINES_COLOR },\r\n            'intersection-line'\r\n        );\r\n\r\n        this._intersectionPoint0 = createSvgElement(\r\n            'circle',\r\n            { r: 5, stroke: color, fill: 'white' },\r\n            'intersection-point'\r\n        );\r\n        const intersectionPoint1 = createSvgElement('g', {}, '');\r\n        const intersectionPoint2 = createSvgElement('g', {}, 'animated');\r\n        const intersectionPoint3 = createSvgElement('g', {}, '');\r\n        const intersectionPoint4 = createSvgElement('g', {}, 'animated');\r\n        this.intersectionPoint = createSvgElement('g', {}, '');\r\n        intersectionPoint1.appendChild(this._intersectionPoint0);\r\n        intersectionPoint2.appendChild(intersectionPoint1);\r\n        intersectionPoint3.appendChild(this._intersectionLineH);\r\n        intersectionPoint3.appendChild(intersectionPoint2);\r\n        intersectionPoint4.appendChild(intersectionPoint3);\r\n        this.intersectionPoint.appendChild(intersectionLineV);\r\n        this.intersectionPoint.appendChild(intersectionPoint4);\r\n\r\n        this.setIntersectionX = (xRel, x0, x1, y0, y1, svgW, svgH) => {\r\n            let x = absToRel(xRel, x0, x1);\r\n            if (x < 0 || x > 1) {\r\n                this.intersectionPoint.style.display = 'none';\r\n                return;\r\n            }\r\n            this.intersectionPoint.style.display = 'initial';\r\n\r\n            const i = findClosestIndex(this._xColumn, xRel);\r\n            const y = this._yColumn[i];\r\n            x = absToRel(this._xColumn[i], this._xColumn[1], this._xColumn[this._xColumn.length - 1]);\r\n\r\n            intersectionPoint1.setAttribute('transform', `scale(${1 / svgW} ${1 / svgH})`);\r\n            intersectionPoint2.setAttribute('transform', `scale(1 ${y1 - y0})`);\r\n            intersectionPoint3.setAttribute('transform', `translate(0 ${y})`);\r\n            intersectionPoint4.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n            this.intersectionPoint.setAttribute(\r\n                'transform',\r\n                `scale(${svgW} ${svgH}) translate(${absToRel(x, x0, x1)} 0) `\r\n            );\r\n        };\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\n\r\nconst generatePoints = (x, y) => {\r\n    // unused x\r\n    const length = x.length - 1;\r\n    let points = `0,0 0,${y[1]} `;\r\n\r\n    for (let i = 2; i <= length; i++) {\r\n        points += `${(i - 1) / length},${y[i - 1]} ${(i - 1) / length},${y[i]} `;\r\n    }\r\n    points += `1,${y[length]} 1,0`;\r\n\r\n    return points;\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._chartLine.setAttribute('stroke', val ? this._color : 'transparent');\r\n        this._chartLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('stroke', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('fill', val ? this._color : 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        const points = generatePoints(xColumn, yColumn);\r\n        this._chartLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', points, 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._selectedBar = createSvgElement(\r\n            'rect',\r\n            { 'vector-effect': 'non-scaling-stroke', points: '', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', points, 'stroke-width': 0, fill: color },\r\n            'map-bar'\r\n        );\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n        this.node.appendChild(this._selectedBar);\r\n    }\r\n\r\n    render(xMouse) {\r\n        if (!xMouse) {\r\n            this._chartLine.setAttribute('opacity', 1);\r\n            return;\r\n        }\r\n\r\n        const step = 1 / (this._xColumn.length - 1);\r\n        const i = Math.ceil(xMouse / step);\r\n        this._selectedBar.setAttribute('x', (i - 1) * step);\r\n        this._selectedBar.setAttribute('y', 0);\r\n        this._selectedBar.setAttribute('width', step);\r\n        this._selectedBar.setAttribute('height', this._yColumn[i]);\r\n\r\n        this._chartLine.setAttribute('opacity', 0.3);\r\n    }\r\n}\r\n","export const tooltipDate = ms => {\r\n    const date = new Date(ms);\r\n    const dayOfWeek = days[date.getDay()];\r\n    const dayOfMonth = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    return `${dayOfWeek}, ${dayOfMonth} ${month} ${year}`;\r\n};\r\n\r\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jule', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './tooltip.css';\r\nimport { tooltipDate } from '../../helpers/date-time';\r\n\r\nconst MARGIN = 20;\r\nconst PADDING = 10;\r\nconst WIDTH = 180;\r\nconst LINE_HEIGHT = 18;\r\n\r\nexport default class Tooltip {\r\n    constructor(parentNode) {\r\n        this.transformY = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.transformX = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.rect = createSvgElement(\r\n            'rect',\r\n            { x: MARGIN, y: MARGIN, rx: 15, ry: 15, width: WIDTH, transform: 'scale(1 -1)' },\r\n            'tt_rect'\r\n        );\r\n        this.text = createSvgElement('text', {\r\n            x: MARGIN + PADDING,\r\n            y: MARGIN + PADDING + LINE_HEIGHT,\r\n            transform: 'scale(1 -1)'\r\n        });\r\n        this.transformY.appendChild(this.transformX);\r\n        this.transformX.appendChild(this.rect);\r\n        this.transformX.appendChild(this.text);\r\n        parentNode.appendChild(this.transformY);\r\n    }\r\n\r\n    resize() {\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n        this.transformY.setAttribute('transform', `translate(0 ${svgBox.height})`);\r\n    }\r\n\r\n    render(xRel, xAbs, data) {\r\n        if (!data || xRel < 0 || xRel > 1) {\r\n            this.transformY.setAttribute('opacity', '0');\r\n            return;\r\n        }\r\n\r\n        this.transformY.setAttribute('opacity', '1');\r\n        this.rect.setAttribute('height', (data.length + 1) * LINE_HEIGHT + 2 * PADDING);\r\n\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n\r\n        while (this.text.childNodes.length) {\r\n            this.text.removeChild(this.text.childNodes[0]);\r\n        }\r\n\r\n        const xText = createSvgElement('tspan', {}, 'tt_bold');\r\n        xText.textContent = tooltipDate(xAbs);\r\n        this.text.appendChild(xText);\r\n\r\n        data.forEach(({ y, color, name }) => {\r\n            const yName = createSvgElement('tspan', { x: MARGIN + PADDING, dy: LINE_HEIGHT });\r\n            yName.textContent = `${name}: `;\r\n            const yVal = createSvgElement(\r\n                'tspan',\r\n                { fill: color, 'text-anchor': 'end', x: MARGIN + WIDTH - PADDING },\r\n                'tt_bold'\r\n            );\r\n            yVal.textContent = (+y).toFixed(2);\r\n            this.text.appendChild(yName);\r\n            this.text.appendChild(yVal);\r\n        });\r\n\r\n        if (xRel < 0.5) {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width} 0)`);\r\n        } else {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width - 2 * MARGIN - WIDTH} 0)`);\r\n        }\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './grid.css';\r\nimport { absToRel } from '../../helpers/utils';\r\n\r\nconst ROW_HEIGHT = 18 * 10;\r\nconst COL_WIDTH = 18 * 10;\r\n\r\nexport default class Grid {\r\n    constructor(parentNode) {\r\n        this.node = createSvgElement('g', {});\r\n        this.transform = createSvgElement('g', {}, 'grid_wrapper');\r\n\r\n        parentNode.appendChild(this.node);\r\n        this.node.appendChild(this.transform);\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        const { width, height } = this.node.parentNode.getBoundingClientRect();\r\n        this.node.setAttribute('transform', `scale(${width} ${height})`);\r\n    }\r\n\r\n    render(x0, x1, y0, y1) {\r\n        const { height, width } = this.node.parentNode.getBoundingClientRect();\r\n\r\n        const countV = height / ROW_HEIGHT;\r\n        const countH = width / COL_WIDTH;\r\n\r\n        let i = 0;\r\n        while ((y1 - y0) / sdf[i] < countV) i++;\r\n        const yStep = sdf[i];\r\n        let j = 0;\r\n        while ((x1 - x0) / sdf[j] < countH) j++;\r\n        const xStep = sdf[j];\r\n\r\n        this.transform.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n\r\n        while (this.transform.childNodes.length) {\r\n            this.transform.removeChild(this.transform.childNodes[0]);\r\n        }\r\n\r\n        i = Math.ceil(y0 / yStep);\r\n        let yCur = i * yStep;\r\n\r\n        while (yCur <= y1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                { x1: 0, x2: 1, y1: yCur, y2: yCur, 'vector-effect': 'non-scaling-stroke' },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            yCur += yStep;\r\n        }\r\n\r\n        j = Math.ceil(x0 / xStep);\r\n        let xCur = j * xStep;\r\n\r\n        while (xCur <= x1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                {\r\n                    y1: y0,\r\n                    y2: y1,\r\n                    x1: absToRel(xCur, x0, x1),\r\n                    x2: absToRel(xCur, x0, x1),\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            xCur += xStep;\r\n        }\r\n    }\r\n}\r\n\r\nconst sdf = [\r\n    100000000,\r\n    50000000,\r\n    20000000,\r\n    10000000,\r\n    5000000,\r\n    2000000,\r\n    1000000,\r\n    500000,\r\n    200000,\r\n    100000,\r\n    50000,\r\n    20000,\r\n    10000,\r\n    5000,\r\n    2000,\r\n    1000,\r\n    500,\r\n    200,\r\n    100,\r\n    50,\r\n    20,\r\n    10,\r\n    5,\r\n    2,\r\n    1,\r\n    0.5,\r\n    0.2,\r\n    0.1,\r\n    0.05,\r\n    0.02,\r\n    0.01\r\n];\r\n","import createCheckBox from '../check-box/check-box';\r\nimport Line from './line';\r\nimport Bars from './bars';\r\nimport { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './chart.css';\r\nimport { absToRel, boundBy, calcYBounds, findClosestIndex, getColumns, minmax } from '../../helpers/utils';\r\nimport { addDragAndDropListeners, addListener, removeListener } from '../../helpers/event-listeners';\r\nimport createMap from '../map/map';\r\nimport Tooltip from '../tooltip/tooltip';\r\nimport Grid from '../grid/grid';\r\n\r\nconst typeToConstructor = {\r\n    line: (...props) => new Line(false, ...props),\r\n    bar: (...props) => new Bars(...props),\r\n    area: (...props) => new Line(true, ...props)\r\n};\r\n\r\nconst MIN_WIN_WIDTH = 0.05;\r\n\r\nexport default (data, title) => {\r\n    const chartSvg = createSvgElement('svg', {}, 'ctr_chart');\r\n\r\n    const { colors, names, types, columns, percentage, stacked, y_scaled: doubleY } = data;\r\n\r\n    const { xColumn, yColumns, keys } = getColumns(types, columns);\r\n\r\n    let x0 = 0;\r\n    let x1 = 1;\r\n    let y0 = 0;\r\n    let y1 = 1;\r\n    let xMouse = null;\r\n    let mouseXFixed = false;\r\n\r\n    let keyToYBound = {};\r\n    let keyToGlobalYBound = {};\r\n    const getYBounds = key =>\r\n        keyToYBound[key] || (keyToYBound[key] = calcYBounds(xColumn, yColumns[key], x0, x1, types[key]));\r\n    const getGlobalYBounds = key =>\r\n        keyToGlobalYBound[key] || (keyToGlobalYBound[key] = calcYBounds(xColumn, yColumns[key], 0, 1, types[key]));\r\n    const resetYBoundsCash = () => (keyToYBound = {});\r\n\r\n    const chartViewportTransform = createSvgElement('g');\r\n    const chartAreaXTransform = createSvgElement('g');\r\n\r\n    const wrapper = createElement('crt_wrapper');\r\n    const controls = createElement('crt_controls');\r\n    const header = createElement();\r\n    header.textContent = title;\r\n\r\n    let tooltip, grid;\r\n\r\n    wrapper.appendChild(header);\r\n    wrapper.appendChild(chartSvg);\r\n    chartSvg.appendChild(chartViewportTransform);\r\n    chartViewportTransform.appendChild(chartAreaXTransform);\r\n    wrapper.appendChild(controls);\r\n\r\n    const init = () => {\r\n        const visualisation = keys\r\n            .map(key => ({ [key]: typeToConstructor[types[key]](key, xColumn, yColumns[key], colors[key]) }))\r\n            .reduce((obj, line) => Object.assign(obj, line), {});\r\n\r\n        const {\r\n            mapNode,\r\n            setMapViewport,\r\n            appendBeforeOverlay,\r\n            setMapWindow,\r\n            windowLeftEdge,\r\n            windowRightEdge,\r\n            mapWindow\r\n        } = createMap();\r\n\r\n        const updateIntersections = xRel => {\r\n            const { width, height } = chartSvg.getBoundingClientRect();\r\n            if (xRel !== -1) xMouse = xRel;\r\n\r\n            const i = findClosestIndex(xColumn, xMouse);\r\n\r\n            const tooltipData =\r\n                xMouse &&\r\n                keys\r\n                    .filter(key => visualisation[key].visible)\r\n                    .map(key => ({\r\n                        y: yColumns[key][i],\r\n                        color: colors[key],\r\n                        name: names[key]\r\n                    }));\r\n            tooltip.render(absToRel(xMouse, x0, x1), xColumn[i], tooltipData);\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].setIntersectionX &&\r\n                    visualisation[key].setIntersectionX(xMouse, x0, x1, y0, y1, width, height);\r\n                visualisation[key].render && visualisation[key].render(xMouse);\r\n            });\r\n        };\r\n\r\n        const updateYArea = () => {\r\n            const { min, max } = minmax(keys.filter(key => visualisation[key].visible).map(key => getYBounds(key)));\r\n            const { min: globalMin, max: globalMax } = minmax(\r\n                keys.filter(key => visualisation[key].visible).map(key => getGlobalYBounds(key))\r\n            );\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].yChartArea = [min, max];\r\n                visualisation[key].yMapArea = [globalMin, globalMax];\r\n            });\r\n\r\n            y0 = min;\r\n            y1 = max;\r\n            grid.render(x0, x1, y0, y1);\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        const deepUpdateYArea = () => {\r\n            resetYBoundsCash();\r\n            updateYArea();\r\n        };\r\n\r\n        const setUserViewport = (w, h) => {\r\n            chartViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n        };\r\n\r\n        const setXChartArea = (x0, x1) => {\r\n            chartAreaXTransform.setAttribute(\r\n                'transform',\r\n                `\r\n                    scale(${1 / (x1 - x0)} 1) \r\n                    translate(${-x0} 0)\r\n                `\r\n            );\r\n            deepUpdateYArea();\r\n        };\r\n\r\n        const updateXBounds = (a, b) => {\r\n            x0 = a;\r\n            x1 = b;\r\n            setXChartArea(x0, x1);\r\n            setMapWindow(x0, x1);\r\n        };\r\n\r\n        const mount = () => {\r\n            grid = new Grid(chartSvg);\r\n            tooltip = new Tooltip(chartSvg);\r\n\r\n            wrapper.insertBefore(mapNode, controls);\r\n\r\n            keys.forEach(key => {\r\n                chartAreaXTransform.appendChild(visualisation[key].node);\r\n\r\n                visualisation[key].intersectionPoint &&\r\n                    chartSvg.insertBefore(visualisation[key].intersectionPoint, tooltip.transformY);\r\n\r\n                appendBeforeOverlay(visualisation[key].mapNode);\r\n                controls.appendChild(\r\n                    createCheckBox(colors[key], names[key], value => {\r\n                        visualisation[key].visible = value;\r\n                        updateYArea();\r\n                    })\r\n                );\r\n            });\r\n        };\r\n\r\n        const onResize = () => {\r\n            const { width: svgWidth, height: svgHeight } = chartSvg.getBoundingClientRect();\r\n            const { width: mapWidth, height: mapHeight } = mapNode.getBoundingClientRect();\r\n            setUserViewport(svgWidth, svgHeight);\r\n            setMapViewport(mapWidth, mapHeight);\r\n\r\n            grid.resize();\r\n            tooltip.resize();\r\n            setMapWindow(x0, x1);\r\n            updateIntersections();\r\n        };\r\n\r\n        mount();\r\n        deepUpdateYArea();\r\n        onResize();\r\n        addListener(window, 'resize', onResize);\r\n\r\n        const getMapX = x => {\r\n            const rect = mapNode.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        const getChartX = x => {\r\n            const rect = chartSvg.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        addDragAndDropListeners(mapWindow, coords => {\r\n            const width = x1 - x0;\r\n            const left = getMapX(coords.x);\r\n            const right = left + width;\r\n            updateXBounds(boundBy(left, 0, 1 - width), boundBy(right, width, 1));\r\n        });\r\n        addDragAndDropListeners(windowLeftEdge, coords => {\r\n            const left = getMapX(coords.x + 10);\r\n            updateXBounds(boundBy(left, 0, x1 - MIN_WIN_WIDTH), x1);\r\n        });\r\n        addDragAndDropListeners(windowRightEdge, coords => {\r\n            const right = getMapX(coords.x);\r\n            updateXBounds(x0, boundBy(right, x0 + MIN_WIN_WIDTH, 1));\r\n        });\r\n\r\n        const onMouseMove = e => updateIntersections(x0 + (x1 - x0) * getChartX(e.clientX));\r\n        const onMouseLeave = e => {\r\n            if (!mouseXFixed) updateIntersections();\r\n        };\r\n        addListener(chartSvg, 'mousemove', onMouseMove);\r\n        addListener(chartSvg, 'mouseleave', onMouseLeave);\r\n        addListener(chartSvg, 'touchmove', e => updateIntersections(x0 + (x1 - x0) * getChartX(e.touches[0].clientX)));\r\n        addListener(chartSvg, 'mousedown', () => {\r\n            if (mouseXFixed) {\r\n                addListener(chartSvg, 'mousemove', onMouseMove);\r\n            } else {\r\n                removeListener(chartSvg, 'mousemove', onMouseMove);\r\n            }\r\n            mouseXFixed = !mouseXFixed;\r\n        });\r\n    };\r\n\r\n    return {\r\n        node: wrapper,\r\n        init\r\n    };\r\n};\r\n","import { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './map.css';\r\n\r\nexport default () => {\r\n    const mapSvg = createSvgElement('svg', {}, 'map-chart');\r\n    const map = createElement('map-container');\r\n    const svgWrapper = createElement('map-svg-wrapper');\r\n    const mapViewportTransform = createSvgElement('g');\r\n\r\n    svgWrapper.appendChild(mapSvg);\r\n    map.appendChild(svgWrapper);\r\n    mapSvg.appendChild(mapViewportTransform);\r\n\r\n    const mapOverlayLeft = createSvgElement('rect', { x: 0, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapOverlayRight = createSvgElement('rect', { x: 1, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapWindow = createElement('map-window', 'div');\r\n    const windowLeftEdge = createElement('map-left-edge', 'div');\r\n    const windowRightEdge = createElement('map-right-edge', 'div');\r\n\r\n    mapViewportTransform.append(mapOverlayLeft);\r\n    mapViewportTransform.append(mapOverlayRight);\r\n    map.append(mapWindow);\r\n    map.append(windowLeftEdge);\r\n    map.append(windowRightEdge);\r\n\r\n    const setMapViewport = (w, h) => {\r\n        mapViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n    };\r\n\r\n    const appendBeforeOverlay = node => {\r\n        mapViewportTransform.insertBefore(node, mapOverlayLeft);\r\n    };\r\n\r\n    const setMapWindow = (x0, x1) => {\r\n        mapOverlayLeft.setAttribute('width', x0);\r\n        mapOverlayRight.setAttribute('x', x1);\r\n        mapOverlayRight.setAttribute('width', 1 - x1);\r\n\r\n        const mapWidth = map.getBoundingClientRect().width;\r\n        mapWindow.style.left = `${x0 * mapWidth}px`;\r\n        mapWindow.style.width = `${(x1 - x0) * mapWidth}px`;\r\n        windowLeftEdge.style.left = `${x0 * mapWidth - 10}px`;\r\n        windowRightEdge.style.left = `${x1 * mapWidth - 1}px`;\r\n    };\r\n\r\n    return {\r\n        mapNode: map,\r\n        appendBeforeOverlay,\r\n        setMapViewport,\r\n        setMapWindow,\r\n        windowLeftEdge,\r\n        windowRightEdge,\r\n        mapWindow\r\n    };\r\n};\r\n","import './switch-button.css';\r\nimport { addListener } from '../../helpers/event-listeners';\r\n\r\nconst nightLabel = 'Switch to Day Mode';\r\nconst dayLabel = 'Switch to Night Mode';\r\n\r\nexport default () => {\r\n    const btn = document.createElement('div');\r\n    btn.id = 'btn-switch';\r\n\r\n    let night = false;\r\n    btn.textContent = dayLabel;\r\n\r\n    const switchToNight = () => {\r\n        btn.textContent = nightLabel;\r\n        document.body.className = 'night';\r\n        night = true;\r\n    };\r\n\r\n    const switchToDay = () => {\r\n        btn.textContent = dayLabel;\r\n        document.body.className = '';\r\n        night = false;\r\n    };\r\n\r\n    addListener(btn, 'click', () => {\r\n        if (night) {\r\n            switchToDay();\r\n        } else {\r\n            switchToNight();\r\n        }\r\n    });\r\n\r\n    return btn;\r\n};\r\n","import './global.css';\r\nimport createChart from './components/chart/chart';\r\nimport createFooter from './components/footer/footer';\r\nimport data1 from './data/1/overview';\r\nimport data2 from './data/2/overview';\r\nimport data3 from './data/3/overview';\r\nimport data4 from './data/4/overview';\r\nimport data5 from './data/5/overview';\r\nimport { createElement } from './helpers/elements';\r\n\r\nconst charts = createElement();\r\nconst root = document.getElementById('root');\r\nroot.appendChild(charts);\r\nroot.appendChild(createFooter());\r\n\r\n[data1].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #1');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data2].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #2');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data3].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #3');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data4].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #4');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data5].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #5');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n","import createSwitchButton from '../switch-button/switch-button';\r\nimport './footer.css';\r\n\r\nexport default () => {\r\n    const footer = document.createElement('div');\r\n    footer.id = 'footer';\r\n    footer.appendChild(createSwitchButton());\r\n    return footer;\r\n};\r\n"],"sourceRoot":""}