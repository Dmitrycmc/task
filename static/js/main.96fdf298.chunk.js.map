{"version":3,"sources":["components/icons/check-icon.svg","data lazy /^/.*/overview/.json$/ groupOptions: {} namespace object","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","helpers/elements.js","helpers/event-listeners.js","components/check-box/check-box.js","components/icons/checkbox-icon.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","helpers/utils.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","components/chart/line.js","components/chart/bars.js","helpers/date-time.js","components/tooltip/tooltip.js","components/grid/grid.js","components/chart/chart.js","components/map/map.js","components/switch-button/switch-button.js","index.js","components/footer/footer.js"],"names":["module","exports","__webpack_require__","p","map","./1/overview.json","./2/overview.json","./3/overview.json","./4/overview.json","./5/overview.json","webpackAsyncContext","req","ids","e","then","id","t","Promise","resolve","Error","code","keys","Object","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_setPrototypeOf","o","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","isNativeReflectConstruct","a","apply","instance","Function","bind","arguments","createElement","className","tag","node","document","createSvgElement","attrs","createElementNS","baseVal","forEach","setAttribute","clearChildren","el","childNodes","removeChild","addListener","element","event","listener","addEventListener","removeListener","removeEventListener","addDragAndDropListeners","getTouchCoords","x","touches","clientX","y","clientY","offset","offsetX","offsetY","getMouseOffset","onMouseMove","buttons","body","onMouseUp","mouseCoords","getMouseCoords","cornerCoords","box","getBoundingClientRect","touchCoords","left","top","getTouchOffset","onTouchMove","onTouchEnd","check_box_check_box","color","text","onChange","checked","wrapper","style","backgroundColor","borderColor","mark","label","textContent","appendChild","img","icon","createCheckIcon","opacity","_classCallCheck","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","minmax","min","max","_ref","_ref2","y0","y1","Math","boundBy","right","relToAbs","rel","b","absToRel","abs","calcYBounds","xData","yData","x0Rel","x1Rel","type","j","x0","x1","k","findClosestIndex","xRel","bars","floor","getColumns","types","columns","xKey","filter","xColumn","column","slice","yColumns","reduce","source","ownKeys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","_objectSpread","arrSum","colorToGrb","c","replace","r","parseInt","g","sdf","split","roundNumber","n","str","toFixed","numberFormat","generatePoints","area","yBase","yFull","yVal","xMin","dx","points","Line","yColumn","_this","this","yColumnBase","yColumnFull","_yColumnBase","_area","_xColumn","_yColumn","_chartLine","_mapLine","_visible","_color","stroke-linejoin","vector-effect","stroke","fill","intersectionLineV","x2","intersectionPoint","_intersectionLineH","_intersectionPoint0","_intersectionPoint1","_intersectionPoint2","_intersectionPoint3","_intersectionPoint4","mapNode","val","_ref4","_ref3","svgW","svgH","display","stroke-width","_selectedBar","xMouse","step","ceil","background","window","getComputedStyle","c1","c2","_colorToGrb","r1","g1","b1","_colorToGrb2","r2","g2","b2","rgbToString","calcOpacityColor","dateFormat","ms","showDayOfWeek","date","dayOfWeek","days","getDay","dayOfMonth","getDate","month","months","getMonth","year","getFullYear","MARGIN","PADDING","WIDTH","LINE_HEIGHT","Tooltip","parentNode","transformY","transformX","rect","rx","ry","width","transform","svgBox","height","xAbs","data","percentage","factor","xText","name","yName","dy","text-anchor","Grid","labels","resize","_this$node$parentNode","_this$node$parentNode2","countV","countH","steps","yStep","len","xStep","yCur","line","y2","alignment-baseline","xCur","typeToConstructor","_len","_key","bar","_len2","_key2","Bars","_len3","_key3","chart_chart","title","tooltip","grid","chartSvg","_prepareData","originY2","colors","names","stacked","doubleY","y_scaled","globalYBounds","_getColumns","globalMax","values","bound","prepareData","mouseXFixed","keyToYBound","chartViewportTransform","chartAreaXTransform","controls","header","init","visualisation","reverse","assign","_createMap","mapSvg","svgWrapper","mapViewportTransform","mapOverlayLeft","mapOverlayRight","mapWindow","windowLeftEdge","windowRightEdge","append","appendBeforeOverlay","insertBefore","setMapViewport","w","h","setMapWindow","mapWidth","createMap","updateIntersections","_chartSvg$getBounding","tooltipData","visible","render","updateYArea","yColumnSum","getYBounds","_ref5","globalMin","yChartArea","yMapArea","deepUpdateYArea","updateXBounds","setXChartArea","onResize","_chartSvg$getBounding2","svgWidth","svgHeight","_mapNode$getBoundingC","mapHeight","createCheckBox","getMapX","getChartX","coords","switch_button_switch_button","btn","night","charts","root","getElementById","footer","createSwitchButton","createFooter","dataPromise","chartNum","dataNum","default","_createChart","createChart"],"mappings":"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","file":"static/js/main.96fdf298.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-icon.fa65b9e0.svg\";","var map = {\n\t\"./1/overview.json\": [\n\t\t12,\n\t\t0\n\t],\n\t\"./2/overview.json\": [\n\t\t13,\n\t\t1\n\t],\n\t\"./3/overview.json\": [\n\t\t14,\n\t\t2\n\t],\n\t\"./4/overview.json\": [\n\t\t15,\n\t\t3\n\t],\n\t\"./5/overview.json\": [\n\t\t16,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 10;\nmodule.exports = webpackAsyncContext;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export const createElement = (className, tag = 'div') => {\r\n    const node = document.createElement(tag);\r\n    if (className) node.className = className;\r\n    return node;\r\n};\r\n\r\nexport const createSvgElement = (tag, attrs, className) => {\r\n    const node = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    if (className) {\r\n        node.className.baseVal = className;\r\n    }\r\n    if (attrs) {\r\n        Object.keys(attrs).forEach(key => {\r\n            node.setAttribute(key, attrs[key]);\r\n        });\r\n    }\r\n    return node;\r\n};\r\n\r\nexport const clearChildren = el => {\r\n    while (el.childNodes.length) {\r\n        el.removeChild(el.childNodes[0]);\r\n    }\r\n};\r\n","export const addListener = (element, event, listener) => {\r\n    element.addEventListener(event, listener, false);\r\n};\r\n\r\nexport const removeListener = (element, event, listener) => {\r\n    element.removeEventListener(event, listener);\r\n};\r\n\r\nexport const addDragAndDropListeners = (element, listener) => {\r\n    const getMouseCoords = e => ({ x: e.clientX, y: e.clientY });\r\n    const getTouchCoords = e => ({ x: e.touches[0].clientX, y: e.touches[0].clientY });\r\n    const getMouseOffset = e => ({ x: e.offsetX, y: e.offsetY });\r\n    const getTouchOffset = e => {\r\n        const box = element.getBoundingClientRect();\r\n        const touchCoords = getTouchCoords(e);\r\n        return {\r\n            x: touchCoords.x - box.left,\r\n            y: touchCoords.y - box.top\r\n        };\r\n    };\r\n\r\n    addListener(element, 'mousedown', e => {\r\n        const offset = getMouseOffset(e);\r\n\r\n        const onMouseMove = e => {\r\n            if (e.buttons !== 1) {\r\n                removeListener(document.body, 'mousemove', onMouseMove);\r\n                removeListener(document.body, 'mouseup', onMouseUp);\r\n            } else {\r\n                const mouseCoords = getMouseCoords(e);\r\n                const cornerCoords = { x: mouseCoords.x - offset.x, y: mouseCoords.y + offset.y };\r\n                listener(cornerCoords);\r\n            }\r\n        };\r\n\r\n        function onMouseUp() {\r\n            removeListener(document.body, 'mousemove', onMouseMove);\r\n            removeListener(document.body, 'mouseup', onMouseUp);\r\n        }\r\n\r\n        addListener(document.body, 'mousemove', onMouseMove);\r\n        addListener(document.body, 'mouseup', onMouseUp);\r\n    });\r\n\r\n    addListener(element, 'touchstart', e => {\r\n        const offset = getTouchOffset(e);\r\n\r\n        const onTouchMove = e => {\r\n            const touchCoords = getTouchCoords(e);\r\n            const cornerCoords = { x: touchCoords.x - offset.x, y: touchCoords.y + offset.y };\r\n            listener(cornerCoords);\r\n        };\r\n\r\n        function onTouchEnd() {\r\n            removeListener(document.body, 'touchmove', onTouchMove);\r\n            removeListener(document.body, 'touchend', onTouchEnd);\r\n            removeListener(document.body, 'touchcancel', onTouchEnd);\r\n        }\r\n\r\n        addListener(document.body, 'touchmove', onTouchMove);\r\n        addListener(document.body, 'touchend', onTouchEnd);\r\n        addListener(document.body, 'touchcancel', onTouchEnd);\r\n    });\r\n};\r\n","import './check-box.css';\r\nimport { createElement } from '../../helpers/elements';\r\nimport { addListener } from '../../helpers/event-listeners';\r\nimport createCheckIcon from '../icons/checkbox-icon';\r\n\r\nexport default (color, text, onChange) => {\r\n    let checked = true;\r\n\r\n    const wrapper = createElement('cb_wrapper');\r\n    wrapper.style.backgroundColor = color;\r\n    wrapper.style.borderColor = color;\r\n\r\n    const mark = createElement('mark');\r\n\r\n    const label = createElement('cb_label');\r\n    label.textContent = text;\r\n\r\n    wrapper.appendChild(mark);\r\n    wrapper.appendChild(label);\r\n\r\n    mark.appendChild(createCheckIcon());\r\n\r\n    addListener(wrapper, 'click', () => {\r\n        checked = !checked;\r\n        onChange && onChange(checked);\r\n        wrapper.style.backgroundColor = checked ? color : 'transparent';\r\n        label.style.color = checked ? 'white' : color;\r\n        mark.style.opacity = +checked;\r\n    });\r\n\r\n    return wrapper;\r\n};\r\n","import icon from './check-icon.svg';\r\nimport { createElement } from '../../helpers/elements';\r\n\r\nexport default () => {\r\n    const img = createElement('icon', 'img');\r\n    img.setAttribute('src', icon);\r\n    return img;\r\n};\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export const minmax = arr => {\r\n    let min = null,\r\n        max = null;\r\n\r\n    arr.forEach(([y0, y1]) => {\r\n        min = min === null ? y0 : Math.min(min, y0);\r\n        max = max === null ? y1 : Math.max(max, y1);\r\n    });\r\n\r\n    return [min, max];\r\n};\r\n\r\nexport const boundBy = (x, left, right) => {\r\n    x = left === undefined ? x : Math.max(left, x);\r\n    x = right === undefined ? x : Math.min(right, x);\r\n    return x;\r\n};\r\n\r\nexport const relToAbs = (rel, a, b) => a + rel * (b - a);\r\n\r\nexport const absToRel = (abs, a, b) => (abs - a) / (b - a);\r\n\r\nexport const calcYBounds = (xData, yData, x0Rel, x1Rel, type) => {\r\n    if (!yData) return [0, 0];\r\n\r\n    let i = 1;\r\n    let j = xData.length - 1;\r\n\r\n    const x0 = relToAbs(x0Rel, xData[0], xData[j]);\r\n    const x1 = relToAbs(x1Rel, xData[0], xData[j]);\r\n\r\n    while (xData[i] < x0) i++;\r\n    while (xData[j] > x1) j--;\r\n\r\n    let min = yData[i],\r\n        max = yData[i];\r\n\r\n    for (let k = i + 1; k <= j; k++) {\r\n        const el = yData[k];\r\n        min = Math.min(min, el);\r\n        max = Math.max(max, el);\r\n    }\r\n\r\n    return [type === 'line' ? min : 0, max];\r\n};\r\n\r\nexport const findClosestIndex = (xData, xRel, bars) => {\r\n    if (!xRel) return null;\r\n    if (bars) {\r\n        return Math.floor(xRel * xData.length);\r\n    }\r\n    let x = relToAbs(xRel, xData[0], xData[xData.length - 1]);\r\n\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    i = (xData[i - 1] + xData[i]) / 2 < x ? i : i - 1;\r\n    return i;\r\n};\r\n\r\n/*\r\nexport const interpolate = (xData, yData, xRel) => {\r\n    if (!xRel) return null;\r\n    const x = relToAbs(xRel, xData[0], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    const y = yData[i - 1] + ((x - xData[i - 1]) * (yData[i] - yData[i - 1])) / (xData[i] - xData[i - 1]);\r\n    return y;\r\n};\r\n*/\r\n\r\nexport const getColumns = (types, columns) => {\r\n    const xKey = Object.keys(types).filter(key => types[key] === 'x')[0];\r\n    const xColumn = columns.filter(column => column[0] === xKey)[0].slice(1);\r\n\r\n    const keys = Object.keys(types).filter(key => types[key] !== 'x');\r\n    const yColumns = keys.reduce(\r\n        (obj, key) => ({ ...obj, [key]: columns.filter(column => column[0] === key)[0].slice(1) }),\r\n        {}\r\n    );\r\n\r\n    return { xColumn, yColumns, keys };\r\n};\r\n\r\nexport const arrSum = (a, b) => {\r\n    if (!a) return [...b];\r\n    return a.map((el, i) => el + b[i]);\r\n};\r\n\r\nconst colorToGrb = c => {\r\n    c = c.replace(/ /g, '');\r\n    if (c[0] === '#') {\r\n        if (c.length === 4) {\r\n            // #rgb\r\n            return {\r\n                r: parseInt(c[1] + c[1], 16),\r\n                g: parseInt(c[2] + c[2], 16),\r\n                b: parseInt(c[3] + c[3], 16)\r\n            };\r\n        } else {\r\n            // #rrggbb\r\n            return {\r\n                r: parseInt(c.slice(1, 3), 16),\r\n                g: parseInt(c.slice(3, 5), 16),\r\n                b: parseInt(c.slice(5, 7), 16)\r\n            };\r\n        }\r\n    } else {\r\n        // rgb(r,g,b)\r\n        const sdf = c.slice(4, -1).split(',');\r\n        return {\r\n            r: +sdf[0],\r\n            g: +sdf[1],\r\n            b: +sdf[2]\r\n        };\r\n    }\r\n};\r\n\r\nconst rgbToString = ({ r, g, b }) => `rgb(${r}, ${g}, ${b})`;\r\n\r\nexport const calcOpacityColor = (c1, c2, opacity) => {\r\n    const { r: r1, g: g1, b: b1 } = colorToGrb(c1);\r\n    const { r: r2, g: g2, b: b2 } = colorToGrb(c2);\r\n    return rgbToString({\r\n        r: (opacity * r1 + (1 - opacity) * r2).toFixed(),\r\n        g: (opacity * g1 + (1 - opacity) * g2).toFixed(),\r\n        b: (opacity * b1 + (1 - opacity) * b2).toFixed()\r\n    });\r\n};\r\n\r\nexport const prepareData = data => {\r\n    const { colors, names, types, columns, percentage, stacked, y_scaled: doubleY } = data;\r\n\r\n    var originY2;\r\n    let globalYBounds = {};\r\n    let { xColumn, yColumns, keys } = getColumns(types, columns);\r\n\r\n    keys.forEach(key => {\r\n        globalYBounds[key] = calcYBounds(xColumn, yColumns[key], 0, 1, types[key]);\r\n    });\r\n\r\n    const globalMax = minmax(Object.values(globalYBounds))[1];\r\n\r\n    let factor = 1;\r\n    if (globalMax > 1000000000) {\r\n        factor = 1000000;\r\n    }\r\n    if (globalMax > 1000000) {\r\n        factor = 1000;\r\n    }\r\n\r\n    keys.forEach(key => {\r\n        yColumns[key] = yColumns[key].map(el => el / factor);\r\n        globalYBounds[key] = globalYBounds[key].map(bound => bound / factor);\r\n    });\r\n\r\n    if (doubleY) {\r\n        originY2 = yColumns.y1;\r\n        yColumns.y1 = yColumns.y1.map(el => relToAbs(absToRel(el, ...globalYBounds.y1), ...globalYBounds.y0));\r\n    }\r\n\r\n    return {\r\n        colors,\r\n        names,\r\n        types,\r\n        percentage,\r\n        stacked,\r\n        doubleY,\r\n        xColumn,\r\n        yColumns,\r\n        keys,\r\n        globalYBounds,\r\n        factor,\r\n        originY2\r\n    };\r\n};\r\n\r\nconst roundNumber = n => {\r\n    const str = n.toFixed(3);\r\n    let i = str.length;\r\n    while (str[i - 1] === '0') i--;\r\n    if (str[i - 1] === '.') i--;\r\n    return i ? str.slice(0, i) : 0;\r\n};\r\n\r\nexport const numberFormat = n => {\r\n    if (n >= 1000000000) {\r\n        return roundNumber(n / 1000000000) + ' B';\r\n    }\r\n    if (n >= 1000000) {\r\n        return roundNumber(n / 1000000) + ' M';\r\n    }\r\n    return roundNumber(n);\r\n};\r\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import { createSvgElement } from '../../helpers/elements';\r\nimport { absToRel, findClosestIndex } from '../../helpers/utils';\r\n\r\nconst generatePoints = (area, x, y, yBase = [], yFull = []) => {\r\n    const length = x.length;\r\n\r\n    const yVal = i => ((yBase[i] || 0) + y[i]) * (100 / yFull[i] || 1);\r\n\r\n    let xMin = x[0],\r\n        dx = x[length - 1] - xMin,\r\n        points = `0,${yVal(0)} `;\r\n\r\n    for (let i = 1; i < length; i++) {\r\n        points += `${(x[i] - xMin) / dx},${yVal(i)} `;\r\n    }\r\n\r\n    return area ? `0,0 ${points} 1,0` : points;\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        if (!this._area) {\r\n            this._intersectionPoint0.setAttribute('opacity', +val);\r\n            this._intersectionLineH.setAttribute('opacity', +val);\r\n        }\r\n        this._chartLine.setAttribute('opacity', +val);\r\n        this._mapLine.setAttribute('opacity', +val);\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(area, keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n        this._area = area;\r\n\r\n        const points = generatePoints(area, xColumn, yColumn);\r\n        this._chartLine = createSvgElement(\r\n            area ? 'polygon' : 'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'chart-line'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'map-line'\r\n        );\r\n\r\n        const intersectionLineV = createSvgElement(\r\n            'line',\r\n            { x1: 0, x2: 0, y0: 0, y1: 1, 'vector-effect': 'non-scaling-stroke' },\r\n            'intersection-line'\r\n        );\r\n\r\n        this.intersectionPoint = createSvgElement('g', {}, '');\r\n        this.intersectionPoint.appendChild(intersectionLineV);\r\n\r\n        if (!area) {\r\n            this._intersectionLineH = createSvgElement(\r\n                'line',\r\n                {\r\n                    x1: -1,\r\n                    x2: 1,\r\n                    y0: 0,\r\n                    y1: 0,\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'intersection-line'\r\n            );\r\n\r\n            this._intersectionPoint0 = createSvgElement(\r\n                'circle',\r\n                { r: 5, stroke: color, fill: 'white' },\r\n                'intersection-point'\r\n            );\r\n            this._intersectionPoint1 = createSvgElement('g', {}, '');\r\n            this._intersectionPoint2 = createSvgElement('g', {}, 'animated');\r\n            this._intersectionPoint3 = createSvgElement('g', {}, '');\r\n            this._intersectionPoint4 = createSvgElement('g', {}, 'animated');\r\n            this._intersectionPoint1.appendChild(this._intersectionPoint0);\r\n            this._intersectionPoint2.appendChild(this._intersectionPoint1);\r\n            this._intersectionPoint3.appendChild(this._intersectionLineH);\r\n            this._intersectionPoint3.appendChild(this._intersectionPoint2);\r\n            this._intersectionPoint4.appendChild(this._intersectionPoint3);\r\n            this.intersectionPoint.appendChild(this._intersectionPoint4);\r\n        }\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n    }\r\n\r\n    onChange = (yColumnBase, yColumnFull) => {\r\n        this._yColumnBase = yColumnBase;\r\n        const points = generatePoints(this._area, this._xColumn, this._yColumn, yColumnBase, yColumnFull);\r\n        this._chartLine.setAttribute('points', points);\r\n        this._mapLine.setAttribute('points', points);\r\n    };\r\n\r\n    onMouseMove(xRel, x0, x1, y0, y1, svgW, svgH) {\r\n        let x = absToRel(xRel, x0, x1);\r\n        if (x < 0 || x > 1) {\r\n            this.intersectionPoint.style.display = 'none';\r\n            return;\r\n        }\r\n\r\n        this.intersectionPoint.style.display = 'initial';\r\n        const i = findClosestIndex(this._xColumn, xRel);\r\n        x = absToRel(this._xColumn[i], this._xColumn[0], this._xColumn[this._xColumn.length - 1]);\r\n        this.intersectionPoint.setAttribute('transform', `scale(${svgW} ${svgH}) translate(${absToRel(x, x0, x1)} 0) `);\r\n\r\n        if (!this._area) {\r\n            const y = this._yColumn[i];\r\n\r\n            this._intersectionPoint1.setAttribute('transform', `scale(${1 / svgW} ${1 / svgH})`);\r\n            this._intersectionPoint2.setAttribute('transform', `scale(1 ${y1 - y0})`);\r\n            this._intersectionPoint3.setAttribute('transform', `translate(0 ${y})`);\r\n            this._intersectionPoint4.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n        }\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport { calcOpacityColor } from '../../helpers/utils';\r\n\r\nconst generatePoints = (x, y, yBase) => {\r\n    // unused x\r\n    const length = x.length;\r\n\r\n    if (!yBase) {\r\n        let points = `0,0 0,${y[0]} `;\r\n\r\n        for (let i = 1; i < length; i++) {\r\n            points += `${i / length},${y[i - 1]} ${i / length},${y[i]} `;\r\n        }\r\n        points += `1,${y[length - 1]} 1,0`;\r\n\r\n        return points;\r\n    } else {\r\n        let points = `0,0 0,${yBase[0] + y[0]} `;\r\n\r\n        for (let i = 1; i < length; i++) {\r\n            points += `${i / length},${yBase[i - 1] + y[i - 1]} ${i / length},${yBase[i] + y[i]} `;\r\n        }\r\n        points += `1,${yBase[length - 1] + y[length - 1]} 1,0`;\r\n\r\n        return points;\r\n    }\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._chartLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._selectedBar.setAttribute('fill', 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        this._chartLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._selectedBar = createSvgElement(\r\n            'rect',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'map-bar'\r\n        );\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n        this.node.appendChild(this._selectedBar);\r\n    }\r\n\r\n    onChange = yColumnBase => {\r\n        this._yColumnBase = yColumnBase;\r\n        const points = generatePoints(this._xColumn, this._yColumn, yColumnBase);\r\n        this._chartLine.setAttribute('points', points);\r\n        this._mapLine.setAttribute('points', points);\r\n    };\r\n\r\n    onMouseMove(xMouse) {\r\n        if (!xMouse) {\r\n            this._chartLine.setAttribute('fill', this._visible ? this._color : 'transparent');\r\n            this._selectedBar.setAttribute('fill', 'transparent');\r\n            return;\r\n        }\r\n\r\n        if (this._visible) {\r\n            const step = 1 / this._xColumn.length;\r\n            const i = Math.ceil(xMouse / step);\r\n            this._selectedBar.setAttribute('x', (i - 1) * step);\r\n            this._selectedBar.setAttribute('y', this._yColumnBase ? this._yColumnBase[i - 1] : 0);\r\n            this._selectedBar.setAttribute('width', step);\r\n            this._selectedBar.setAttribute('height', this._yColumn[i - 1]);\r\n            this._selectedBar.setAttribute('fill', this._color);\r\n            const background = window.getComputedStyle(document.body).backgroundColor;\r\n            this._chartLine.setAttribute('fill', calcOpacityColor(this._color, background, 0.5));\r\n        }\r\n    }\r\n}\r\n","export const dateFormat = (ms, showDayOfWeek) => {\r\n    const date = new Date(ms);\r\n    const dayOfWeek = days[date.getDay()];\r\n    const dayOfMonth = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    return `${showDayOfWeek ? dayOfWeek + ', ' : ''}${dayOfMonth} ${month} ${year}`;\r\n};\r\n\r\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jule', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\nexport const DAY = 24 * 60 * 60 * 1000;\r\n","import { clearChildren, createSvgElement } from '../../helpers/elements';\r\nimport './tooltip.css';\r\nimport { dateFormat } from '../../helpers/date-time';\r\nimport { numberFormat } from '../../helpers/utils';\r\n\r\nconst MARGIN = 20;\r\nconst PADDING = 10;\r\nconst WIDTH = 180;\r\nconst LINE_HEIGHT = 18;\r\n\r\nexport default class Tooltip {\r\n    constructor(parentNode) {\r\n        this.transformY = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.transformX = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.rect = createSvgElement(\r\n            'rect',\r\n            { x: MARGIN, y: MARGIN, rx: 15, ry: 15, width: WIDTH, transform: 'scale(1 -1)' },\r\n            'tt_rect'\r\n        );\r\n        this.text = createSvgElement('text', {\r\n            x: MARGIN + PADDING,\r\n            y: MARGIN + PADDING + LINE_HEIGHT,\r\n            transform: 'scale(1 -1)'\r\n        });\r\n        this.transformY.appendChild(this.transformX);\r\n        this.transformX.appendChild(this.rect);\r\n        this.transformX.appendChild(this.text);\r\n        parentNode.appendChild(this.transformY);\r\n    }\r\n\r\n    resize() {\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n        this.transformY.setAttribute('transform', `translate(0 ${svgBox.height})`);\r\n    }\r\n\r\n    render(xRel, xAbs, data, percentage, factor) {\r\n        if (!data || xRel < 0 || xRel > 1) {\r\n            this.transformY.setAttribute('opacity', '0');\r\n            return;\r\n        }\r\n\r\n        this.transformY.setAttribute('opacity', '1');\r\n        this.rect.setAttribute('height', (data.length + 1) * LINE_HEIGHT + 2 * PADDING);\r\n\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n\r\n        clearChildren(this.text);\r\n\r\n        const xText = createSvgElement('tspan', {}, 'tt_bold');\r\n        xText.textContent = dateFormat(xAbs, true);\r\n        this.text.appendChild(xText);\r\n\r\n        data.forEach(({ y, color, name }) => {\r\n            const yName = createSvgElement('tspan', { x: MARGIN + PADDING, dy: LINE_HEIGHT });\r\n            yName.textContent = `${name}: `;\r\n            const yVal = createSvgElement(\r\n                'tspan',\r\n                { fill: color, 'text-anchor': 'end', x: MARGIN + WIDTH - PADDING },\r\n                'tt_bold'\r\n            );\r\n            yVal.textContent = percentage ? `${numberFormat(100 * y)} %` : numberFormat(y * factor);\r\n            this.text.appendChild(yName);\r\n            this.text.appendChild(yVal);\r\n        });\r\n\r\n        if (xRel < 0.5) {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width} 0)`);\r\n        } else {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width - 2 * MARGIN - WIDTH} 0)`);\r\n        }\r\n    }\r\n}\r\n","import { clearChildren, createSvgElement } from '../../helpers/elements';\r\nimport './grid.css';\r\nimport { absToRel, numberFormat, relToAbs } from '../../helpers/utils';\r\nimport { dateFormat, DAY } from '../../helpers/date-time';\r\n\r\nconst ROW_HEIGHT = 18 * 10;\r\nconst COL_WIDTH = 18 * 20;\r\n\r\nexport default class Grid {\r\n    constructor(parentNode) {\r\n        this.node = createSvgElement('g', {});\r\n        this.transform = createSvgElement('g', {}, 'grid_wrapper');\r\n\r\n        this.labels = createSvgElement('g', { transform: 'scale (1 -1)' });\r\n        parentNode.appendChild(this.node);\r\n        parentNode.appendChild(this.labels);\r\n        this.node.appendChild(this.transform);\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        const { width, height } = this.node.parentNode.getBoundingClientRect();\r\n        this.node.setAttribute('transform', `scale(${width} ${height})`);\r\n    }\r\n\r\n    render(x0, x1, y0, y1, factor, xData, bars, percentage) {\r\n        const { height, width } = this.node.parentNode.getBoundingClientRect();\r\n\r\n        const countV = height / ROW_HEIGHT;\r\n        const countH = width / COL_WIDTH;\r\n\r\n        let i = 0;\r\n        while ((y1 - y0) / steps[i] < countV) i++;\r\n        const yStep = steps[i];\r\n\r\n        let j = 0;\r\n        const len = xData.length - (bars ? 0 : 1);\r\n        while (((x1 - x0) * len) / steps[j] < countH) j++;\r\n        const xStep = steps[j] / len;\r\n\r\n        this.transform.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n\r\n        clearChildren(this.transform);\r\n\r\n        i = Math.ceil(y0 / yStep);\r\n        let yCur = i * yStep;\r\n\r\n        clearChildren(this.labels);\r\n\r\n        while (yCur <= y1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                { x1: 0, x2: 1, y1: yCur, y2: yCur, 'vector-effect': 'non-scaling-stroke' },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            const label = createSvgElement(\r\n                'text',\r\n                { 'alignment-baseline': 'middle', x: 0, y: -absToRel(yCur, y0, y1) * height },\r\n                'grid_labels'\r\n            );\r\n            label.textContent = numberFormat((percentage ? 100 : 1) * yCur * factor);\r\n            this.labels.appendChild(label);\r\n\r\n            yCur += yStep;\r\n        }\r\n\r\n        j = Math.ceil(x0 / xStep);\r\n        let xCur = j * xStep;\r\n\r\n        while (xCur <= x1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                {\r\n                    y1: y0,\r\n                    y2: y1,\r\n                    x1: absToRel(xCur, x0, x1),\r\n                    x2: absToRel(xCur, x0, x1),\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            const label = createSvgElement(\r\n                'text',\r\n                { 'text-anchor': bars ? 'start' : 'middle', y: -10, x: absToRel(xCur, x0, x1) * width },\r\n                'grid_labels'\r\n            );\r\n            label.textContent = dateFormat(relToAbs(xCur, xData[0], xData[xData.length - 1] + DAY), false);\r\n            this.labels.appendChild(label);\r\n\r\n            xCur += xStep;\r\n        }\r\n    }\r\n}\r\n\r\nconst steps = [\r\n    100000000,\r\n    50000000,\r\n    20000000,\r\n    10000000,\r\n    5000000,\r\n    2000000,\r\n    1000000,\r\n    500000,\r\n    200000,\r\n    100000,\r\n    50000,\r\n    20000,\r\n    10000,\r\n    5000,\r\n    2000,\r\n    1000,\r\n    500,\r\n    200,\r\n    100,\r\n    50,\r\n    20,\r\n    10,\r\n    5,\r\n    2,\r\n    1,\r\n    0.5,\r\n    0.2,\r\n    0.1,\r\n    0.05,\r\n    0.02,\r\n    0.01\r\n];\r\n","import createCheckBox from '../check-box/check-box';\r\nimport Line from './line';\r\nimport Bars from './bars';\r\nimport { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './chart.css';\r\nimport { absToRel, arrSum, boundBy, calcYBounds, findClosestIndex, minmax, prepareData } from '../../helpers/utils';\r\nimport { addDragAndDropListeners, addListener, removeListener } from '../../helpers/event-listeners';\r\nimport createMap from '../map/map';\r\nimport Tooltip from '../tooltip/tooltip';\r\nimport Grid from '../grid/grid';\r\n\r\nconst typeToConstructor = {\r\n    line: (...props) => new Line(false, ...props),\r\n    bar: (...props) => new Bars(...props),\r\n    area: (...props) => new Line(true, ...props)\r\n};\r\n\r\nconst MIN_WIN_WIDTH = 0.05;\r\n\r\nexport default (data, title) => {\r\n    const chartSvg = createSvgElement('svg', {}, 'ctr_chart');\r\n\r\n    const {\r\n        colors,\r\n        names,\r\n        types,\r\n        percentage,\r\n        stacked,\r\n        doubleY,\r\n        xColumn,\r\n        yColumns,\r\n        keys,\r\n        globalYBounds,\r\n        factor\r\n    } = prepareData(data);\r\n\r\n    let x0 = 0;\r\n    let x1 = 1;\r\n    let y0 = 0;\r\n    let y1 = 1;\r\n    let xMouse = null;\r\n    let mouseXFixed = false;\r\n    let yColumnFull = undefined;\r\n\r\n    let keyToYBound = {};\r\n    const getYBounds = key =>\r\n        keyToYBound[key] || (keyToYBound[key] = calcYBounds(xColumn, yColumns[key], x0, x1, types[key]));\r\n    const resetYBoundsCash = () => (keyToYBound = {});\r\n\r\n    const chartViewportTransform = createSvgElement('g');\r\n    const chartAreaXTransform = createSvgElement('g');\r\n\r\n    const wrapper = createElement('crt_wrapper');\r\n    const controls = createElement('crt_controls');\r\n    const header = createElement();\r\n    header.textContent = title;\r\n\r\n    let tooltip, grid;\r\n\r\n    wrapper.appendChild(header);\r\n    wrapper.appendChild(chartSvg);\r\n    chartSvg.appendChild(chartViewportTransform);\r\n    chartViewportTransform.appendChild(chartAreaXTransform);\r\n    wrapper.appendChild(controls);\r\n\r\n    const init = () => {\r\n        const visualisation = keys\r\n            .reverse()\r\n            .map(key => ({\r\n                [key]: typeToConstructor[types[key]](key, xColumn, yColumns[key], colors[key])\r\n            }))\r\n            .reduce((obj, line) => Object.assign(obj, line), {});\r\n\r\n        const {\r\n            mapNode,\r\n            setMapViewport,\r\n            appendBeforeOverlay,\r\n            setMapWindow,\r\n            windowLeftEdge,\r\n            windowRightEdge,\r\n            mapWindow\r\n        } = createMap();\r\n\r\n        const updateIntersections = xRel => {\r\n            const { width, height } = chartSvg.getBoundingClientRect();\r\n            if (xRel !== -1) xMouse = xRel;\r\n\r\n            const i = findClosestIndex(xColumn, xMouse, types.y0 === 'bar');\r\n\r\n            const tooltipData =\r\n                xMouse &&\r\n                keys\r\n                    .filter(key => visualisation[key].visible)\r\n                    .map(key => ({\r\n                        y: yColumns[key][i] / (yColumnFull ? yColumnFull[i] : 1),\r\n                        color: colors[key],\r\n                        name: names[key]\r\n                    }));\r\n            tooltip.render(absToRel(xMouse, x0, x1), xColumn[i], tooltipData, percentage, factor);\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].onMouseMove(xMouse, x0, x1, y0, y1, width, height);\r\n            });\r\n        };\r\n\r\n        const updateYArea = () => {\r\n            let yColumnSum = undefined;\r\n            yColumnFull = undefined;\r\n\r\n            if (percentage) {\r\n                keys.filter(key => visualisation[key].visible).forEach(key => {\r\n                    yColumnFull = arrSum(yColumnFull, yColumns[key]);\r\n                });\r\n            }\r\n\r\n            keys.filter(key => visualisation[key].visible).forEach(key => {\r\n                visualisation[key].onChange(stacked ? yColumnSum : undefined, percentage ? yColumnFull : undefined);\r\n                if (stacked) yColumnSum = arrSum(yColumnSum, yColumns[key]);\r\n            });\r\n\r\n            if (!percentage) {\r\n                var [min, max] = stacked\r\n                    ? calcYBounds(xColumn, yColumnSum, x0, x1, 'bar')\r\n                    : minmax(keys.filter(key => visualisation[key].visible).map(key => getYBounds(key)));\r\n\r\n                // todo: need only one time\r\n                var [globalMin, globalMax] = stacked\r\n                    ? calcYBounds(xColumn, yColumnSum, 0, 1, 'bar')\r\n                    : doubleY\r\n                    ? globalYBounds.y0\r\n                    : minmax(keys.filter(key => visualisation[key].visible).map(key => globalYBounds[key]));\r\n\r\n                y0 = min;\r\n                y1 = max;\r\n            }\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].yChartArea = percentage ? [0, 100] : [min, max];\r\n                visualisation[key].yMapArea = percentage ? [0, 100] : [globalMin, globalMax];\r\n            });\r\n\r\n            grid.render(x0, x1, y0, y1, factor, xColumn, types.y0 === 'bar', percentage);\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        const deepUpdateYArea = () => {\r\n            resetYBoundsCash();\r\n            updateYArea();\r\n        };\r\n\r\n        const setUserViewport = (w, h) => {\r\n            chartViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n        };\r\n\r\n        const setXChartArea = (x0, x1) => {\r\n            chartAreaXTransform.setAttribute(\r\n                'transform',\r\n                `\r\n                    scale(${1 / (x1 - x0)} 1) \r\n                    translate(${-x0} 0)\r\n                `\r\n            );\r\n            deepUpdateYArea();\r\n        };\r\n\r\n        const updateXBounds = (a, b) => {\r\n            x0 = a;\r\n            x1 = b;\r\n            setXChartArea(x0, x1);\r\n            setMapWindow(x0, x1);\r\n        };\r\n\r\n        const mount = () => {\r\n            grid = new Grid(chartSvg);\r\n            tooltip = new Tooltip(chartSvg);\r\n\r\n            wrapper.insertBefore(mapNode, controls);\r\n\r\n            keys.forEach(key => {\r\n                chartAreaXTransform.appendChild(visualisation[key].node);\r\n            });\r\n\r\n            keys.forEach(key => {\r\n                appendBeforeOverlay(visualisation[key].mapNode);\r\n            });\r\n\r\n            keys.reverse().forEach(key => {\r\n                visualisation[key].intersectionPoint &&\r\n                    chartSvg.insertBefore(visualisation[key].intersectionPoint, tooltip.transformY);\r\n\r\n                controls.appendChild(\r\n                    createCheckBox(colors[key], names[key], value => {\r\n                        visualisation[key].visible = value;\r\n                        updateYArea();\r\n                    })\r\n                );\r\n            });\r\n        };\r\n\r\n        const onResize = () => {\r\n            const { width: svgWidth, height: svgHeight } = chartSvg.getBoundingClientRect();\r\n            const { width: mapWidth, height: mapHeight } = mapNode.getBoundingClientRect();\r\n            setUserViewport(svgWidth, svgHeight);\r\n            setMapViewport(mapWidth, mapHeight);\r\n\r\n            grid.resize();\r\n            tooltip.resize();\r\n            setMapWindow(x0, x1);\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        mount();\r\n        deepUpdateYArea();\r\n        onResize();\r\n        addListener(window, 'resize', onResize);\r\n\r\n        const getMapX = x => {\r\n            const rect = mapNode.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        const getChartX = x => {\r\n            const rect = chartSvg.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        addDragAndDropListeners(mapWindow, coords => {\r\n            const width = x1 - x0;\r\n            const left = getMapX(coords.x);\r\n            const right = left + width;\r\n            updateXBounds(boundBy(left, 0, 1 - width), boundBy(right, width, 1));\r\n        });\r\n        addDragAndDropListeners(windowLeftEdge, coords => {\r\n            const left = getMapX(coords.x + 20);\r\n            updateXBounds(boundBy(left, 0, x1 - MIN_WIN_WIDTH), x1);\r\n        });\r\n        addDragAndDropListeners(windowRightEdge, coords => {\r\n            const right = getMapX(coords.x);\r\n            updateXBounds(x0, boundBy(right, x0 + MIN_WIN_WIDTH, 1));\r\n        });\r\n\r\n        const onMouseMove = e => updateIntersections(x0 + (x1 - x0) * getChartX(e.clientX));\r\n        const onMouseLeave = () => {\r\n            if (!mouseXFixed) updateIntersections();\r\n        };\r\n        addListener(chartSvg, 'mousemove', onMouseMove);\r\n        addListener(chartSvg, 'mouseleave', onMouseLeave);\r\n        addListener(chartSvg, 'touchmove', e => updateIntersections(x0 + (x1 - x0) * getChartX(e.touches[0].clientX)));\r\n        addListener(chartSvg, 'mousedown', () => {\r\n            if (mouseXFixed) {\r\n                addListener(chartSvg, 'mousemove', onMouseMove);\r\n            } else {\r\n                removeListener(chartSvg, 'mousemove', onMouseMove);\r\n            }\r\n            mouseXFixed = !mouseXFixed;\r\n        });\r\n    };\r\n\r\n    return {\r\n        node: wrapper,\r\n        init\r\n    };\r\n};\r\n","import { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './map.css';\r\n\r\nexport default () => {\r\n    const mapSvg = createSvgElement('svg', {}, 'map-chart');\r\n    const map = createElement('map-container');\r\n    const svgWrapper = createElement('map-svg-wrapper');\r\n    const mapViewportTransform = createSvgElement('g');\r\n\r\n    svgWrapper.appendChild(mapSvg);\r\n    map.appendChild(svgWrapper);\r\n    mapSvg.appendChild(mapViewportTransform);\r\n\r\n    const mapOverlayLeft = createSvgElement('rect', { x: 0, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapOverlayRight = createSvgElement('rect', { x: 1, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapWindow = createElement('map-window', 'div');\r\n    const windowLeftEdge = createElement('map-left-edge', 'div');\r\n    const windowRightEdge = createElement('map-right-edge', 'div');\r\n\r\n    windowLeftEdge.textContent = windowRightEdge.textContent = '|||';\r\n    mapViewportTransform.append(mapOverlayLeft);\r\n    mapViewportTransform.append(mapOverlayRight);\r\n    map.append(mapWindow);\r\n    map.append(windowLeftEdge);\r\n    map.append(windowRightEdge);\r\n\r\n    const setMapViewport = (w, h) => {\r\n        mapViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n    };\r\n\r\n    const appendBeforeOverlay = node => {\r\n        mapViewportTransform.insertBefore(node, mapOverlayLeft);\r\n    };\r\n\r\n    const setMapWindow = (x0, x1) => {\r\n        mapOverlayLeft.setAttribute('width', x0);\r\n        mapOverlayRight.setAttribute('x', x1);\r\n        mapOverlayRight.setAttribute('width', 1 - x1);\r\n\r\n        const mapWidth = map.getBoundingClientRect().width;\r\n        mapWindow.style.left = `${x0 * mapWidth}px`;\r\n        mapWindow.style.width = `${(x1 - x0) * mapWidth}px`;\r\n        windowLeftEdge.style.left = `${x0 * mapWidth - 20}px`;\r\n        windowRightEdge.style.left = `${x1 * mapWidth - 1}px`;\r\n    };\r\n\r\n    return {\r\n        mapNode: map,\r\n        appendBeforeOverlay,\r\n        setMapViewport,\r\n        setMapWindow,\r\n        windowLeftEdge,\r\n        windowRightEdge,\r\n        mapWindow\r\n    };\r\n};\r\n","import './switch-button.css';\r\nimport { addListener } from '../../helpers/event-listeners';\r\n\r\nconst nightLabel = 'Switch to Day Mode';\r\nconst dayLabel = 'Switch to Night Mode';\r\n\r\nexport default () => {\r\n    const btn = document.createElement('div');\r\n    btn.id = 'btn-switch';\r\n\r\n    let night = false;\r\n    btn.textContent = dayLabel;\r\n\r\n    const switchToNight = () => {\r\n        btn.textContent = nightLabel;\r\n        document.body.className = 'night';\r\n        night = true;\r\n    };\r\n\r\n    const switchToDay = () => {\r\n        btn.textContent = dayLabel;\r\n        document.body.className = '';\r\n        night = false;\r\n    };\r\n\r\n    addListener(btn, 'click', () => {\r\n        if (night) {\r\n            switchToDay();\r\n        } else {\r\n            switchToNight();\r\n        }\r\n    });\r\n\r\n    return btn;\r\n};\r\n","import './global.css';\r\nimport createChart from './components/chart/chart';\r\nimport createFooter from './components/footer/footer';\r\nimport { createElement } from './helpers/elements';\r\n\r\nconst charts = createElement();\r\nconst root = document.getElementById('root');\r\nroot.appendChild(charts);\r\nroot.appendChild(createFooter());\r\n\r\nconst getData = dataNum =>\r\n    import(/* webpackChunkName: \"data\" */ `./data/${dataNum}/overview.json`).then(({ default: data }) => data);\r\n\r\nlet dataPromise = new Promise(e => e());\r\n[1, 2, 3, 4, 5].forEach(chartNum => {\r\n    dataPromise = dataPromise\r\n        .then(() => getData(chartNum))\r\n        .then(data => {\r\n            const { node, init } = createChart(data, 'Chart #' + chartNum);\r\n            charts.appendChild(node);\r\n            init();\r\n        });\r\n});\r\n","import createSwitchButton from '../switch-button/switch-button';\r\nimport './footer.css';\r\n\r\nexport default () => {\r\n    const footer = document.createElement('div');\r\n    footer.id = 'footer';\r\n    footer.appendChild(createSwitchButton());\r\n    return footer;\r\n};\r\n"],"sourceRoot":""}