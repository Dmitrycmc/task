{"version":3,"sources":["components/icons/check-icon.svg","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","helpers/elements.js","helpers/event-listeners.js","components/check-box/check-box.js","components/icons/checkbox-icon.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","helpers/utils.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","components/chart/line.js","components/chart/bars.js","helpers/date-time.js","components/tooltip/tooltip.js","components/grid/grid.js","components/chart/chart.js","components/map/map.js","components/switch-button/switch-button.js","index.js","components/footer/footer.js"],"names":["module","exports","__webpack_require__","p","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_setPrototypeOf","o","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","isNativeReflectConstruct","a","push","apply","instance","Function","bind","arguments","createElement","className","tag","length","undefined","node","document","createSvgElement","attrs","createElementNS","baseVal","keys","forEach","setAttribute","addListener","element","event","listener","addEventListener","removeListener","removeEventListener","addDragAndDropListeners","getTouchCoords","x","touches","clientX","y","clientY","offset","offsetX","offsetY","getMouseOffset","onMouseMove","buttons","body","onMouseUp","mouseCoords","getMouseCoords","cornerCoords","box","getBoundingClientRect","touchCoords","left","top","getTouchOffset","onTouchMove","onTouchEnd","check_box_check_box","color","text","onChange","checked","wrapper","mark","style","label","textContent","appendChild","img","icon","createCheckIcon","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_classCallCheck","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","minmax","min","max","_ref","y0","y1","Math","boundBy","right","relToAbs","rel","b","absToRel","abs","calcYBounds","xData","yData","x0Rel","x1Rel","type","j","x0","x1","k","el","findClosestIndex","xRel","getColumns","types","columns","xKey","filter","xColumn","column","yColumns","reduce","source","ownKeys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","_objectSpread","colorToGrb","c","replace","r","parseInt","g","slice","sdf","split","INTERSECTION_LINES_COLOR","generatePoints","area","xMin","dx","points","Line","yColumn","this","_visible","_color","_xColumn","_yColumn","_chartLine","stroke-linejoin","vector-effect","stroke","fill","_mapLine","intersectionLineV","x2","_intersectionLineH","_intersectionPoint0","_intersectionPoint1","_intersectionPoint2","_intersectionPoint3","_intersectionPoint4","intersectionPoint","mapNode","val","_ref2","_ref4","_ref3","svgW","svgH","display","yBase","_this","yColumnBase","_yColumnBase","stroke-width","_selectedBar","xMouse","step","ceil","c1","c2","opacity","_colorToGrb","r1","g1","b1","_colorToGrb2","r2","g2","b2","rgbToString","toFixed","calcOpacityColor","days","months","MARGIN","PADDING","WIDTH","LINE_HEIGHT","Tooltip","parentNode","transformY","transformX","rect","rx","ry","width","transform","svgBox","height","xAbs","data","childNodes","removeChild","xText","ms","date","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","year","getFullYear","tooltipDate","name","yName","dy","yVal","text-anchor","Grid","resize","_this$node$parentNode","_this$node$parentNode2","countV","countH","yStep","xStep","yCur","line","y2","xCur","typeToConstructor","_len","_key","bar","_len2","_key2","Bars","_len3","_key3","chart_chart","title","tooltip","grid","chartSvg","colors","names","stacked","percentage","_getColumns","y_scaled","mouseXFixed","keyToYBound","keyToGlobalYBound","chartViewportTransform","chartAreaXTransform","controls","header","init","visualisation","reverse","map","assign","_createMap","mapSvg","svgWrapper","mapViewportTransform","mapOverlayLeft","mapOverlayRight","mapWindow","windowLeftEdge","windowRightEdge","append","appendBeforeOverlay","insertBefore","setMapViewport","w","h","setMapWindow","mapWidth","createMap","updateIntersections","_chartSvg$getBounding","tooltipData","visible","render","updateYArea","yColumnSum","getYBounds","getGlobalYBounds","globalMin","globalMax","yChartArea","yMapArea","deepUpdateYArea","updateXBounds","setXChartArea","onResize","_chartSvg$getBounding2","svgWidth","svgHeight","_mapNode$getBoundingC","mapHeight","createCheckBox","window","getMapX","getChartX","coords","switch_button_switch_button","btn","id","night","charts","root","getElementById","footer","createSwitchButton","createFooter","data1","chartData","_createChart","createChart","data2","_createChart2","data3","_createChart3","data4","_createChart4","data5","_createChart5"],"mappings":"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","file":"static/js/main.9e8a5afc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-icon.cc4bfc9f.svg\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export const createElement = (className, tag = 'div') => {\r\n    const node = document.createElement(tag);\r\n    if (className) node.className = className;\r\n    return node;\r\n};\r\n\r\nexport const createSvgElement = (tag, attrs, className) => {\r\n    const node = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    if (className) {\r\n        node.className.baseVal = className;\r\n    }\r\n    if (attrs) {\r\n        Object.keys(attrs).forEach(key => {\r\n            node.setAttribute(key, attrs[key]);\r\n        });\r\n    }\r\n    return node;\r\n};\r\n","export const addListener = (element, event, listener) => {\r\n    element.addEventListener(event, listener, false);\r\n};\r\n\r\nexport const removeListener = (element, event, listener) => {\r\n    element.removeEventListener(event, listener);\r\n};\r\n\r\nexport const addDragAndDropListeners = (element, listener) => {\r\n    const getMouseCoords = e => ({ x: e.clientX, y: e.clientY });\r\n    const getTouchCoords = e => ({ x: e.touches[0].clientX, y: e.touches[0].clientY });\r\n    const getMouseOffset = e => ({ x: e.offsetX, y: e.offsetY });\r\n    const getTouchOffset = e => {\r\n        const box = element.getBoundingClientRect();\r\n        const touchCoords = getTouchCoords(e);\r\n        return {\r\n            x: touchCoords.x - box.left,\r\n            y: touchCoords.y - box.top\r\n        };\r\n    };\r\n\r\n    addListener(element, 'mousedown', e => {\r\n        const offset = getMouseOffset(e);\r\n\r\n        const onMouseMove = e => {\r\n            if (e.buttons !== 1) {\r\n                removeListener(document.body, 'mousemove', onMouseMove);\r\n                removeListener(document.body, 'mouseup', onMouseUp);\r\n            } else {\r\n                const mouseCoords = getMouseCoords(e);\r\n                const cornerCoords = { x: mouseCoords.x - offset.x, y: mouseCoords.y + offset.y };\r\n                listener(cornerCoords);\r\n            }\r\n        };\r\n\r\n        function onMouseUp() {\r\n            removeListener(document.body, 'mousemove', onMouseMove);\r\n            removeListener(document.body, 'mouseup', onMouseUp);\r\n        }\r\n\r\n        addListener(document.body, 'mousemove', onMouseMove);\r\n        addListener(document.body, 'mouseup', onMouseUp);\r\n    });\r\n\r\n    addListener(element, 'touchstart', e => {\r\n        const offset = getTouchOffset(e);\r\n\r\n        const onTouchMove = e => {\r\n            const touchCoords = getTouchCoords(e);\r\n            const cornerCoords = { x: touchCoords.x - offset.x, y: touchCoords.y + offset.y };\r\n            listener(cornerCoords);\r\n        };\r\n\r\n        function onTouchEnd() {\r\n            removeListener(document.body, 'touchmove', onTouchMove);\r\n            removeListener(document.body, 'touchend', onTouchEnd);\r\n            removeListener(document.body, 'touchcancel', onTouchEnd);\r\n        }\r\n\r\n        addListener(document.body, 'touchmove', onTouchMove);\r\n        addListener(document.body, 'touchend', onTouchEnd);\r\n        addListener(document.body, 'touchcancel', onTouchEnd);\r\n    });\r\n};\r\n","import './check-box.css';\r\nimport { createElement } from '../../helpers/elements';\r\nimport { addListener } from '../../helpers/event-listeners';\r\nimport createCheckIcon from '../icons/checkbox-icon';\r\n\r\nconst uncheckedMark = 'cb_unchecked-mark';\r\nconst checkedMark = 'cb_checked-mark';\r\n\r\nexport default (color, text, onChange) => {\r\n    let checked = true;\r\n\r\n    const wrapper = createElement('cb_wrapper');\r\n\r\n    const mark = createElement(checkedMark);\r\n    mark.style.color = color;\r\n\r\n    const label = createElement('cb_label');\r\n    label.textContent = text;\r\n\r\n    wrapper.appendChild(mark);\r\n    wrapper.appendChild(label);\r\n\r\n    mark.appendChild(createCheckIcon());\r\n\r\n    addListener(wrapper, 'click', () => {\r\n        checked = !checked;\r\n        onChange && onChange(checked);\r\n        mark.className = checked ? checkedMark : uncheckedMark;\r\n    });\r\n\r\n    return wrapper;\r\n};\r\n","import icon from './check-icon.svg';\r\nimport { createElement } from '../../helpers/elements';\r\n\r\nexport default () => {\r\n    const img = createElement('icon', 'img');\r\n    img.setAttribute('src', icon);\r\n    return img;\r\n};\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export const minmax = arr => {\r\n    let min = null,\r\n        max = null;\r\n\r\n    arr.forEach(({ min: y0, max: y1 }) => {\r\n        min = min === null ? y0 : Math.min(min, y0);\r\n        max = max === null ? y1 : Math.max(max, y1);\r\n    });\r\n\r\n    return { min, max };\r\n};\r\n\r\nexport const boundBy = (x, left, right) => {\r\n    x = left === undefined ? x : Math.max(left, x);\r\n    x = right === undefined ? x : Math.min(right, x);\r\n    return x;\r\n};\r\n\r\nexport const relToAbs = (rel, a, b) => a + rel * (b - a);\r\n\r\nexport const absToRel = (abs, a, b) => (abs - a) / (b - a);\r\n\r\nexport const calcYBounds = (xData, yData, x0Rel, x1Rel, type) => {\r\n    let i = 1;\r\n    let j = xData.length - 1;\r\n\r\n    const x0 = relToAbs(x0Rel, xData[1], xData[j]);\r\n    const x1 = relToAbs(x1Rel, xData[1], xData[j]);\r\n\r\n    while (xData[i] < x0) i++;\r\n    while (xData[j] > x1) j--;\r\n\r\n    let min = yData[i],\r\n        max = yData[i];\r\n\r\n    for (let k = i + 1; k <= j; k++) {\r\n        const el = yData[k];\r\n        min = Math.min(min, el);\r\n        max = Math.max(max, el);\r\n    }\r\n\r\n    return { min: type === 'line' ? min : 0, max: max };\r\n};\r\n\r\nexport const findClosestIndex = (xData, xRel) => {\r\n    if (!xRel) return null;\r\n    let x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    i = (xData[i - 1] + xData[i]) / 2 < x ? i : i - 1;\r\n\r\n    return i;\r\n};\r\n\r\n/*\r\nexport const interpolate = (xData, yData, xRel) => {\r\n    if (!xRel) return null;\r\n    const x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    const y = yData[i - 1] + ((x - xData[i - 1]) * (yData[i] - yData[i - 1])) / (xData[i] - xData[i - 1]);\r\n    return y;\r\n};\r\n*/\r\n\r\nexport const getColumns = (types, columns) => {\r\n    const xKey = Object.keys(types).filter(key => types[key] === 'x')[0];\r\n    const xColumn = columns.filter(column => column[0] === xKey)[0];\r\n\r\n    const keys = Object.keys(types).filter(key => types[key] !== 'x');\r\n    const yColumns = keys.reduce((obj, key) => ({ ...obj, [key]: columns.filter(column => column[0] === key)[0] }), {});\r\n\r\n    return { xColumn, yColumns, keys };\r\n};\r\n\r\nexport const arrSum = (a, b) => {\r\n    if (!a) return [...b];\r\n    return a.map((el, i) => el + b[i]);\r\n};\r\n\r\nconst colorToGrb = c => {\r\n    c = c.replace(/ /g, '');\r\n    if (c[0] === '#') {\r\n        if (c.length === 4) {\r\n            // #rgb\r\n            return {\r\n                r: parseInt(c[1] + c[1], 16),\r\n                g: parseInt(c[2] + c[2], 16),\r\n                b: parseInt(c[3] + c[3], 16)\r\n            };\r\n        } else {\r\n            // #rrggbb\r\n            return {\r\n                r: parseInt(c.slice(1, 3), 16),\r\n                g: parseInt(c.slice(3, 5), 16),\r\n                b: parseInt(c.slice(5, 7), 16)\r\n            };\r\n        }\r\n    } else {\r\n        // rgb(r,g,b)\r\n        const sdf = c.slice(4, -1).split(',');\r\n        return {\r\n            r: +sdf[0],\r\n            g: +sdf[1],\r\n            b: +sdf[2]\r\n        };\r\n    }\r\n};\r\n\r\nconst rgbToString = ({ r, g, b }) => `rgb(${r}, ${g}, ${b})`;\r\n\r\nexport const calcOpacityColor = (c1, c2, opacity) => {\r\n    const { r: r1, g: g1, b: b1 } = colorToGrb(c1);\r\n    const { r: r2, g: g2, b: b2 } = colorToGrb(c2);\r\n    return rgbToString({\r\n        r: (opacity * r1 + (1 - opacity) * r2).toFixed(),\r\n        g: (opacity * g1 + (1 - opacity) * g2).toFixed(),\r\n        b: (opacity * b1 + (1 - opacity) * b2).toFixed()\r\n    });\r\n};\r\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import { createSvgElement } from '../../helpers/elements';\r\nimport { absToRel, findClosestIndex } from '../../helpers/utils';\r\n\r\nconst INTERSECTION_LINES_COLOR = 'gray';\r\n\r\nconst generatePoints = (area, x, y) => {\r\n    const length = x.length;\r\n\r\n    let xMin = x[1],\r\n        dx = x[length - 1] - xMin;\r\n    let points = `0,${y[1]} `;\r\n\r\n    for (let i = 2; i < length; i++) {\r\n        points += `${(x[i] - xMin) / dx},${y[i]} `;\r\n    }\r\n\r\n    return area ? `0,0 ${points} 1,0` : points;\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._intersectionPoint0.setAttribute('opacity', +val);\r\n        this._chartLine.setAttribute('opacity', +val);\r\n        this._mapLine.setAttribute('opacity', +val);\r\n        this._intersectionLineH.setAttribute('stroke', val ? INTERSECTION_LINES_COLOR : 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(area, keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        const points = generatePoints(area, xColumn, yColumn);\r\n        this._chartLine = createSvgElement(\r\n            area ? 'polygon' : 'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'chart-line'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'map-line'\r\n        );\r\n\r\n        const intersectionLineV = createSvgElement(\r\n            'line',\r\n            { x1: 0, x2: 0, y0: 0, y1: 1, 'vector-effect': 'non-scaling-stroke', stroke: INTERSECTION_LINES_COLOR },\r\n            'intersection-line'\r\n        );\r\n\r\n        this._intersectionLineH = createSvgElement(\r\n            'line',\r\n            { x1: -1, x2: 1, y0: 0, y1: 0, 'vector-effect': 'non-scaling-stroke', stroke: INTERSECTION_LINES_COLOR },\r\n            'intersection-line'\r\n        );\r\n\r\n        this._intersectionPoint0 = createSvgElement(\r\n            'circle',\r\n            { r: 5, stroke: color, fill: 'white' },\r\n            'intersection-point'\r\n        );\r\n        this._intersectionPoint1 = createSvgElement('g', {}, '');\r\n        this._intersectionPoint2 = createSvgElement('g', {}, 'animated');\r\n        this._intersectionPoint3 = createSvgElement('g', {}, '');\r\n        this._intersectionPoint4 = createSvgElement('g', {}, 'animated');\r\n        this.intersectionPoint = createSvgElement('g', {}, '');\r\n        this._intersectionPoint1.appendChild(this._intersectionPoint0);\r\n        this._intersectionPoint2.appendChild(this._intersectionPoint1);\r\n        this._intersectionPoint3.appendChild(this._intersectionLineH);\r\n        this._intersectionPoint3.appendChild(this._intersectionPoint2);\r\n        this._intersectionPoint4.appendChild(this._intersectionPoint3);\r\n        this.intersectionPoint.appendChild(intersectionLineV);\r\n        this.intersectionPoint.appendChild(this._intersectionPoint4);\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n    }\r\n\r\n    onMouseMove(xRel, x0, x1, y0, y1, svgW, svgH) {\r\n        let x = absToRel(xRel, x0, x1);\r\n        if (x < 0 || x > 1) {\r\n            this.intersectionPoint.style.display = 'none';\r\n            return;\r\n        }\r\n        this.intersectionPoint.style.display = 'initial';\r\n\r\n        const i = findClosestIndex(this._xColumn, xRel);\r\n        const y = this._yColumn[i];\r\n        x = absToRel(this._xColumn[i], this._xColumn[1], this._xColumn[this._xColumn.length - 1]);\r\n\r\n        this._intersectionPoint1.setAttribute('transform', `scale(${1 / svgW} ${1 / svgH})`);\r\n        this._intersectionPoint2.setAttribute('transform', `scale(1 ${y1 - y0})`);\r\n        this._intersectionPoint3.setAttribute('transform', `translate(0 ${y})`);\r\n        this._intersectionPoint4.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n        this.intersectionPoint.setAttribute('transform', `scale(${svgW} ${svgH}) translate(${absToRel(x, x0, x1)} 0) `);\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport { calcOpacityColor } from '../../helpers/utils';\r\n\r\nconst generatePoints = (x, y, yBase) => {\r\n    // unused x\r\n    const length = x.length - 1;\r\n\r\n    if (!yBase) {\r\n        let points = `0,0 0,${y[1]} `;\r\n\r\n        for (let i = 2; i <= length; i++) {\r\n            points += `${(i - 1) / length},${y[i - 1]} ${(i - 1) / length},${y[i]} `;\r\n        }\r\n        points += `1,${y[length]} 1,0`;\r\n\r\n        return points;\r\n    } else {\r\n        let points = `0,0 0,${yBase[1] + y[1]} `;\r\n\r\n        for (let i = 2; i <= length; i++) {\r\n            points += `${(i - 1) / length},${yBase[i - 1] + y[i - 1]} ${(i - 1) / length},${yBase[i] + y[i]} `;\r\n        }\r\n        points += `1,${yBase[length] + y[length]} 1,0`;\r\n\r\n        return points;\r\n    }\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._chartLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('fill', val ? this._color : 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        this._chartLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._selectedBar = createSvgElement(\r\n            'rect',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', 'stroke-width': 0, fill: color },\r\n            'map-bar'\r\n        );\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n        this.node.appendChild(this._selectedBar);\r\n    }\r\n\r\n    onChange = yColumnBase => {\r\n        this._yColumnBase = yColumnBase;\r\n        const points = generatePoints(this._xColumn, this._yColumn, yColumnBase);\r\n        this._chartLine.setAttribute('points', points);\r\n        this._mapLine.setAttribute('points', points);\r\n    };\r\n\r\n    onMouseMove(xMouse) {\r\n        if (!xMouse) {\r\n            this._chartLine.setAttribute('fill', this._visible ? this._color : 'transparent');\r\n            this._selectedBar.setAttribute('fill', 'transparent');\r\n            return;\r\n        }\r\n\r\n        if (this._visible) {\r\n            const step = 1 / (this._xColumn.length - 1);\r\n            const i = Math.ceil(xMouse / step);\r\n            this._selectedBar.setAttribute('x', (i - 1) * step);\r\n            this._selectedBar.setAttribute('y', this._yColumnBase ? this._yColumnBase[i] : 0);\r\n            this._selectedBar.setAttribute('width', step);\r\n            this._selectedBar.setAttribute('height', this._yColumn[i]);\r\n            this._selectedBar.setAttribute('fill', this._color);\r\n            this._chartLine.setAttribute('fill', calcOpacityColor(this._color, '#fff', 0.6));\r\n        }\r\n    }\r\n}\r\n","export const tooltipDate = ms => {\r\n    const date = new Date(ms);\r\n    const dayOfWeek = days[date.getDay()];\r\n    const dayOfMonth = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    return `${dayOfWeek}, ${dayOfMonth} ${month} ${year}`;\r\n};\r\n\r\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jule', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './tooltip.css';\r\nimport { tooltipDate } from '../../helpers/date-time';\r\n\r\nconst MARGIN = 20;\r\nconst PADDING = 10;\r\nconst WIDTH = 180;\r\nconst LINE_HEIGHT = 18;\r\n\r\nexport default class Tooltip {\r\n    constructor(parentNode) {\r\n        this.transformY = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.transformX = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.rect = createSvgElement(\r\n            'rect',\r\n            { x: MARGIN, y: MARGIN, rx: 15, ry: 15, width: WIDTH, transform: 'scale(1 -1)' },\r\n            'tt_rect'\r\n        );\r\n        this.text = createSvgElement('text', {\r\n            x: MARGIN + PADDING,\r\n            y: MARGIN + PADDING + LINE_HEIGHT,\r\n            transform: 'scale(1 -1)'\r\n        });\r\n        this.transformY.appendChild(this.transformX);\r\n        this.transformX.appendChild(this.rect);\r\n        this.transformX.appendChild(this.text);\r\n        parentNode.appendChild(this.transformY);\r\n    }\r\n\r\n    resize() {\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n        this.transformY.setAttribute('transform', `translate(0 ${svgBox.height})`);\r\n    }\r\n\r\n    render(xRel, xAbs, data) {\r\n        if (!data || xRel < 0 || xRel > 1) {\r\n            this.transformY.setAttribute('opacity', '0');\r\n            return;\r\n        }\r\n\r\n        this.transformY.setAttribute('opacity', '1');\r\n        this.rect.setAttribute('height', (data.length + 1) * LINE_HEIGHT + 2 * PADDING);\r\n\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n\r\n        while (this.text.childNodes.length) {\r\n            this.text.removeChild(this.text.childNodes[0]);\r\n        }\r\n\r\n        const xText = createSvgElement('tspan', {}, 'tt_bold');\r\n        xText.textContent = tooltipDate(xAbs);\r\n        this.text.appendChild(xText);\r\n\r\n        data.forEach(({ y, color, name }) => {\r\n            const yName = createSvgElement('tspan', { x: MARGIN + PADDING, dy: LINE_HEIGHT });\r\n            yName.textContent = `${name}: `;\r\n            const yVal = createSvgElement(\r\n                'tspan',\r\n                { fill: color, 'text-anchor': 'end', x: MARGIN + WIDTH - PADDING },\r\n                'tt_bold'\r\n            );\r\n            yVal.textContent = (+y).toFixed(2);\r\n            this.text.appendChild(yName);\r\n            this.text.appendChild(yVal);\r\n        });\r\n\r\n        if (xRel < 0.5) {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width} 0)`);\r\n        } else {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width - 2 * MARGIN - WIDTH} 0)`);\r\n        }\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './grid.css';\r\nimport { absToRel } from '../../helpers/utils';\r\n\r\nconst ROW_HEIGHT = 18 * 10;\r\nconst COL_WIDTH = 18 * 10;\r\n\r\nexport default class Grid {\r\n    constructor(parentNode) {\r\n        this.node = createSvgElement('g', {});\r\n        this.transform = createSvgElement('g', {}, 'grid_wrapper');\r\n\r\n        parentNode.appendChild(this.node);\r\n        this.node.appendChild(this.transform);\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        const { width, height } = this.node.parentNode.getBoundingClientRect();\r\n        this.node.setAttribute('transform', `scale(${width} ${height})`);\r\n    }\r\n\r\n    render(x0, x1, y0, y1) {\r\n        const { height, width } = this.node.parentNode.getBoundingClientRect();\r\n\r\n        const countV = height / ROW_HEIGHT;\r\n        const countH = width / COL_WIDTH;\r\n\r\n        let i = 0;\r\n        while ((y1 - y0) / sdf[i] < countV) i++;\r\n        const yStep = sdf[i];\r\n        let j = 0;\r\n        while ((x1 - x0) / sdf[j] < countH) j++;\r\n        const xStep = sdf[j];\r\n\r\n        this.transform.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n\r\n        while (this.transform.childNodes.length) {\r\n            this.transform.removeChild(this.transform.childNodes[0]);\r\n        }\r\n\r\n        i = Math.ceil(y0 / yStep);\r\n        let yCur = i * yStep;\r\n\r\n        while (yCur <= y1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                { x1: 0, x2: 1, y1: yCur, y2: yCur, 'vector-effect': 'non-scaling-stroke' },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            yCur += yStep;\r\n        }\r\n\r\n        j = Math.ceil(x0 / xStep);\r\n        let xCur = j * xStep;\r\n\r\n        while (xCur <= x1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                {\r\n                    y1: y0,\r\n                    y2: y1,\r\n                    x1: absToRel(xCur, x0, x1),\r\n                    x2: absToRel(xCur, x0, x1),\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            xCur += xStep;\r\n        }\r\n    }\r\n}\r\n\r\nconst sdf = [\r\n    100000000,\r\n    50000000,\r\n    20000000,\r\n    10000000,\r\n    5000000,\r\n    2000000,\r\n    1000000,\r\n    500000,\r\n    200000,\r\n    100000,\r\n    50000,\r\n    20000,\r\n    10000,\r\n    5000,\r\n    2000,\r\n    1000,\r\n    500,\r\n    200,\r\n    100,\r\n    50,\r\n    20,\r\n    10,\r\n    5,\r\n    2,\r\n    1,\r\n    0.5,\r\n    0.2,\r\n    0.1,\r\n    0.05,\r\n    0.02,\r\n    0.01\r\n];\r\n","import createCheckBox from '../check-box/check-box';\r\nimport Line from './line';\r\nimport Bars from './bars';\r\nimport { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './chart.css';\r\nimport { absToRel, arrSum, boundBy, calcYBounds, findClosestIndex, getColumns, minmax } from '../../helpers/utils';\r\nimport { addDragAndDropListeners, addListener, removeListener } from '../../helpers/event-listeners';\r\nimport createMap from '../map/map';\r\nimport Tooltip from '../tooltip/tooltip';\r\nimport Grid from '../grid/grid';\r\n\r\nconst typeToConstructor = {\r\n    line: (...props) => new Line(false, ...props),\r\n    bar: (...props) => new Bars(...props),\r\n    area: (...props) => new Line(true, ...props)\r\n};\r\n\r\nconst MIN_WIN_WIDTH = 0.05;\r\n\r\nexport default (data, title) => {\r\n    const chartSvg = createSvgElement('svg', {}, 'ctr_chart');\r\n\r\n    const { colors, names, types, columns, percentage, stacked, y_scaled: doubleY } = data;\r\n\r\n    const { xColumn, yColumns, keys } = getColumns(types, columns);\r\n\r\n    let x0 = 0;\r\n    let x1 = 1;\r\n    let y0 = 0;\r\n    let y1 = 1;\r\n    let xMouse = null;\r\n    let mouseXFixed = false;\r\n\r\n    let keyToYBound = {};\r\n    let keyToGlobalYBound = {};\r\n    const getYBounds = key =>\r\n        keyToYBound[key] || (keyToYBound[key] = calcYBounds(xColumn, yColumns[key], x0, x1, types[key]));\r\n    const getGlobalYBounds = key =>\r\n        keyToGlobalYBound[key] || (keyToGlobalYBound[key] = calcYBounds(xColumn, yColumns[key], 0, 1, types[key]));\r\n    const resetYBoundsCash = () => (keyToYBound = {});\r\n\r\n    const chartViewportTransform = createSvgElement('g');\r\n    const chartAreaXTransform = createSvgElement('g');\r\n\r\n    const wrapper = createElement('crt_wrapper');\r\n    const controls = createElement('crt_controls');\r\n    const header = createElement();\r\n    header.textContent = title;\r\n\r\n    let tooltip, grid;\r\n\r\n    wrapper.appendChild(header);\r\n    wrapper.appendChild(chartSvg);\r\n    chartSvg.appendChild(chartViewportTransform);\r\n    chartViewportTransform.appendChild(chartAreaXTransform);\r\n    wrapper.appendChild(controls);\r\n\r\n    const init = () => {\r\n        const visualisation = keys\r\n            .reverse()\r\n            .map(key => ({\r\n                [key]: typeToConstructor[types[key]](key, xColumn, yColumns[key], colors[key])\r\n            }))\r\n            .reduce((obj, line) => Object.assign(obj, line), {});\r\n\r\n        const {\r\n            mapNode,\r\n            setMapViewport,\r\n            appendBeforeOverlay,\r\n            setMapWindow,\r\n            windowLeftEdge,\r\n            windowRightEdge,\r\n            mapWindow\r\n        } = createMap();\r\n\r\n        const updateIntersections = xRel => {\r\n            const { width, height } = chartSvg.getBoundingClientRect();\r\n            if (xRel !== -1) xMouse = xRel;\r\n\r\n            const i = findClosestIndex(xColumn, xMouse);\r\n\r\n            const tooltipData =\r\n                xMouse &&\r\n                keys\r\n                    .filter(key => visualisation[key].visible)\r\n                    .map(key => ({\r\n                        y: yColumns[key][i],\r\n                        color: colors[key],\r\n                        name: names[key]\r\n                    }));\r\n            tooltip.render(absToRel(xMouse, x0, x1), xColumn[i], tooltipData);\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].onMouseMove(xMouse, x0, x1, y0, y1, width, height);\r\n            });\r\n        };\r\n\r\n        const updateYArea = () => {\r\n            let yColumnSum = null;\r\n\r\n            keys.filter(key => visualisation[key].visible).forEach(key => {\r\n                visualisation[key].onChange && visualisation[key].onChange(yColumnSum);\r\n                yColumnSum = arrSum(yColumnSum, yColumns[key]);\r\n            });\r\n\r\n            const { min, max } = stacked\r\n                ? calcYBounds(xColumn, yColumnSum, x0, x1, 'bar')\r\n                : minmax(keys.filter(key => visualisation[key].visible).map(key => getYBounds(key)));\r\n\r\n            // todo: need only one time\r\n            const { min: globalMin, max: globalMax } = stacked\r\n                ? calcYBounds(xColumn, yColumnSum, 0, 1, 'bar')\r\n                : minmax(keys.filter(key => visualisation[key].visible).map(key => getGlobalYBounds(key)));\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].yChartArea = [min, max];\r\n                visualisation[key].yMapArea = [globalMin, globalMax];\r\n            });\r\n\r\n            y0 = min;\r\n            y1 = max;\r\n            grid.render(x0, x1, y0, y1);\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        const deepUpdateYArea = () => {\r\n            resetYBoundsCash();\r\n            updateYArea();\r\n        };\r\n\r\n        const setUserViewport = (w, h) => {\r\n            chartViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n        };\r\n\r\n        const setXChartArea = (x0, x1) => {\r\n            chartAreaXTransform.setAttribute(\r\n                'transform',\r\n                `\r\n                    scale(${1 / (x1 - x0)} 1) \r\n                    translate(${-x0} 0)\r\n                `\r\n            );\r\n            deepUpdateYArea();\r\n        };\r\n\r\n        const updateXBounds = (a, b) => {\r\n            x0 = a;\r\n            x1 = b;\r\n            setXChartArea(x0, x1);\r\n            setMapWindow(x0, x1);\r\n        };\r\n\r\n        const mount = () => {\r\n            grid = new Grid(chartSvg);\r\n            tooltip = new Tooltip(chartSvg);\r\n\r\n            wrapper.insertBefore(mapNode, controls);\r\n\r\n            keys.forEach(key => {\r\n                chartAreaXTransform.appendChild(visualisation[key].node);\r\n            });\r\n\r\n            keys.forEach(key => {\r\n                appendBeforeOverlay(visualisation[key].mapNode);\r\n            });\r\n\r\n            keys.reverse().forEach(key => {\r\n                visualisation[key].intersectionPoint &&\r\n                    chartSvg.insertBefore(visualisation[key].intersectionPoint, tooltip.transformY);\r\n\r\n                controls.appendChild(\r\n                    createCheckBox(colors[key], names[key], value => {\r\n                        visualisation[key].visible = value;\r\n                        updateYArea();\r\n                    })\r\n                );\r\n            });\r\n        };\r\n\r\n        const onResize = () => {\r\n            const { width: svgWidth, height: svgHeight } = chartSvg.getBoundingClientRect();\r\n            const { width: mapWidth, height: mapHeight } = mapNode.getBoundingClientRect();\r\n            setUserViewport(svgWidth, svgHeight);\r\n            setMapViewport(mapWidth, mapHeight);\r\n\r\n            grid.resize();\r\n            tooltip.resize();\r\n            setMapWindow(x0, x1);\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        mount();\r\n        deepUpdateYArea();\r\n        onResize();\r\n        addListener(window, 'resize', onResize);\r\n\r\n        const getMapX = x => {\r\n            const rect = mapNode.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        const getChartX = x => {\r\n            const rect = chartSvg.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        addDragAndDropListeners(mapWindow, coords => {\r\n            const width = x1 - x0;\r\n            const left = getMapX(coords.x);\r\n            const right = left + width;\r\n            updateXBounds(boundBy(left, 0, 1 - width), boundBy(right, width, 1));\r\n        });\r\n        addDragAndDropListeners(windowLeftEdge, coords => {\r\n            const left = getMapX(coords.x + 10);\r\n            updateXBounds(boundBy(left, 0, x1 - MIN_WIN_WIDTH), x1);\r\n        });\r\n        addDragAndDropListeners(windowRightEdge, coords => {\r\n            const right = getMapX(coords.x);\r\n            updateXBounds(x0, boundBy(right, x0 + MIN_WIN_WIDTH, 1));\r\n        });\r\n\r\n        const onMouseMove = e => updateIntersections(x0 + (x1 - x0) * getChartX(e.clientX));\r\n        const onMouseLeave = () => {\r\n            if (!mouseXFixed) updateIntersections();\r\n        };\r\n        addListener(chartSvg, 'mousemove', onMouseMove);\r\n        addListener(chartSvg, 'mouseleave', onMouseLeave);\r\n        addListener(chartSvg, 'touchmove', e => updateIntersections(x0 + (x1 - x0) * getChartX(e.touches[0].clientX)));\r\n        addListener(chartSvg, 'mousedown', () => {\r\n            if (mouseXFixed) {\r\n                addListener(chartSvg, 'mousemove', onMouseMove);\r\n            } else {\r\n                removeListener(chartSvg, 'mousemove', onMouseMove);\r\n            }\r\n            mouseXFixed = !mouseXFixed;\r\n        });\r\n    };\r\n\r\n    return {\r\n        node: wrapper,\r\n        init\r\n    };\r\n};\r\n","import { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './map.css';\r\n\r\nexport default () => {\r\n    const mapSvg = createSvgElement('svg', {}, 'map-chart');\r\n    const map = createElement('map-container');\r\n    const svgWrapper = createElement('map-svg-wrapper');\r\n    const mapViewportTransform = createSvgElement('g');\r\n\r\n    svgWrapper.appendChild(mapSvg);\r\n    map.appendChild(svgWrapper);\r\n    mapSvg.appendChild(mapViewportTransform);\r\n\r\n    const mapOverlayLeft = createSvgElement('rect', { x: 0, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapOverlayRight = createSvgElement('rect', { x: 1, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapWindow = createElement('map-window', 'div');\r\n    const windowLeftEdge = createElement('map-left-edge', 'div');\r\n    const windowRightEdge = createElement('map-right-edge', 'div');\r\n\r\n    mapViewportTransform.append(mapOverlayLeft);\r\n    mapViewportTransform.append(mapOverlayRight);\r\n    map.append(mapWindow);\r\n    map.append(windowLeftEdge);\r\n    map.append(windowRightEdge);\r\n\r\n    const setMapViewport = (w, h) => {\r\n        mapViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n    };\r\n\r\n    const appendBeforeOverlay = node => {\r\n        mapViewportTransform.insertBefore(node, mapOverlayLeft);\r\n    };\r\n\r\n    const setMapWindow = (x0, x1) => {\r\n        mapOverlayLeft.setAttribute('width', x0);\r\n        mapOverlayRight.setAttribute('x', x1);\r\n        mapOverlayRight.setAttribute('width', 1 - x1);\r\n\r\n        const mapWidth = map.getBoundingClientRect().width;\r\n        mapWindow.style.left = `${x0 * mapWidth}px`;\r\n        mapWindow.style.width = `${(x1 - x0) * mapWidth}px`;\r\n        windowLeftEdge.style.left = `${x0 * mapWidth - 10}px`;\r\n        windowRightEdge.style.left = `${x1 * mapWidth - 1}px`;\r\n    };\r\n\r\n    return {\r\n        mapNode: map,\r\n        appendBeforeOverlay,\r\n        setMapViewport,\r\n        setMapWindow,\r\n        windowLeftEdge,\r\n        windowRightEdge,\r\n        mapWindow\r\n    };\r\n};\r\n","import './switch-button.css';\r\nimport { addListener } from '../../helpers/event-listeners';\r\n\r\nconst nightLabel = 'Switch to Day Mode';\r\nconst dayLabel = 'Switch to Night Mode';\r\n\r\nexport default () => {\r\n    const btn = document.createElement('div');\r\n    btn.id = 'btn-switch';\r\n\r\n    let night = false;\r\n    btn.textContent = dayLabel;\r\n\r\n    const switchToNight = () => {\r\n        btn.textContent = nightLabel;\r\n        document.body.className = 'night';\r\n        night = true;\r\n    };\r\n\r\n    const switchToDay = () => {\r\n        btn.textContent = dayLabel;\r\n        document.body.className = '';\r\n        night = false;\r\n    };\r\n\r\n    addListener(btn, 'click', () => {\r\n        if (night) {\r\n            switchToDay();\r\n        } else {\r\n            switchToNight();\r\n        }\r\n    });\r\n\r\n    return btn;\r\n};\r\n","import './global.css';\r\nimport createChart from './components/chart/chart';\r\nimport createFooter from './components/footer/footer';\r\nimport data1 from './data/1/overview';\r\nimport data2 from './data/2/overview';\r\nimport data3 from './data/3/overview';\r\nimport data4 from './data/4/overview';\r\nimport data5 from './data/5/overview';\r\nimport { createElement } from './helpers/elements';\r\n\r\nconst charts = createElement();\r\nconst root = document.getElementById('root');\r\nroot.appendChild(charts);\r\nroot.appendChild(createFooter());\r\n\r\n[data1].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #1');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data2].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #2');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data3].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #3');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data4].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #4');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data5].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #5');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n","import createSwitchButton from '../switch-button/switch-button';\r\nimport './footer.css';\r\n\r\nexport default () => {\r\n    const footer = document.createElement('div');\r\n    footer.id = 'footer';\r\n    footer.appendChild(createSwitchButton());\r\n    return footer;\r\n};\r\n"],"sourceRoot":""}