{"version":3,"sources":["components/icons/check-icon.svg","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","helpers/elements.js","helpers/event-listeners.js","components/check-box/check-box.js","components/icons/checkbox-icon.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","helpers/utils.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","components/chart/line.js","components/chart/bars.js","helpers/date-time.js","components/tooltip/tooltip.js","components/grid/grid.js","components/chart/chart.js","components/map/map.js","components/switch-button/switch-button.js","index.js","components/footer/footer.js"],"names":["module","exports","__webpack_require__","p","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","createElement","className","tag","arguments","length","undefined","node","document","createSvgElement","attrs","createElementNS","baseVal","keys","forEach","setAttribute","addListener","element","event","listener","addEventListener","removeListener","removeEventListener","addDragAndDropListeners","getTouchCoords","e","x","touches","clientX","y","clientY","offset","offsetX","offsetY","getMouseOffset","onMouseMove","buttons","body","onMouseUp","mouseCoords","getMouseCoords","cornerCoords","box","getBoundingClientRect","touchCoords","left","top","getTouchOffset","onTouchMove","onTouchEnd","check_box_check_box","color","text","onChange","checked","wrapper","mark","style","label","textContent","appendChild","img","icon","createCheckIcon","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","prototype","boundBy","right","Math","max","min","relToAbs","rel","a","b","absToRel","abs","findClosestIndex","xData","xRel","getColumns","types","columns","xKey","filter","xColumn","column","yColumns","reduce","source","ownKeys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","_objectSpread","INTERSECTION_LINES_COLOR","generatePoints","xMin","dx","points","Line","yColumn","_this","this","_visible","_color","_xColumn","_yColumn","_chartLine","stroke-linejoin","vector-effect","stroke","_mapLine","intersectionLineV","x1","x2","y0","y1","_intersectionLineH","_intersectionPoint0","r","fill","intersectionPoint1","intersectionPoint2","intersectionPoint3","intersectionPoint4","intersectionPoint","setIntersectionX","x0","svgW","svgH","display","mapNode","val","_ref2","_ref","_ref4","_ref3","days","months","MARGIN","PADDING","WIDTH","LINE_HEIGHT","Tooltip","parentNode","transformY","transformX","rect","rx","ry","width","transform","svgBox","height","xAbs","data","childNodes","removeChild","xText","ms","date","Date","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","year","getFullYear","tooltipDate","name","yName","dy","yVal","text-anchor","toFixed","Grid","resize","_this$node$parentNode","_this$node$parentNode2","countV","countH","sdf","yStep","j","xStep","yCur","ceil","line","y2","xCur","typeToConstructor","bar","Bars","area","chart_chart","title","tooltip","grid","chartSvg","colors","names","_getColumns","xMouse","mouseXFixed","keyToYBound","getYBounds","yData","x0Rel","x1Rel","k","el","calcYBounds","chartViewportTransform","chartAreaXTransform","controls","header","init","visualisation","map","assign","_createMap","mapSvg","svgWrapper","mapViewportTransform","mapOverlayLeft","mapOverlayRight","mapWindow","windowLeftEdge","windowRightEdge","append","appendBeforeOverlay","insertBefore","setMapViewport","w","h","setMapWindow","mapWidth","createMap","updateIntersections","_chartSvg$getBounding","tooltipData","visible","render","updateYArea","_minmax","minmax","yChartArea","yMapArea","deepUpdateYArea","updateXBounds","setXChartArea","onResize","_chartSvg$getBounding2","svgWidth","svgHeight","_mapNode$getBoundingC","mapHeight","createCheckBox","window","getMapX","getChartX","coords","switch_button_switch_button","btn","id","night","charts","root","getElementById","footer","createSwitchButton","createFooter","data1","chartData","_createChart","createChart","data2","_createChart2","data3","_createChart3","data4","_createChart4","data5","_createChart5"],"mappings":"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","file":"static/js/main.dcbb94b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-icon.cc4bfc9f.svg\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export const createElement = (className, tag = 'div') => {\r\n    const node = document.createElement(tag);\r\n    if (className) node.className = className;\r\n    return node;\r\n};\r\n\r\nexport const createSvgElement = (tag, attrs, className) => {\r\n    const node = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    if (className) {\r\n        node.className.baseVal = className;\r\n    }\r\n    if (attrs) {\r\n        Object.keys(attrs).forEach(key => {\r\n            node.setAttribute(key, attrs[key]);\r\n        });\r\n    }\r\n    return node;\r\n};\r\n","export const addListener = (element, event, listener) => {\r\n    element.addEventListener(event, listener, false);\r\n};\r\n\r\nexport const removeListener = (element, event, listener) => {\r\n    element.removeEventListener(event, listener);\r\n};\r\n\r\nexport const addDragAndDropListeners = (element, listener) => {\r\n    const getMouseCoords = e => ({ x: e.clientX, y: e.clientY });\r\n    const getTouchCoords = e => ({ x: e.touches[0].clientX, y: e.touches[0].clientY });\r\n    const getMouseOffset = e => ({ x: e.offsetX, y: e.offsetY });\r\n    const getTouchOffset = e => {\r\n        const box = element.getBoundingClientRect();\r\n        const touchCoords = getTouchCoords(e);\r\n        return {\r\n            x: touchCoords.x - box.left,\r\n            y: touchCoords.y - box.top\r\n        };\r\n    };\r\n\r\n    addListener(element, 'mousedown', e => {\r\n        const offset = getMouseOffset(e);\r\n\r\n        const onMouseMove = e => {\r\n            if (e.buttons !== 1) {\r\n                removeListener(document.body, 'mousemove', onMouseMove);\r\n                removeListener(document.body, 'mouseup', onMouseUp);\r\n            } else {\r\n                const mouseCoords = getMouseCoords(e);\r\n                const cornerCoords = { x: mouseCoords.x - offset.x, y: mouseCoords.y + offset.y };\r\n                listener(cornerCoords);\r\n            }\r\n        };\r\n\r\n        function onMouseUp() {\r\n            removeListener(document.body, 'mousemove', onMouseMove);\r\n            removeListener(document.body, 'mouseup', onMouseUp);\r\n        }\r\n\r\n        addListener(document.body, 'mousemove', onMouseMove);\r\n        addListener(document.body, 'mouseup', onMouseUp);\r\n    });\r\n\r\n    addListener(element, 'touchstart', e => {\r\n        const offset = getTouchOffset(e);\r\n\r\n        const onTouchMove = e => {\r\n            const touchCoords = getTouchCoords(e);\r\n            const cornerCoords = { x: touchCoords.x - offset.x, y: touchCoords.y + offset.y };\r\n            listener(cornerCoords);\r\n        };\r\n\r\n        function onTouchEnd() {\r\n            removeListener(document.body, 'touchmove', onTouchMove);\r\n            removeListener(document.body, 'touchend', onTouchEnd);\r\n            removeListener(document.body, 'touchcancel', onTouchEnd);\r\n        }\r\n\r\n        addListener(document.body, 'touchmove', onTouchMove);\r\n        addListener(document.body, 'touchend', onTouchEnd);\r\n        addListener(document.body, 'touchcancel', onTouchEnd);\r\n    });\r\n};\r\n","import './check-box.css';\r\nimport { createElement } from '../../helpers/elements';\r\nimport { addListener } from '../../helpers/event-listeners';\r\nimport createCheckIcon from '../icons/checkbox-icon';\r\n\r\nconst uncheckedMark = 'cb_unchecked-mark';\r\nconst checkedMark = 'cb_checked-mark';\r\n\r\nexport default (color, text, onChange) => {\r\n    let checked = true;\r\n\r\n    const wrapper = createElement('cb_wrapper');\r\n\r\n    const mark = createElement(checkedMark);\r\n    mark.style.color = color;\r\n\r\n    const label = createElement('cb_label');\r\n    label.textContent = text;\r\n\r\n    wrapper.appendChild(mark);\r\n    wrapper.appendChild(label);\r\n\r\n    mark.appendChild(createCheckIcon());\r\n\r\n    addListener(wrapper, 'click', () => {\r\n        checked = !checked;\r\n        onChange && onChange(checked);\r\n        mark.className = checked ? checkedMark : uncheckedMark;\r\n    });\r\n\r\n    return wrapper;\r\n};\r\n","import icon from './check-icon.svg';\r\nimport { createElement } from '../../helpers/elements';\r\n\r\nexport default () => {\r\n    const img = createElement('icon', 'img');\r\n    img.setAttribute('src', icon);\r\n    return img;\r\n};\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export const minmax = arr => {\r\n    let min = null,\r\n        max = null;\r\n\r\n    arr.forEach(({ y0, y1 }) => {\r\n        min = min === null ? y0 : Math.min(min, y0);\r\n        max = max === null ? y1 : Math.max(max, y1);\r\n    });\r\n\r\n    return { min, max };\r\n};\r\n\r\nexport const boundBy = (x, left, right) => {\r\n    x = left === undefined ? x : Math.max(left, x);\r\n    x = right === undefined ? x : Math.min(right, x);\r\n    return x;\r\n};\r\n\r\nexport const relToAbs = (rel, a, b) => a + rel * (b - a);\r\n\r\nexport const absToRel = (abs, a, b) => (abs - a) / (b - a);\r\n\r\nexport const calcYBounds = (xData, yData, x0Rel, x1Rel) => {\r\n    let i = 1;\r\n    let j = xData.length - 1;\r\n\r\n    const x0 = relToAbs(x0Rel, xData[1], xData[j]);\r\n    const x1 = relToAbs(x1Rel, xData[1], xData[j]);\r\n\r\n    while (xData[i] < x0) i++;\r\n    while (xData[j] > x1) j--;\r\n\r\n    let min = yData[i],\r\n        max = yData[i];\r\n\r\n    for (let k = i + 1; k <= j; k++) {\r\n        const el = yData[k];\r\n        min = Math.min(min, el);\r\n        max = Math.max(max, el);\r\n    }\r\n\r\n    return { y0: min, y1: max };\r\n};\r\n\r\nexport const findClosestIndex = (xData, xRel) => {\r\n    if (!xRel) return null;\r\n    let x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    i = (xData[i - 1] + xData[i]) / 2 < x ? i : i - 1;\r\n\r\n    return i;\r\n};\r\n\r\nexport const interpolate = (xData, yData, xRel) => {\r\n    if (!xRel) return null;\r\n    const x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    const y = yData[i - 1] + ((x - xData[i - 1]) * (yData[i] - yData[i - 1])) / (xData[i] - xData[i - 1]);\r\n    return y;\r\n};\r\n\r\nexport const getColumns = (types, columns) => {\r\n    const xKey = Object.keys(types).filter(key => types[key] === 'x')[0];\r\n    const xColumn = columns.filter(column => column[0] === xKey)[0];\r\n\r\n    const keys = Object.keys(types).filter(key => types[key] !== 'x');\r\n    const yColumns = keys.reduce((obj, key) => ({ ...obj, [key]: columns.filter(column => column[0] === key)[0] }), {});\r\n\r\n    return { xColumn, yColumns, keys };\r\n};\r\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import { createSvgElement } from '../../helpers/elements';\r\nimport { absToRel, findClosestIndex } from '../../helpers/utils';\r\n\r\nconst INTERSECTION_LINES_COLOR = 'gray';\r\n\r\nconst generatePoints = (x, y) => {\r\n    const length = x.length;\r\n\r\n    let xMin = x[1],\r\n        dx = x[length - 1] - xMin;\r\n    let points = '' + 0 + ',' + y[1] + ' ';\r\n\r\n    for (let i = 2; i < length; i++) {\r\n        points += '' + (x[i] - xMin) / dx + ',' + y[i] + ' ';\r\n    }\r\n\r\n    return points;\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._intersectionPoint0.setAttribute('stroke', val ? this._color : 'transparent');\r\n        this._intersectionPoint0.setAttribute('fill', val ? 'white' : 'transparent');\r\n        this._chartLine.setAttribute('stroke', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('stroke', val ? this._color : 'transparent');\r\n        this._intersectionLineH.setAttribute('stroke', val ? INTERSECTION_LINES_COLOR : 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        const points = generatePoints(xColumn, yColumn);\r\n        this._chartLine = createSvgElement(\r\n            'polyline',\r\n            { 'stroke-linejoin': 'round', 'vector-effect': 'non-scaling-stroke', points, stroke: color },\r\n            'chart-line'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polyline',\r\n            { 'stroke-linejoin': 'round', 'vector-effect': 'non-scaling-stroke', points, stroke: color },\r\n            'map-line'\r\n        );\r\n\r\n        const intersectionLineV = createSvgElement(\r\n            'line',\r\n            { x1: 0, x2: 0, y0: 0, y1: 1, 'vector-effect': 'non-scaling-stroke', stroke: INTERSECTION_LINES_COLOR },\r\n            'intersection-line'\r\n        );\r\n\r\n        this._intersectionLineH = createSvgElement(\r\n            'line',\r\n            { x1: -1, x2: 1, y0: 0, y1: 0, 'vector-effect': 'non-scaling-stroke', stroke: INTERSECTION_LINES_COLOR },\r\n            'intersection-line'\r\n        );\r\n\r\n        this._intersectionPoint0 = createSvgElement(\r\n            'circle',\r\n            { r: 5, stroke: color, fill: 'white' },\r\n            'intersection-point'\r\n        );\r\n        const intersectionPoint1 = createSvgElement('g', {}, '');\r\n        const intersectionPoint2 = createSvgElement('g', {}, 'animated');\r\n        const intersectionPoint3 = createSvgElement('g', {}, '');\r\n        const intersectionPoint4 = createSvgElement('g', {}, 'animated');\r\n        this.intersectionPoint = createSvgElement('g', {}, '');\r\n        intersectionPoint1.appendChild(this._intersectionPoint0);\r\n        intersectionPoint2.appendChild(intersectionPoint1);\r\n        intersectionPoint3.appendChild(this._intersectionLineH);\r\n        intersectionPoint3.appendChild(intersectionPoint2);\r\n        intersectionPoint4.appendChild(intersectionPoint3);\r\n        this.intersectionPoint.appendChild(intersectionLineV);\r\n        this.intersectionPoint.appendChild(intersectionPoint4);\r\n\r\n        this.setIntersectionX = (xRel, x0, x1, y0, y1, svgW, svgH) => {\r\n            let x = absToRel(xRel, x0, x1);\r\n            if (x < 0 || x > 1) {\r\n                this.intersectionPoint.style.display = 'none';\r\n                return;\r\n            }\r\n            this.intersectionPoint.style.display = 'initial';\r\n\r\n            const i = findClosestIndex(this._xColumn, xRel);\r\n            const y = this._yColumn[i];\r\n            x = absToRel(this._xColumn[i], this._xColumn[1], this._xColumn[this._xColumn.length - 1]);\r\n\r\n            intersectionPoint1.setAttribute('transform', `scale(${1 / svgW} ${1 / svgH})`);\r\n            intersectionPoint2.setAttribute('transform', `scale(1 ${y1 - y0})`);\r\n            intersectionPoint3.setAttribute('transform', `translate(0 ${y})`);\r\n            intersectionPoint4.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n            this.intersectionPoint.setAttribute(\r\n                'transform',\r\n                `scale(${svgW} ${svgH}) translate(${absToRel(x, x0, x1)} 0) `\r\n            );\r\n        };\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\n\r\nconst generatePoints = (x, y) => {\r\n    // unused x\r\n    const length = x.length - 1;\r\n    let points = `0,0 0,${y[1]} `;\r\n\r\n    for (let i = 2; i <= length; i++) {\r\n        points += `${(i - 1) / length},${y[i - 1]} ${(i - 1) / length},${y[i]} `;\r\n    }\r\n    points += `1,${y[length]} 1,0`;\r\n\r\n    return points;\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._chartLine.setAttribute('stroke', val ? this._color : 'transparent');\r\n        this._chartLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('stroke', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('fill', val ? this._color : 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        const points = generatePoints(xColumn, yColumn);\r\n        this._chartLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', points, stroke: color, fill: color },\r\n            'chart-bar'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', points, stroke: color, fill: color },\r\n            'map-bar'\r\n        );\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n    }\r\n}\r\n","export const tooltipDate = ms => {\r\n    const date = new Date(ms);\r\n    const dayOfWeek = days[date.getDay()];\r\n    const dayOfMonth = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    return `${dayOfWeek}, ${dayOfMonth} ${month} ${year}`;\r\n};\r\n\r\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jule', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './tooltip.css';\r\nimport { tooltipDate } from '../../helpers/date-time';\r\n\r\nconst MARGIN = 10;\r\nconst PADDING = 10;\r\nconst WIDTH = 200;\r\nconst LINE_HEIGHT = 18;\r\n\r\nexport default class Tooltip {\r\n    constructor(parentNode) {\r\n        this.transformY = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.transformX = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.rect = createSvgElement(\r\n            'rect',\r\n            { x: MARGIN, y: MARGIN, rx: 15, ry: 15, width: WIDTH, transform: 'scale(1 -1)' },\r\n            'tt_rect'\r\n        );\r\n        this.text = createSvgElement('text', {\r\n            x: MARGIN + PADDING,\r\n            y: MARGIN + PADDING + LINE_HEIGHT,\r\n            transform: 'scale(1 -1)'\r\n        });\r\n        this.transformY.appendChild(this.transformX);\r\n        this.transformX.appendChild(this.rect);\r\n        this.transformX.appendChild(this.text);\r\n        parentNode.appendChild(this.transformY);\r\n    }\r\n\r\n    resize() {\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n        this.transformY.setAttribute('transform', `translate(0 ${svgBox.height})`);\r\n    }\r\n\r\n    render(xRel, xAbs, data) {\r\n        if (!data || xRel < 0 || xRel > 1) {\r\n            this.transformY.setAttribute('opacity', '0');\r\n            return;\r\n        }\r\n\r\n        this.transformY.setAttribute('opacity', '1');\r\n        this.rect.setAttribute('height', (data.length + 1) * LINE_HEIGHT + 2 * PADDING);\r\n\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n\r\n        while (this.text.childNodes.length) {\r\n            this.text.removeChild(this.text.childNodes[0]);\r\n        }\r\n\r\n        const xText = createSvgElement('tspan', {}, 'tt_bold');\r\n        xText.textContent = tooltipDate(xAbs);\r\n        this.text.appendChild(xText);\r\n\r\n        data.forEach(({ y, color, name }) => {\r\n            const yName = createSvgElement('tspan', { x: MARGIN + PADDING, dy: LINE_HEIGHT });\r\n            yName.textContent = `${name}: `;\r\n            const yVal = createSvgElement(\r\n                'tspan',\r\n                { fill: color, 'text-anchor': 'end', x: MARGIN + WIDTH - PADDING },\r\n                'tt_bold'\r\n            );\r\n            yVal.textContent = (+y).toFixed(2);\r\n            this.text.appendChild(yName);\r\n            this.text.appendChild(yVal);\r\n        });\r\n\r\n        if (xRel < 0.5) {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width} 0)`);\r\n        } else {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width - 2 * MARGIN - WIDTH} 0)`);\r\n        }\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './grid.css';\r\nimport { absToRel } from '../../helpers/utils';\r\n\r\nconst ROW_HEIGHT = 18 * 10;\r\nconst COL_WIDTH = 18 * 10;\r\n\r\nexport default class Grid {\r\n    constructor(parentNode) {\r\n        this.node = createSvgElement('g', {});\r\n        this.transform = createSvgElement('g', {}, 'grid_wrapper');\r\n\r\n        parentNode.appendChild(this.node);\r\n        this.node.appendChild(this.transform);\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        const { width, height } = this.node.parentNode.getBoundingClientRect();\r\n        this.node.setAttribute('transform', `scale(${width} ${height})`);\r\n    }\r\n\r\n    render(x0, x1, y0, y1) {\r\n        const { height, width } = this.node.parentNode.getBoundingClientRect();\r\n\r\n        const countV = height / ROW_HEIGHT;\r\n        const countH = width / COL_WIDTH;\r\n\r\n        let i = 0;\r\n        while ((y1 - y0) / sdf[i] < countV) i++;\r\n        const yStep = sdf[i];\r\n        let j = 0;\r\n        while ((x1 - x0) / sdf[j] < countH) j++;\r\n        const xStep = sdf[j];\r\n\r\n        this.transform.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n\r\n        while (this.transform.childNodes.length) {\r\n            this.transform.removeChild(this.transform.childNodes[0]);\r\n        }\r\n\r\n        i = Math.ceil(y0 / yStep);\r\n        let yCur = i * yStep;\r\n\r\n        while (yCur <= y1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                { x1: 0, x2: 1, y1: yCur, y2: yCur, 'vector-effect': 'non-scaling-stroke' },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            yCur += yStep;\r\n        }\r\n\r\n        j = Math.ceil(x0 / xStep);\r\n        let xCur = j * xStep;\r\n\r\n        while (xCur <= x1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                {\r\n                    y1: y0,\r\n                    y2: y1,\r\n                    x1: absToRel(xCur, x0, x1),\r\n                    x2: absToRel(xCur, x0, x1),\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            xCur += xStep;\r\n        }\r\n    }\r\n}\r\n\r\nconst sdf = [\r\n    100000000,\r\n    50000000,\r\n    20000000,\r\n    10000000,\r\n    5000000,\r\n    2000000,\r\n    1000000,\r\n    500000,\r\n    200000,\r\n    100000,\r\n    50000,\r\n    20000,\r\n    10000,\r\n    5000,\r\n    2000,\r\n    1000,\r\n    500,\r\n    200,\r\n    100,\r\n    50,\r\n    20,\r\n    10,\r\n    5,\r\n    2,\r\n    1,\r\n    0.5,\r\n    0.2,\r\n    0.1,\r\n    0.05,\r\n    0.02,\r\n    0.01\r\n];\r\n","import createCheckBox from '../check-box/check-box';\r\nimport Line from './line';\r\nimport Bars from './bars';\r\nimport Area from './area';\r\nimport { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './chart.css';\r\nimport { absToRel, boundBy, calcYBounds, findClosestIndex, getColumns, minmax } from '../../helpers/utils';\r\nimport { addDragAndDropListeners, addListener, removeListener } from '../../helpers/event-listeners';\r\nimport createMap from '../map/map';\r\nimport Tooltip from '../tooltip/tooltip';\r\nimport Grid from '../grid/grid';\r\n\r\nconst typeToConstructor = {\r\n    line: Line,\r\n    bar: Bars,\r\n    area: Line\r\n};\r\n\r\nconst MIN_WIN_WIDTH = 0.05;\r\n\r\nexport default (data, title) => {\r\n    const chartSvg = createSvgElement('svg', {}, 'ctr_chart');\r\n\r\n    const { colors, names, types, columns } = data;\r\n\r\n    const { xColumn, yColumns, keys } = getColumns(types, columns);\r\n\r\n    let x0 = 0;\r\n    let x1 = 1;\r\n    let y0 = 0;\r\n    let y1 = 1;\r\n    let xMouse = null;\r\n    let mouseXFixed = false;\r\n\r\n    let keyToYBound = {};\r\n    const getYBounds = key => keyToYBound[key] || (keyToYBound[key] = calcYBounds(xColumn, yColumns[key], x0, x1));\r\n    const resetYBoundsCash = () => (keyToYBound = {});\r\n\r\n    const chartViewportTransform = createSvgElement('g');\r\n    const chartAreaXTransform = createSvgElement('g');\r\n\r\n    const wrapper = createElement('crt_wrapper');\r\n    const controls = createElement('crt_controls');\r\n    const header = createElement();\r\n    header.textContent = title;\r\n\r\n    let tooltip, grid;\r\n\r\n    wrapper.appendChild(header);\r\n    wrapper.appendChild(chartSvg);\r\n    chartSvg.appendChild(chartViewportTransform);\r\n    chartViewportTransform.appendChild(chartAreaXTransform);\r\n    wrapper.appendChild(controls);\r\n\r\n    const init = () => {\r\n        const visualisation = keys\r\n            .map(key => ({ [key]: new typeToConstructor[types[key]](key, xColumn, yColumns[key], colors[key]) }))\r\n            .reduce((obj, line) => Object.assign(obj, line), {});\r\n\r\n        const {\r\n            mapNode,\r\n            setMapViewport,\r\n            appendBeforeOverlay,\r\n            setMapWindow,\r\n            windowLeftEdge,\r\n            windowRightEdge,\r\n            mapWindow\r\n        } = createMap();\r\n\r\n        const updateIntersections = xRel => {\r\n            const { width, height } = chartSvg.getBoundingClientRect();\r\n            if (xRel !== undefined) xMouse = xRel;\r\n\r\n            const i = findClosestIndex(xColumn, xMouse);\r\n\r\n            const tooltipData =\r\n                xMouse &&\r\n                keys\r\n                    .filter(key => visualisation[key].visible)\r\n                    .map(key => ({\r\n                        y: yColumns[key][i],\r\n                        color: colors[key],\r\n                        name: names[key]\r\n                    }));\r\n            tooltip.render(absToRel(xMouse, x0, x1), xColumn[i], tooltipData);\r\n\r\n            keys.forEach(\r\n                key =>\r\n                    visualisation[key].setIntersectionX &&\r\n                    visualisation[key].setIntersectionX(xMouse, x0, x1, y0, y1, width, height)\r\n            );\r\n        };\r\n\r\n        const updateYArea = () => {\r\n            const { min, max } = minmax(keys.filter(key => visualisation[key].visible).map(key => getYBounds(key)));\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].yChartArea = [min, max];\r\n                visualisation[key].yMapArea = [min, max];\r\n            });\r\n\r\n            y0 = min;\r\n            y1 = max;\r\n            grid.render(x0, x1, y0, y1);\r\n            updateIntersections();\r\n        };\r\n\r\n        const deepUpdateYArea = () => {\r\n            resetYBoundsCash();\r\n            updateYArea();\r\n        };\r\n\r\n        const setUserViewport = (w, h) => {\r\n            chartViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n        };\r\n\r\n        const setXChartArea = (x0, x1) => {\r\n            chartAreaXTransform.setAttribute(\r\n                'transform',\r\n                `\r\n                    scale(${1 / (x1 - x0)} 1) \r\n                    translate(${-x0} 0)\r\n                `\r\n            );\r\n            deepUpdateYArea();\r\n        };\r\n\r\n        const updateXBounds = (a, b) => {\r\n            x0 = a;\r\n            x1 = b;\r\n            setXChartArea(x0, x1);\r\n            setMapWindow(x0, x1);\r\n            updateIntersections();\r\n        };\r\n\r\n        const mount = () => {\r\n            grid = new Grid(chartSvg);\r\n            tooltip = new Tooltip(chartSvg);\r\n\r\n            wrapper.insertBefore(mapNode, controls);\r\n\r\n            keys.forEach(key => {\r\n                chartAreaXTransform.appendChild(visualisation[key].node);\r\n\r\n                visualisation[key].intersectionPoint &&\r\n                    chartSvg.insertBefore(visualisation[key].intersectionPoint, tooltip.transformY);\r\n\r\n                appendBeforeOverlay(visualisation[key].mapNode);\r\n                controls.appendChild(\r\n                    createCheckBox(colors[key], names[key], value => {\r\n                        visualisation[key].visible = value;\r\n                        updateYArea();\r\n                    })\r\n                );\r\n            });\r\n        };\r\n\r\n        const onResize = () => {\r\n            const { width: svgWidth, height: svgHeight } = chartSvg.getBoundingClientRect();\r\n            const { width: mapWidth, height: mapHeight } = mapNode.getBoundingClientRect();\r\n            setUserViewport(svgWidth, svgHeight);\r\n            setMapViewport(mapWidth, mapHeight);\r\n\r\n            grid.resize();\r\n            tooltip.resize();\r\n            setMapWindow(x0, x1);\r\n            updateIntersections();\r\n        };\r\n\r\n        mount();\r\n        deepUpdateYArea();\r\n        onResize();\r\n        addListener(window, 'resize', onResize);\r\n\r\n        const getMapX = x => {\r\n            const rect = mapNode.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        const getChartX = x => {\r\n            const rect = chartSvg.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        addDragAndDropListeners(mapWindow, coords => {\r\n            const width = x1 - x0;\r\n            const left = getMapX(coords.x);\r\n            const right = left + width;\r\n            updateXBounds(boundBy(left, 0, 1 - width), boundBy(right, width, 1));\r\n        });\r\n        addDragAndDropListeners(windowLeftEdge, coords => {\r\n            const left = getMapX(coords.x + 10);\r\n            updateXBounds(boundBy(left, 0, x1 - MIN_WIN_WIDTH), x1);\r\n        });\r\n        addDragAndDropListeners(windowRightEdge, coords => {\r\n            const right = getMapX(coords.x);\r\n            updateXBounds(x0, boundBy(right, x0 + MIN_WIN_WIDTH, 1));\r\n        });\r\n\r\n        const onMouseMove = e => updateIntersections(x0 + (x1 - x0) * getChartX(e.clientX));\r\n        addListener(chartSvg, 'mousemove', onMouseMove);\r\n        addListener(chartSvg, 'touchmove', e => updateIntersections(x0 + (x1 - x0) * getChartX(e.touches[0].clientX)));\r\n        addListener(chartSvg, 'mousedown', () => {\r\n            if (mouseXFixed) {\r\n                addListener(chartSvg, 'mousemove', onMouseMove);\r\n            } else {\r\n                removeListener(chartSvg, 'mousemove', onMouseMove);\r\n            }\r\n            mouseXFixed = !mouseXFixed;\r\n        });\r\n    };\r\n\r\n    return {\r\n        node: wrapper,\r\n        init\r\n    };\r\n};\r\n","import { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './map.css';\r\n\r\nexport default () => {\r\n    const mapSvg = createSvgElement('svg', {}, 'map-chart');\r\n    const map = createElement('map-container');\r\n    const svgWrapper = createElement('map-svg-wrapper');\r\n    const mapViewportTransform = createSvgElement('g');\r\n\r\n    svgWrapper.appendChild(mapSvg);\r\n    map.appendChild(svgWrapper);\r\n    mapSvg.appendChild(mapViewportTransform);\r\n\r\n    const mapOverlayLeft = createSvgElement('rect', { x: 0, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapOverlayRight = createSvgElement('rect', { x: 1, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapWindow = createElement('map-window', 'div');\r\n    const windowLeftEdge = createElement('map-left-edge', 'div');\r\n    const windowRightEdge = createElement('map-right-edge', 'div');\r\n\r\n    mapViewportTransform.append(mapOverlayLeft);\r\n    mapViewportTransform.append(mapOverlayRight);\r\n    map.append(mapWindow);\r\n    map.append(windowLeftEdge);\r\n    map.append(windowRightEdge);\r\n\r\n    const setMapViewport = (w, h) => {\r\n        mapViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n    };\r\n\r\n    const appendBeforeOverlay = node => {\r\n        mapViewportTransform.insertBefore(node, mapOverlayLeft);\r\n    };\r\n\r\n    const setMapWindow = (x0, x1) => {\r\n        mapOverlayLeft.setAttribute('width', x0);\r\n        mapOverlayRight.setAttribute('x', x1);\r\n        mapOverlayRight.setAttribute('width', 1 - x1);\r\n\r\n        const mapWidth = map.getBoundingClientRect().width;\r\n        mapWindow.style.left = `${x0 * mapWidth}px`;\r\n        mapWindow.style.width = `${(x1 - x0) * mapWidth}px`;\r\n        windowLeftEdge.style.left = `${x0 * mapWidth - 10}px`;\r\n        windowRightEdge.style.left = `${x1 * mapWidth - 1}px`;\r\n    };\r\n\r\n    return {\r\n        mapNode: map,\r\n        appendBeforeOverlay,\r\n        setMapViewport,\r\n        setMapWindow,\r\n        windowLeftEdge,\r\n        windowRightEdge,\r\n        mapWindow\r\n    };\r\n};\r\n","import './switch-button.css';\r\nimport { addListener } from '../../helpers/event-listeners';\r\n\r\nconst nightLabel = 'Switch to Day Mode';\r\nconst dayLabel = 'Switch to Night Mode';\r\n\r\nexport default () => {\r\n    const btn = document.createElement('div');\r\n    btn.id = 'btn-switch';\r\n\r\n    let night = false;\r\n    btn.textContent = dayLabel;\r\n\r\n    const switchToNight = () => {\r\n        btn.textContent = nightLabel;\r\n        document.body.className = 'night';\r\n        night = true;\r\n    };\r\n\r\n    const switchToDay = () => {\r\n        btn.textContent = dayLabel;\r\n        document.body.className = '';\r\n        night = false;\r\n    };\r\n\r\n    addListener(btn, 'click', () => {\r\n        if (night) {\r\n            switchToDay();\r\n        } else {\r\n            switchToNight();\r\n        }\r\n    });\r\n\r\n    return btn;\r\n};\r\n","import './global.css';\r\nimport createChart from './components/chart/chart';\r\nimport createFooter from './components/footer/footer';\r\nimport data1 from './data/1/overview';\r\nimport data2 from './data/2/overview';\r\nimport data3 from './data/3/overview';\r\nimport data4 from './data/4/overview';\r\nimport data5 from './data/5/overview';\r\nimport { createElement } from './helpers/elements';\r\n\r\nconst charts = createElement();\r\nconst root = document.getElementById('root');\r\nroot.appendChild(charts);\r\nroot.appendChild(createFooter());\r\n\r\n[data1].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #1');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data2].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #2');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data3].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #3');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data4].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #4');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data5].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #5');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n","import createSwitchButton from '../switch-button/switch-button';\r\nimport './footer.css';\r\n\r\nexport default () => {\r\n    const footer = document.createElement('div');\r\n    footer.id = 'footer';\r\n    footer.appendChild(createSwitchButton());\r\n    return footer;\r\n};\r\n"],"sourceRoot":""}