{"version":3,"sources":["components/icons/check-icon.svg","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","helpers/elements.js","helpers/event-listeners.js","components/check-box/check-box.js","components/icons/checkbox-icon.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","helpers/utils.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","components/chart/line.js","components/chart/bars.js","helpers/date-time.js","components/tooltip/tooltip.js","components/grid/grid.js","components/chart/chart.js","components/map/map.js","components/switch-button/switch-button.js","index.js","components/footer/footer.js"],"names":["module","exports","__webpack_require__","p","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_setPrototypeOf","o","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","isNativeReflectConstruct","a","push","apply","instance","Function","bind","arguments","createElement","className","tag","length","undefined","node","document","createSvgElement","attrs","createElementNS","baseVal","keys","forEach","setAttribute","addListener","element","event","listener","addEventListener","removeListener","removeEventListener","addDragAndDropListeners","getTouchCoords","x","touches","clientX","y","clientY","offset","offsetX","offsetY","getMouseOffset","onMouseMove","buttons","body","onMouseUp","mouseCoords","getMouseCoords","cornerCoords","box","getBoundingClientRect","touchCoords","left","top","getTouchOffset","onTouchMove","onTouchEnd","check_box_check_box","color","text","onChange","checked","wrapper","mark","style","label","textContent","appendChild","img","icon","createCheckIcon","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_classCallCheck","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","minmax","min","max","_ref","y0","y1","Math","boundBy","right","relToAbs","rel","b","absToRel","abs","calcYBounds","xData","yData","x0Rel","x1Rel","type","j","x0","x1","k","el","findClosestIndex","xRel","getColumns","types","columns","xKey","filter","xColumn","column","yColumns","reduce","source","ownKeys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","_objectSpread","colorToGrb","c","replace","r","parseInt","g","slice","sdf","split","INTERSECTION_LINES_COLOR","generatePoints","area","xMin","dx","points","Line","yColumn","_this","this","_visible","_color","_xColumn","_yColumn","_chartLine","stroke-linejoin","vector-effect","stroke","fill","_mapLine","intersectionLineV","x2","_intersectionLineH","_intersectionPoint0","intersectionPoint1","intersectionPoint2","intersectionPoint3","intersectionPoint4","intersectionPoint","setIntersectionX","svgW","svgH","display","mapNode","val","_ref2","_ref4","_ref3","yBase","yColumnBase","_yColumnBase","stroke-width","_selectedBar","xMouse","step","ceil","c1","c2","_colorToGrb","r1","g1","b1","_colorToGrb2","rgbToString","mixColors","days","months","MARGIN","PADDING","WIDTH","LINE_HEIGHT","Tooltip","parentNode","transformY","transformX","rect","rx","ry","width","transform","svgBox","height","xAbs","data","childNodes","removeChild","xText","ms","date","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","year","getFullYear","tooltipDate","name","yName","dy","yVal","text-anchor","toFixed","Grid","resize","_this$node$parentNode","_this$node$parentNode2","countV","countH","yStep","xStep","yCur","line","y2","xCur","typeToConstructor","_len","_key","bar","_len2","_key2","Bars","_len3","_key3","chart_chart","title","tooltip","grid","chartSvg","colors","names","stacked","percentage","_getColumns","y_scaled","mouseXFixed","keyToYBound","keyToGlobalYBound","chartViewportTransform","chartAreaXTransform","controls","header","init","yColumnSum","visualisation","map","res","assign","_createMap","mapSvg","svgWrapper","mapViewportTransform","mapOverlayLeft","mapOverlayRight","mapWindow","windowLeftEdge","windowRightEdge","append","appendBeforeOverlay","insertBefore","setMapViewport","w","h","setMapWindow","mapWidth","createMap","updateIntersections","_chartSvg$getBounding","tooltipData","visible","render","updateYArea","_minmax","getYBounds","_minmax2","getGlobalYBounds","globalMin","globalMax","yChartArea","yMapArea","deepUpdateYArea","updateXBounds","setXChartArea","onResize","_chartSvg$getBounding2","svgWidth","svgHeight","_mapNode$getBoundingC","mapHeight","reverse","createCheckBox","window","getMapX","getChartX","coords","switch_button_switch_button","btn","id","night","charts","root","getElementById","footer","createSwitchButton","createFooter","data1","chartData","_createChart","createChart","data2","_createChart2","data3","_createChart3","data4","_createChart4","data5","_createChart5"],"mappings":"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","file":"static/js/main.ea24de62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-icon.cc4bfc9f.svg\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export const createElement = (className, tag = 'div') => {\r\n    const node = document.createElement(tag);\r\n    if (className) node.className = className;\r\n    return node;\r\n};\r\n\r\nexport const createSvgElement = (tag, attrs, className) => {\r\n    const node = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    if (className) {\r\n        node.className.baseVal = className;\r\n    }\r\n    if (attrs) {\r\n        Object.keys(attrs).forEach(key => {\r\n            node.setAttribute(key, attrs[key]);\r\n        });\r\n    }\r\n    return node;\r\n};\r\n","export const addListener = (element, event, listener) => {\r\n    element.addEventListener(event, listener, false);\r\n};\r\n\r\nexport const removeListener = (element, event, listener) => {\r\n    element.removeEventListener(event, listener);\r\n};\r\n\r\nexport const addDragAndDropListeners = (element, listener) => {\r\n    const getMouseCoords = e => ({ x: e.clientX, y: e.clientY });\r\n    const getTouchCoords = e => ({ x: e.touches[0].clientX, y: e.touches[0].clientY });\r\n    const getMouseOffset = e => ({ x: e.offsetX, y: e.offsetY });\r\n    const getTouchOffset = e => {\r\n        const box = element.getBoundingClientRect();\r\n        const touchCoords = getTouchCoords(e);\r\n        return {\r\n            x: touchCoords.x - box.left,\r\n            y: touchCoords.y - box.top\r\n        };\r\n    };\r\n\r\n    addListener(element, 'mousedown', e => {\r\n        const offset = getMouseOffset(e);\r\n\r\n        const onMouseMove = e => {\r\n            if (e.buttons !== 1) {\r\n                removeListener(document.body, 'mousemove', onMouseMove);\r\n                removeListener(document.body, 'mouseup', onMouseUp);\r\n            } else {\r\n                const mouseCoords = getMouseCoords(e);\r\n                const cornerCoords = { x: mouseCoords.x - offset.x, y: mouseCoords.y + offset.y };\r\n                listener(cornerCoords);\r\n            }\r\n        };\r\n\r\n        function onMouseUp() {\r\n            removeListener(document.body, 'mousemove', onMouseMove);\r\n            removeListener(document.body, 'mouseup', onMouseUp);\r\n        }\r\n\r\n        addListener(document.body, 'mousemove', onMouseMove);\r\n        addListener(document.body, 'mouseup', onMouseUp);\r\n    });\r\n\r\n    addListener(element, 'touchstart', e => {\r\n        const offset = getTouchOffset(e);\r\n\r\n        const onTouchMove = e => {\r\n            const touchCoords = getTouchCoords(e);\r\n            const cornerCoords = { x: touchCoords.x - offset.x, y: touchCoords.y + offset.y };\r\n            listener(cornerCoords);\r\n        };\r\n\r\n        function onTouchEnd() {\r\n            removeListener(document.body, 'touchmove', onTouchMove);\r\n            removeListener(document.body, 'touchend', onTouchEnd);\r\n            removeListener(document.body, 'touchcancel', onTouchEnd);\r\n        }\r\n\r\n        addListener(document.body, 'touchmove', onTouchMove);\r\n        addListener(document.body, 'touchend', onTouchEnd);\r\n        addListener(document.body, 'touchcancel', onTouchEnd);\r\n    });\r\n};\r\n","import './check-box.css';\r\nimport { createElement } from '../../helpers/elements';\r\nimport { addListener } from '../../helpers/event-listeners';\r\nimport createCheckIcon from '../icons/checkbox-icon';\r\n\r\nconst uncheckedMark = 'cb_unchecked-mark';\r\nconst checkedMark = 'cb_checked-mark';\r\n\r\nexport default (color, text, onChange) => {\r\n    let checked = true;\r\n\r\n    const wrapper = createElement('cb_wrapper');\r\n\r\n    const mark = createElement(checkedMark);\r\n    mark.style.color = color;\r\n\r\n    const label = createElement('cb_label');\r\n    label.textContent = text;\r\n\r\n    wrapper.appendChild(mark);\r\n    wrapper.appendChild(label);\r\n\r\n    mark.appendChild(createCheckIcon());\r\n\r\n    addListener(wrapper, 'click', () => {\r\n        checked = !checked;\r\n        onChange && onChange(checked);\r\n        mark.className = checked ? checkedMark : uncheckedMark;\r\n    });\r\n\r\n    return wrapper;\r\n};\r\n","import icon from './check-icon.svg';\r\nimport { createElement } from '../../helpers/elements';\r\n\r\nexport default () => {\r\n    const img = createElement('icon', 'img');\r\n    img.setAttribute('src', icon);\r\n    return img;\r\n};\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export const minmax = arr => {\r\n    let min = null,\r\n        max = null;\r\n\r\n    arr.forEach(({ y0, y1 }) => {\r\n        min = min === null ? y0 : Math.min(min, y0);\r\n        max = max === null ? y1 : Math.max(max, y1);\r\n    });\r\n\r\n    return { min, max };\r\n};\r\n\r\nexport const boundBy = (x, left, right) => {\r\n    x = left === undefined ? x : Math.max(left, x);\r\n    x = right === undefined ? x : Math.min(right, x);\r\n    return x;\r\n};\r\n\r\nexport const relToAbs = (rel, a, b) => a + rel * (b - a);\r\n\r\nexport const absToRel = (abs, a, b) => (abs - a) / (b - a);\r\n\r\nexport const calcYBounds = (xData, yData, x0Rel, x1Rel, type) => {\r\n    let i = 1;\r\n    let j = xData.length - 1;\r\n\r\n    const x0 = relToAbs(x0Rel, xData[1], xData[j]);\r\n    const x1 = relToAbs(x1Rel, xData[1], xData[j]);\r\n\r\n    while (xData[i] < x0) i++;\r\n    while (xData[j] > x1) j--;\r\n\r\n    let min = yData[i],\r\n        max = yData[i];\r\n\r\n    for (let k = i + 1; k <= j; k++) {\r\n        const el = yData[k];\r\n        min = Math.min(min, el);\r\n        max = Math.max(max, el);\r\n    }\r\n\r\n    return { y0: type === 'line' ? min : 0, y1: max };\r\n};\r\n\r\nexport const findClosestIndex = (xData, xRel) => {\r\n    if (!xRel) return null;\r\n    let x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    i = (xData[i - 1] + xData[i]) / 2 < x ? i : i - 1;\r\n\r\n    return i;\r\n};\r\n\r\nexport const interpolate = (xData, yData, xRel) => {\r\n    if (!xRel) return null;\r\n    const x = relToAbs(xRel, xData[1], xData[xData.length - 1]);\r\n    let i = 1;\r\n    while (xData[i] < x) i++;\r\n    const y = yData[i - 1] + ((x - xData[i - 1]) * (yData[i] - yData[i - 1])) / (xData[i] - xData[i - 1]);\r\n    return y;\r\n};\r\n\r\nexport const getColumns = (types, columns) => {\r\n    const xKey = Object.keys(types).filter(key => types[key] === 'x')[0];\r\n    const xColumn = columns.filter(column => column[0] === xKey)[0];\r\n\r\n    const keys = Object.keys(types).filter(key => types[key] !== 'x');\r\n    const yColumns = keys.reduce((obj, key) => ({ ...obj, [key]: columns.filter(column => column[0] === key)[0] }), {});\r\n\r\n    return { xColumn, yColumns, keys };\r\n};\r\n\r\nexport const arrSum = (a, b) => {\r\n    if (!a) return [...b];\r\n    return a.map((el, i) => el + b[i]);\r\n};\r\n\r\nconst colorToGrb = c => {\r\n    c = c.replace(/ /g, '');\r\n    if (c[0] === '#') {\r\n        if (c.length === 4) {\r\n            // #rgb\r\n            return {\r\n                r: parseInt(c[1] + c[1], 16),\r\n                g: parseInt(c[2] + c[2], 16),\r\n                b: parseInt(c[3] + c[3], 16)\r\n            };\r\n        } else {\r\n            // #rrggbb\r\n            return {\r\n                r: parseInt(c.slice(1, 3), 16),\r\n                g: parseInt(c.slice(3, 5), 16),\r\n                b: parseInt(c.slice(5, 7), 16)\r\n            };\r\n        }\r\n    } else {\r\n        // rgb(r,g,b)\r\n        const sdf = c.slice(4, -1).split(',');\r\n        return {\r\n            r: +sdf[0],\r\n            g: +sdf[1],\r\n            b: +sdf[2]\r\n        };\r\n    }\r\n};\r\n\r\nconst rgbToString = ({ r, g, b }) => `rgb(${r}, ${g}, ${b})`;\r\n\r\nexport const mixColors = (c1, c2) => {\r\n    const { r: r1, g: g1, b: b1 } = colorToGrb(c1);\r\n    const { r: r2, g: g2, b: b2 } = colorToGrb(c2);\r\n    return rgbToString({ r: (r1 + r2) / 2, g: (g1 + g2) / 2, b: (b1 + b2) / 2 });\r\n};\r\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import { createSvgElement } from '../../helpers/elements';\r\nimport { absToRel, findClosestIndex } from '../../helpers/utils';\r\n\r\nconst INTERSECTION_LINES_COLOR = 'gray';\r\n\r\nconst generatePoints = (area, x, y) => {\r\n    const length = x.length;\r\n\r\n    let xMin = x[1],\r\n        dx = x[length - 1] - xMin;\r\n    let points = `0,${y[1]} `;\r\n\r\n    for (let i = 2; i < length; i++) {\r\n        points += `${(x[i] - xMin) / dx},${y[i]} `;\r\n    }\r\n\r\n    return area ? `0,0 ${points} 1,0` : points;\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._intersectionPoint0.setAttribute('opacity', +val);\r\n        this._chartLine.setAttribute('opacity', +val);\r\n        this._mapLine.setAttribute('opacity', +val);\r\n        this._intersectionLineH.setAttribute('stroke', val ? INTERSECTION_LINES_COLOR : 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(area, keys, xColumn, yColumn, color) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n\r\n        const points = generatePoints(area, xColumn, yColumn);\r\n        this._chartLine = createSvgElement(\r\n            area ? 'polygon' : 'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'chart-line'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polyline',\r\n            {\r\n                'stroke-linejoin': 'round',\r\n                'vector-effect': 'non-scaling-stroke',\r\n                points,\r\n                stroke: area ? 'none' : color,\r\n                fill: area ? color : 'none'\r\n            },\r\n            'map-line'\r\n        );\r\n\r\n        const intersectionLineV = createSvgElement(\r\n            'line',\r\n            { x1: 0, x2: 0, y0: 0, y1: 1, 'vector-effect': 'non-scaling-stroke', stroke: INTERSECTION_LINES_COLOR },\r\n            'intersection-line'\r\n        );\r\n\r\n        this._intersectionLineH = createSvgElement(\r\n            'line',\r\n            { x1: -1, x2: 1, y0: 0, y1: 0, 'vector-effect': 'non-scaling-stroke', stroke: INTERSECTION_LINES_COLOR },\r\n            'intersection-line'\r\n        );\r\n\r\n        this._intersectionPoint0 = createSvgElement(\r\n            'circle',\r\n            { r: 5, stroke: color, fill: 'white' },\r\n            'intersection-point'\r\n        );\r\n        const intersectionPoint1 = createSvgElement('g', {}, '');\r\n        const intersectionPoint2 = createSvgElement('g', {}, 'animated');\r\n        const intersectionPoint3 = createSvgElement('g', {}, '');\r\n        const intersectionPoint4 = createSvgElement('g', {}, 'animated');\r\n        this.intersectionPoint = createSvgElement('g', {}, '');\r\n        intersectionPoint1.appendChild(this._intersectionPoint0);\r\n        intersectionPoint2.appendChild(intersectionPoint1);\r\n        intersectionPoint3.appendChild(this._intersectionLineH);\r\n        intersectionPoint3.appendChild(intersectionPoint2);\r\n        intersectionPoint4.appendChild(intersectionPoint3);\r\n        this.intersectionPoint.appendChild(intersectionLineV);\r\n        this.intersectionPoint.appendChild(intersectionPoint4);\r\n\r\n        this.setIntersectionX = (xRel, x0, x1, y0, y1, svgW, svgH) => {\r\n            let x = absToRel(xRel, x0, x1);\r\n            if (x < 0 || x > 1) {\r\n                this.intersectionPoint.style.display = 'none';\r\n                return;\r\n            }\r\n            this.intersectionPoint.style.display = 'initial';\r\n\r\n            const i = findClosestIndex(this._xColumn, xRel);\r\n            const y = this._yColumn[i];\r\n            x = absToRel(this._xColumn[i], this._xColumn[1], this._xColumn[this._xColumn.length - 1]);\r\n\r\n            intersectionPoint1.setAttribute('transform', `scale(${1 / svgW} ${1 / svgH})`);\r\n            intersectionPoint2.setAttribute('transform', `scale(1 ${y1 - y0})`);\r\n            intersectionPoint3.setAttribute('transform', `translate(0 ${y})`);\r\n            intersectionPoint4.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n            this.intersectionPoint.setAttribute(\r\n                'transform',\r\n                `scale(${svgW} ${svgH}) translate(${absToRel(x, x0, x1)} 0) `\r\n            );\r\n        };\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport { mixColors } from '../../helpers/utils';\r\n\r\nconst generatePoints = (x, y, yBase) => {\r\n    // unused x\r\n    const length = x.length - 1;\r\n\r\n    if (!yBase) {\r\n        let points = `0,0 0,${y[1]} `;\r\n\r\n        for (let i = 2; i <= length; i++) {\r\n            points += `${(i - 1) / length},${y[i - 1]} ${(i - 1) / length},${y[i]} `;\r\n        }\r\n        points += `1,${y[length]} 1,0`;\r\n\r\n        return points;\r\n    } else {\r\n        let points = `0,0 0,${yBase[1] + y[1]} `;\r\n\r\n        for (let i = 2; i <= length; i++) {\r\n            points += `${(i - 1) / length},${yBase[i - 1] + y[i - 1]} ${(i - 1) / length},${yBase[i] + y[i]} `;\r\n        }\r\n        points += `1,${yBase[length] + y[length]} 1,0`;\r\n\r\n        return points;\r\n    }\r\n};\r\n\r\nexport default class Line {\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(val) {\r\n        this._visible = val;\r\n        this._chartLine.setAttribute('fill', val ? this._color : 'transparent');\r\n        this._mapLine.setAttribute('fill', val ? this._color : 'transparent');\r\n    }\r\n\r\n    set yMapArea([y0, y1]) {\r\n        this.mapNode.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    set yChartArea([y0, y1]) {\r\n        this.node.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n    }\r\n\r\n    constructor(keys, xColumn, yColumn, color, yColumnBase) {\r\n        this._visible = true;\r\n        this._color = color;\r\n        this._xColumn = xColumn;\r\n        this._yColumn = yColumn;\r\n        this._yColumnBase = yColumnBase;\r\n\r\n        const points = generatePoints(xColumn, yColumn, yColumnBase);\r\n        this._chartLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', points, 'stroke-width': 0 },\r\n            'chart-bar'\r\n        );\r\n        this._selectedBar = createSvgElement(\r\n            'rect',\r\n            { 'vector-effect': 'non-scaling-stroke', points: '', 'stroke-width': 0 },\r\n            'chart-bar'\r\n        );\r\n        this._mapLine = createSvgElement(\r\n            'polygon',\r\n            { 'vector-effect': 'non-scaling-stroke', points, 'stroke-width': 0, fill: color },\r\n            'map-bar'\r\n        );\r\n\r\n        this.mapNode = createSvgElement('g', {}, 'animated');\r\n        this.mapNode.appendChild(this._mapLine);\r\n\r\n        this.node = createSvgElement('g', {}, 'animated');\r\n        this.node.appendChild(this._chartLine);\r\n        this.node.appendChild(this._selectedBar);\r\n    }\r\n\r\n    render(xMouse) {\r\n        if (!xMouse) {\r\n            this._chartLine.setAttribute('fill', this._visible ? this._color : 'transparent');\r\n            this._selectedBar.setAttribute('fill', 'transparent');\r\n            return;\r\n        }\r\n\r\n        const step = 1 / (this._xColumn.length - 1);\r\n        const i = Math.ceil(xMouse / step);\r\n        this._selectedBar.setAttribute('x', (i - 1) * step);\r\n        this._selectedBar.setAttribute('y', this._yColumnBase ? this._yColumnBase[i] : 0);\r\n        this._selectedBar.setAttribute('width', step);\r\n        this._selectedBar.setAttribute('height', this._yColumn[i]);\r\n        this._selectedBar.setAttribute('fill', this._color);\r\n\r\n        this._chartLine.setAttribute('fill', mixColors(this._color, '#fff'));\r\n    }\r\n}\r\n","export const tooltipDate = ms => {\r\n    const date = new Date(ms);\r\n    const dayOfWeek = days[date.getDay()];\r\n    const dayOfMonth = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    return `${dayOfWeek}, ${dayOfMonth} ${month} ${year}`;\r\n};\r\n\r\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jule', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './tooltip.css';\r\nimport { tooltipDate } from '../../helpers/date-time';\r\n\r\nconst MARGIN = 20;\r\nconst PADDING = 10;\r\nconst WIDTH = 180;\r\nconst LINE_HEIGHT = 18;\r\n\r\nexport default class Tooltip {\r\n    constructor(parentNode) {\r\n        this.transformY = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.transformX = createSvgElement('g', {}, 'tt_wrapper');\r\n        this.rect = createSvgElement(\r\n            'rect',\r\n            { x: MARGIN, y: MARGIN, rx: 15, ry: 15, width: WIDTH, transform: 'scale(1 -1)' },\r\n            'tt_rect'\r\n        );\r\n        this.text = createSvgElement('text', {\r\n            x: MARGIN + PADDING,\r\n            y: MARGIN + PADDING + LINE_HEIGHT,\r\n            transform: 'scale(1 -1)'\r\n        });\r\n        this.transformY.appendChild(this.transformX);\r\n        this.transformX.appendChild(this.rect);\r\n        this.transformX.appendChild(this.text);\r\n        parentNode.appendChild(this.transformY);\r\n    }\r\n\r\n    resize() {\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n        this.transformY.setAttribute('transform', `translate(0 ${svgBox.height})`);\r\n    }\r\n\r\n    render(xRel, xAbs, data) {\r\n        if (!data || xRel < 0 || xRel > 1) {\r\n            this.transformY.setAttribute('opacity', '0');\r\n            return;\r\n        }\r\n\r\n        this.transformY.setAttribute('opacity', '1');\r\n        this.rect.setAttribute('height', (data.length + 1) * LINE_HEIGHT + 2 * PADDING);\r\n\r\n        const svgBox = this.transformY.parentNode.getBoundingClientRect();\r\n\r\n        while (this.text.childNodes.length) {\r\n            this.text.removeChild(this.text.childNodes[0]);\r\n        }\r\n\r\n        const xText = createSvgElement('tspan', {}, 'tt_bold');\r\n        xText.textContent = tooltipDate(xAbs);\r\n        this.text.appendChild(xText);\r\n\r\n        data.forEach(({ y, color, name }) => {\r\n            const yName = createSvgElement('tspan', { x: MARGIN + PADDING, dy: LINE_HEIGHT });\r\n            yName.textContent = `${name}: `;\r\n            const yVal = createSvgElement(\r\n                'tspan',\r\n                { fill: color, 'text-anchor': 'end', x: MARGIN + WIDTH - PADDING },\r\n                'tt_bold'\r\n            );\r\n            yVal.textContent = (+y).toFixed(2);\r\n            this.text.appendChild(yName);\r\n            this.text.appendChild(yVal);\r\n        });\r\n\r\n        if (xRel < 0.5) {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width} 0)`);\r\n        } else {\r\n            this.transformX.setAttribute('transform', `translate(${xRel * svgBox.width - 2 * MARGIN - WIDTH} 0)`);\r\n        }\r\n    }\r\n}\r\n","import { createSvgElement } from '../../helpers/elements';\r\nimport './grid.css';\r\nimport { absToRel } from '../../helpers/utils';\r\n\r\nconst ROW_HEIGHT = 18 * 10;\r\nconst COL_WIDTH = 18 * 10;\r\n\r\nexport default class Grid {\r\n    constructor(parentNode) {\r\n        this.node = createSvgElement('g', {});\r\n        this.transform = createSvgElement('g', {}, 'grid_wrapper');\r\n\r\n        parentNode.appendChild(this.node);\r\n        this.node.appendChild(this.transform);\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        const { width, height } = this.node.parentNode.getBoundingClientRect();\r\n        this.node.setAttribute('transform', `scale(${width} ${height})`);\r\n    }\r\n\r\n    render(x0, x1, y0, y1) {\r\n        const { height, width } = this.node.parentNode.getBoundingClientRect();\r\n\r\n        const countV = height / ROW_HEIGHT;\r\n        const countH = width / COL_WIDTH;\r\n\r\n        let i = 0;\r\n        while ((y1 - y0) / sdf[i] < countV) i++;\r\n        const yStep = sdf[i];\r\n        let j = 0;\r\n        while ((x1 - x0) / sdf[j] < countH) j++;\r\n        const xStep = sdf[j];\r\n\r\n        this.transform.setAttribute('transform', `scale(1 ${1 / (y1 - y0)}) translate(0 ${-y0})`);\r\n\r\n        while (this.transform.childNodes.length) {\r\n            this.transform.removeChild(this.transform.childNodes[0]);\r\n        }\r\n\r\n        i = Math.ceil(y0 / yStep);\r\n        let yCur = i * yStep;\r\n\r\n        while (yCur <= y1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                { x1: 0, x2: 1, y1: yCur, y2: yCur, 'vector-effect': 'non-scaling-stroke' },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            yCur += yStep;\r\n        }\r\n\r\n        j = Math.ceil(x0 / xStep);\r\n        let xCur = j * xStep;\r\n\r\n        while (xCur <= x1) {\r\n            const line = createSvgElement(\r\n                'line',\r\n                {\r\n                    y1: y0,\r\n                    y2: y1,\r\n                    x1: absToRel(xCur, x0, x1),\r\n                    x2: absToRel(xCur, x0, x1),\r\n                    'vector-effect': 'non-scaling-stroke'\r\n                },\r\n                'grid_line'\r\n            );\r\n            this.transform.appendChild(line);\r\n\r\n            xCur += xStep;\r\n        }\r\n    }\r\n}\r\n\r\nconst sdf = [\r\n    100000000,\r\n    50000000,\r\n    20000000,\r\n    10000000,\r\n    5000000,\r\n    2000000,\r\n    1000000,\r\n    500000,\r\n    200000,\r\n    100000,\r\n    50000,\r\n    20000,\r\n    10000,\r\n    5000,\r\n    2000,\r\n    1000,\r\n    500,\r\n    200,\r\n    100,\r\n    50,\r\n    20,\r\n    10,\r\n    5,\r\n    2,\r\n    1,\r\n    0.5,\r\n    0.2,\r\n    0.1,\r\n    0.05,\r\n    0.02,\r\n    0.01\r\n];\r\n","import createCheckBox from '../check-box/check-box';\r\nimport Line from './line';\r\nimport Bars from './bars';\r\nimport { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './chart.css';\r\nimport { absToRel, arrSum, boundBy, calcYBounds, findClosestIndex, getColumns, minmax } from '../../helpers/utils';\r\nimport { addDragAndDropListeners, addListener, removeListener } from '../../helpers/event-listeners';\r\nimport createMap from '../map/map';\r\nimport Tooltip from '../tooltip/tooltip';\r\nimport Grid from '../grid/grid';\r\n\r\nconst typeToConstructor = {\r\n    line: (...props) => new Line(false, ...props),\r\n    bar: (...props) => new Bars(...props),\r\n    area: (...props) => new Line(true, ...props)\r\n};\r\n\r\nconst MIN_WIN_WIDTH = 0.05;\r\n\r\nexport default (data, title) => {\r\n    const chartSvg = createSvgElement('svg', {}, 'ctr_chart');\r\n\r\n    const { colors, names, types, columns, percentage, stacked, y_scaled: doubleY } = data;\r\n\r\n    const { xColumn, yColumns, keys } = getColumns(types, columns);\r\n\r\n    let x0 = 0;\r\n    let x1 = 1;\r\n    let y0 = 0;\r\n    let y1 = 1;\r\n    let xMouse = null;\r\n    let mouseXFixed = false;\r\n\r\n    let keyToYBound = {};\r\n    let keyToGlobalYBound = {};\r\n    const getYBounds = key =>\r\n        keyToYBound[key] || (keyToYBound[key] = calcYBounds(xColumn, yColumns[key], x0, x1, types[key]));\r\n    const getGlobalYBounds = key =>\r\n        keyToGlobalYBound[key] || (keyToGlobalYBound[key] = calcYBounds(xColumn, yColumns[key], 0, 1, types[key]));\r\n    const resetYBoundsCash = () => (keyToYBound = {});\r\n\r\n    const chartViewportTransform = createSvgElement('g');\r\n    const chartAreaXTransform = createSvgElement('g');\r\n\r\n    const wrapper = createElement('crt_wrapper');\r\n    const controls = createElement('crt_controls');\r\n    const header = createElement();\r\n    header.textContent = title;\r\n\r\n    let tooltip, grid;\r\n\r\n    wrapper.appendChild(header);\r\n    wrapper.appendChild(chartSvg);\r\n    chartSvg.appendChild(chartViewportTransform);\r\n    chartViewportTransform.appendChild(chartAreaXTransform);\r\n    wrapper.appendChild(controls);\r\n\r\n    const init = () => {\r\n        let yColumnSum = null;\r\n\r\n        const visualisation = keys\r\n            .map(key => {\r\n                const res = {\r\n                    [key]: typeToConstructor[types[key]](key, xColumn, yColumns[key], colors[key], yColumnSum)\r\n                };\r\n                if (stacked) {\r\n                    yColumnSum = arrSum(yColumnSum, yColumns[key]);\r\n                }\r\n                return res;\r\n            })\r\n            .reduce((obj, line) => Object.assign(obj, line), {});\r\n\r\n        const {\r\n            mapNode,\r\n            setMapViewport,\r\n            appendBeforeOverlay,\r\n            setMapWindow,\r\n            windowLeftEdge,\r\n            windowRightEdge,\r\n            mapWindow\r\n        } = createMap();\r\n\r\n        const updateIntersections = xRel => {\r\n            const { width, height } = chartSvg.getBoundingClientRect();\r\n            if (xRel !== -1) xMouse = xRel;\r\n\r\n            const i = findClosestIndex(xColumn, xMouse);\r\n\r\n            const tooltipData =\r\n                xMouse &&\r\n                keys\r\n                    .filter(key => visualisation[key].visible)\r\n                    .map(key => ({\r\n                        y: yColumns[key][i],\r\n                        color: colors[key],\r\n                        name: names[key]\r\n                    }));\r\n            tooltip.render(absToRel(xMouse, x0, x1), xColumn[i], tooltipData);\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].setIntersectionX &&\r\n                    visualisation[key].setIntersectionX(xMouse, x0, x1, y0, y1, width, height);\r\n                visualisation[key].render && visualisation[key].render(xMouse);\r\n            });\r\n        };\r\n\r\n        const updateYArea = () => {\r\n            const { min, max } = minmax(keys.filter(key => visualisation[key].visible).map(key => getYBounds(key)));\r\n            const { min: globalMin, max: globalMax } = minmax(\r\n                keys.filter(key => visualisation[key].visible).map(key => getGlobalYBounds(key))\r\n            );\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].yChartArea = [min, max];\r\n                visualisation[key].yMapArea = [globalMin, globalMax];\r\n            });\r\n\r\n            y0 = min;\r\n            y1 = max;\r\n            grid.render(x0, x1, y0, y1);\r\n            updateIntersections(-1);\r\n        };\r\n\r\n        const deepUpdateYArea = () => {\r\n            resetYBoundsCash();\r\n            updateYArea();\r\n        };\r\n\r\n        const setUserViewport = (w, h) => {\r\n            chartViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n        };\r\n\r\n        const setXChartArea = (x0, x1) => {\r\n            chartAreaXTransform.setAttribute(\r\n                'transform',\r\n                `\r\n                    scale(${1 / (x1 - x0)} 1) \r\n                    translate(${-x0} 0)\r\n                `\r\n            );\r\n            deepUpdateYArea();\r\n        };\r\n\r\n        const updateXBounds = (a, b) => {\r\n            x0 = a;\r\n            x1 = b;\r\n            setXChartArea(x0, x1);\r\n            setMapWindow(x0, x1);\r\n        };\r\n\r\n        const mount = () => {\r\n            grid = new Grid(chartSvg);\r\n            tooltip = new Tooltip(chartSvg);\r\n\r\n            wrapper.insertBefore(mapNode, controls);\r\n\r\n            keys.reverse().forEach(key => {\r\n                chartAreaXTransform.appendChild(visualisation[key].node);\r\n            });\r\n\r\n            keys.forEach(key => {\r\n                visualisation[key].intersectionPoint &&\r\n                    chartSvg.insertBefore(visualisation[key].intersectionPoint, tooltip.transformY);\r\n\r\n                appendBeforeOverlay(visualisation[key].mapNode);\r\n                controls.appendChild(\r\n                    createCheckBox(colors[key], names[key], value => {\r\n                        visualisation[key].visible = value;\r\n                        updateYArea();\r\n                    })\r\n                );\r\n            });\r\n        };\r\n\r\n        const onResize = () => {\r\n            const { width: svgWidth, height: svgHeight } = chartSvg.getBoundingClientRect();\r\n            const { width: mapWidth, height: mapHeight } = mapNode.getBoundingClientRect();\r\n            setUserViewport(svgWidth, svgHeight);\r\n            setMapViewport(mapWidth, mapHeight);\r\n\r\n            grid.resize();\r\n            tooltip.resize();\r\n            setMapWindow(x0, x1);\r\n            updateIntersections();\r\n        };\r\n\r\n        mount();\r\n        deepUpdateYArea();\r\n        onResize();\r\n        addListener(window, 'resize', onResize);\r\n\r\n        const getMapX = x => {\r\n            const rect = mapNode.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        const getChartX = x => {\r\n            const rect = chartSvg.getBoundingClientRect();\r\n            return (x - rect.left) / rect.width;\r\n        };\r\n\r\n        addDragAndDropListeners(mapWindow, coords => {\r\n            const width = x1 - x0;\r\n            const left = getMapX(coords.x);\r\n            const right = left + width;\r\n            updateXBounds(boundBy(left, 0, 1 - width), boundBy(right, width, 1));\r\n        });\r\n        addDragAndDropListeners(windowLeftEdge, coords => {\r\n            const left = getMapX(coords.x + 10);\r\n            updateXBounds(boundBy(left, 0, x1 - MIN_WIN_WIDTH), x1);\r\n        });\r\n        addDragAndDropListeners(windowRightEdge, coords => {\r\n            const right = getMapX(coords.x);\r\n            updateXBounds(x0, boundBy(right, x0 + MIN_WIN_WIDTH, 1));\r\n        });\r\n\r\n        const onMouseMove = e => updateIntersections(x0 + (x1 - x0) * getChartX(e.clientX));\r\n        const onMouseLeave = () => {\r\n            if (!mouseXFixed) updateIntersections();\r\n        };\r\n        addListener(chartSvg, 'mousemove', onMouseMove);\r\n        addListener(chartSvg, 'mouseleave', onMouseLeave);\r\n        addListener(chartSvg, 'touchmove', e => updateIntersections(x0 + (x1 - x0) * getChartX(e.touches[0].clientX)));\r\n        addListener(chartSvg, 'mousedown', () => {\r\n            if (mouseXFixed) {\r\n                addListener(chartSvg, 'mousemove', onMouseMove);\r\n            } else {\r\n                removeListener(chartSvg, 'mousemove', onMouseMove);\r\n            }\r\n            mouseXFixed = !mouseXFixed;\r\n        });\r\n    };\r\n\r\n    return {\r\n        node: wrapper,\r\n        init\r\n    };\r\n};\r\n","import { createElement, createSvgElement } from '../../helpers/elements';\r\nimport './map.css';\r\n\r\nexport default () => {\r\n    const mapSvg = createSvgElement('svg', {}, 'map-chart');\r\n    const map = createElement('map-container');\r\n    const svgWrapper = createElement('map-svg-wrapper');\r\n    const mapViewportTransform = createSvgElement('g');\r\n\r\n    svgWrapper.appendChild(mapSvg);\r\n    map.appendChild(svgWrapper);\r\n    mapSvg.appendChild(mapViewportTransform);\r\n\r\n    const mapOverlayLeft = createSvgElement('rect', { x: 0, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapOverlayRight = createSvgElement('rect', { x: 1, y: 0, width: 0, height: 1 }, 'map-overlay');\r\n    const mapWindow = createElement('map-window', 'div');\r\n    const windowLeftEdge = createElement('map-left-edge', 'div');\r\n    const windowRightEdge = createElement('map-right-edge', 'div');\r\n\r\n    mapViewportTransform.append(mapOverlayLeft);\r\n    mapViewportTransform.append(mapOverlayRight);\r\n    map.append(mapWindow);\r\n    map.append(windowLeftEdge);\r\n    map.append(windowRightEdge);\r\n\r\n    const setMapViewport = (w, h) => {\r\n        mapViewportTransform.setAttribute('transform', `scale(${w} ${h})`);\r\n    };\r\n\r\n    const appendBeforeOverlay = node => {\r\n        mapViewportTransform.insertBefore(node, mapOverlayLeft);\r\n    };\r\n\r\n    const setMapWindow = (x0, x1) => {\r\n        mapOverlayLeft.setAttribute('width', x0);\r\n        mapOverlayRight.setAttribute('x', x1);\r\n        mapOverlayRight.setAttribute('width', 1 - x1);\r\n\r\n        const mapWidth = map.getBoundingClientRect().width;\r\n        mapWindow.style.left = `${x0 * mapWidth}px`;\r\n        mapWindow.style.width = `${(x1 - x0) * mapWidth}px`;\r\n        windowLeftEdge.style.left = `${x0 * mapWidth - 10}px`;\r\n        windowRightEdge.style.left = `${x1 * mapWidth - 1}px`;\r\n    };\r\n\r\n    return {\r\n        mapNode: map,\r\n        appendBeforeOverlay,\r\n        setMapViewport,\r\n        setMapWindow,\r\n        windowLeftEdge,\r\n        windowRightEdge,\r\n        mapWindow\r\n    };\r\n};\r\n","import './switch-button.css';\r\nimport { addListener } from '../../helpers/event-listeners';\r\n\r\nconst nightLabel = 'Switch to Day Mode';\r\nconst dayLabel = 'Switch to Night Mode';\r\n\r\nexport default () => {\r\n    const btn = document.createElement('div');\r\n    btn.id = 'btn-switch';\r\n\r\n    let night = false;\r\n    btn.textContent = dayLabel;\r\n\r\n    const switchToNight = () => {\r\n        btn.textContent = nightLabel;\r\n        document.body.className = 'night';\r\n        night = true;\r\n    };\r\n\r\n    const switchToDay = () => {\r\n        btn.textContent = dayLabel;\r\n        document.body.className = '';\r\n        night = false;\r\n    };\r\n\r\n    addListener(btn, 'click', () => {\r\n        if (night) {\r\n            switchToDay();\r\n        } else {\r\n            switchToNight();\r\n        }\r\n    });\r\n\r\n    return btn;\r\n};\r\n","import './global.css';\r\nimport createChart from './components/chart/chart';\r\nimport createFooter from './components/footer/footer';\r\nimport data1 from './data/1/overview';\r\nimport data2 from './data/2/overview';\r\nimport data3 from './data/3/overview';\r\nimport data4 from './data/4/overview';\r\nimport data5 from './data/5/overview';\r\nimport { createElement } from './helpers/elements';\r\n\r\nconst charts = createElement();\r\nconst root = document.getElementById('root');\r\nroot.appendChild(charts);\r\nroot.appendChild(createFooter());\r\n\r\n[data1].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #1');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data2].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #2');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data3].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #3');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data4].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #4');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n\r\n[data5].forEach(chartData => {\r\n    const { node, init } = createChart(chartData, 'Chart #5');\r\n    charts.appendChild(node);\r\n    init();\r\n});\r\n","import createSwitchButton from '../switch-button/switch-button';\r\nimport './footer.css';\r\n\r\nexport default () => {\r\n    const footer = document.createElement('div');\r\n    footer.id = 'footer';\r\n    footer.appendChild(createSwitchButton());\r\n    return footer;\r\n};\r\n"],"sourceRoot":""}